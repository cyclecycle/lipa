clearing ports

> lipa@0.1.0 serve /home/nickm/Documents/dev/lipa/lipa-ui
> vue-cli-service serve

Listening on port: 8085
 INFO  Starting development server...
valence_rel_db.db
 * Serving Flask app "api" (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
 DONE  Compiled successfully in 9460ms1:09:14 PM


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

  Note that the development build is not optimized.
  To create a production build, run npm run build.

 WAIT  Compiling...1:11:42 PM

 WARNING  Compiled with 1 warnings1:11:44 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.

  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:12:19 PM

 WARNING  Compiled with 3 warnings1:12:20 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:89:13:
  87 |   computed: {
  88 |     activeTemplateMatchSlotLabels() {
> 89 |       const activeTemplateMatch = this.activeTemplateMatch
     |             ^
  90 |       if (activeTemplateMatch !== null) {
  91 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  92 |         return slotLabels


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:89:59:
  87 |   computed: {
  88 |     activeTemplateMatchSlotLabels() {
> 89 |       const activeTemplateMatch = this.activeTemplateMatch
     |                                                           ^
  90 |       if (activeTemplateMatch !== null) {
  91 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  92 |         return slotLabels


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:92:26:
  90 |       if (activeTemplateMatch !== null) {
  91 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
> 92 |         return slotLabels
     |                          ^
  93 |       }  else {
  94 |         return null
  95 |       }


error: Multiple spaces found before 'else' (no-multi-spaces) at src/views/CreateTrainingExampleView.vue:93:10:
  91 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  92 |         return slotLabels
> 93 |       }  else {
     |          ^
  94 |         return null
  95 |       }
  96 |     },


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:93:15:
  91 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  92 |         return slotLabels
> 93 |       }  else {
     |               ^
  94 |         return null
  95 |       }
  96 |     },


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:94:20:
  92 |         return slotLabels
  93 |       }  else {
> 94 |         return null
     |                    ^
  95 |       }
  96 |     },
  97 |     activeTemplateMatchFeatureDict() {


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:97:35:
   95 |       }
   96 |     },
>  97 |     activeTemplateMatchFeatureDict() {
      |                                   ^
   98 |       const featureDict = this.activeTemplateMatch.feature_dict
   99 |       if (featureDict !== undefined) {
  100 |         console.log(featureDict)


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:98:64:
   96 |     },
   97 |     activeTemplateMatchFeatureDict() {
>  98 |       const featureDict = this.activeTemplateMatch.feature_dict
      |                                                                ^
   99 |       if (featureDict !== undefined) {
  100 |         console.log(featureDict)
  101 |       }


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:100:9:
   98 |       const featureDict = this.activeTemplateMatch.feature_dict
   99 |       if (featureDict !== undefined) {
> 100 |         console.log(featureDict)
      |         ^
  101 |       }
  102 |     },
  103 |   },


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:100:33:
   98 |       const featureDict = this.activeTemplateMatch.feature_dict
   99 |       if (featureDict !== undefined) {
> 100 |         console.log(featureDict)
      |                                 ^
  101 |       }
  102 |     },
  103 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:105:11:
  103 |   },
  104 |   mounted() {
> 105 |     const sentenceId = this.sentenceId;
      |           ^
  106 |     const sentenceTargetAttribute = 'sentence';
  107 |     const tokensTargetAttribute = 'tokens';
  108 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:129:15:
  127 |           headers: { order: 'match_id desc' },
  128 |         })
> 129 |         .then(rows => {
      |               ^
  130 |           const match_ids = rows.map(row => row.match_id);
  131 |           return database.loadByIds(
  132 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:130:17:
  128 |         })
  129 |         .then(rows => {
> 130 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  131 |           return database.loadByIds(
  132 |             'matches',
  133 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:135:37:
  133 |             match_ids,
  134 |             this,
> 135 |             'trainingMatchesHistory'
      |                                     ^
  136 |           );
  137 |         });
  138 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:146:25:
  144 |     roleSlotArrayToObj(roleSlots) {
  145 |       const obj = {};
> 146 |       roleSlots.forEach(roleSlot => {
      |                         ^
  147 |         const label = roleSlot.label;
  148 |         const tokens = roleSlot.tokens;
  149 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:147:15:
  145 |       const obj = {};
  146 |       roleSlots.forEach(roleSlot => {
> 147 |         const label = roleSlot.label;
      |               ^
  148 |         const tokens = roleSlot.tokens;
  149 |         obj[label] = tokens;
  150 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:148:15:
  146 |       roleSlots.forEach(roleSlot => {
  147 |         const label = roleSlot.label;
> 148 |         const tokens = roleSlot.tokens;
      |               ^
  149 |         obj[label] = tokens;
  150 |       });
  151 |       return obj;


error: Line 154 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:154:1:
  152 |     },
  153 |     submitTrainingMatch() {
> 154 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  155 |       this.loading = !this.loading;
  156 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  157 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:158:13:
  156 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  157 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 158 |       const featureDict = this.featureDict;
      |             ^
  159 |       const sentenceId = this.sentenceId;
  160 |       const matchJSON = JSON.stringify({
  161 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:13:
  157 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  158 |       const featureDict = this.featureDict;
> 159 |       const sentenceId = this.sentenceId;
      |             ^
  160 |       const matchJSON = JSON.stringify({
  161 |         slots: matchObj,
  162 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:168:7:
  166 |         data: matchJSON,
  167 |       };
> 168 |       console.log(data);
      |       ^
  169 |       database.post('matches/', data).then(matchRow => {
  170 |         const matchId = matchRow.id;
  171 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:169:44:
  167 |       };
  168 |       console.log(data);
> 169 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  170 |         const matchId = matchRow.id;
  171 |         console.log('match id:', matchId);
  172 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:171:9:
  169 |       database.post('matches/', data).then(matchRow => {
  170 |         const matchId = matchRow.id;
> 171 |         console.log('match id:', matchId);
      |         ^
  172 |         this.loading = !this.loading;
  173 |         router.push({
  174 |           path: '/calculate-pattern',


21 errors and 3 warnings found.
17 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:14:22 PM

 ERROR  Failed to compile with 1 errors1:14:23 PM

 error  in ./src/views/CreateTrainingExampleView.vue?vue&type=script&lang=js&

Syntax Error: SyntaxError: /home/nickm/Documents/dev/lipa/lipa-ui/src/views/CreateTrainingExampleView.vue: Unexpected token (88:4)

  86 |     activeTemplateMatch() {
  87 |       if (this.activeTemplateMatch != null)
> 88 |     }
     |     ^
  89 |   },
  90 |   computed: {
  91 |     activeTemplateMatchSlotLabels() {


 @ ./src/views/CreateTrainingExampleView.vue?vue&type=script&lang=js& 1:0-294 1:310-313 1:315-606 1:315-606
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js

 WAIT  Compiling...1:14:26 PM

 ERROR  Failed to compile with 1 errors1:14:26 PM

 error  in ./src/views/CreateTrainingExampleView.vue?vue&type=script&lang=js&

Syntax Error: SyntaxError: /home/nickm/Documents/dev/lipa/lipa-ui/src/views/CreateTrainingExampleView.vue: Unexpected token (88:4)

  86 |     activeTemplateMatch() {
  87 |       if (this.activeTemplateMatch != null)
> 88 |     }
     |     ^
  89 |   },
  90 |   computed: {
  91 |     activeTemplateMatchSlotLabels() {


 @ ./src/views/CreateTrainingExampleView.vue?vue&type=script&lang=js& 1:0-294 1:310-313 1:315-606 1:315-606
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js

 WAIT  Compiling...1:14:37 PM

 ERROR  Failed to compile with 1 errors1:14:38 PM

 error  in ./src/views/CreateTrainingExampleView.vue?vue&type=script&lang=js&

Syntax Error: SyntaxError: /home/nickm/Documents/dev/lipa/lipa-ui/src/views/CreateTrainingExampleView.vue: Unexpected token (88:4)

  86 |     activeTemplateMatch() {
  87 |       if (this.activeTemplateMatch != null)
> 88 |     }
     |     ^
  89 |   },
  90 |   computed: {
  91 |     activeTemplateMatchSlotLabels() {


 @ ./src/views/CreateTrainingExampleView.vue?vue&type=script&lang=js& 1:0-294 1:310-313 1:315-606 1:315-606
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js

 WAIT  Compiling...1:15:01 PM

 WARNING  Compiled with 3 warnings1:15:02 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: Empty block statement (no-empty) at src/views/CreateTrainingExampleView.vue:87:45:
  85 |     },
  86 |     activeTemplateMatch() {
> 87 |       if (this.activeTemplateMatch != null) {
     |                                             ^
  88 |         
  89 |       }
  90 |     }


error: Trailing spaces not allowed (no-trailing-spaces) at src/views/CreateTrainingExampleView.vue:88:1:
  86 |     activeTemplateMatch() {
  87 |       if (this.activeTemplateMatch != null) {
> 88 |         
     | ^
  89 |       }
  90 |     }
  91 |   },


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:90:6:
  88 |         
  89 |       }
> 90 |     }
     |      ^
  91 |   },
  92 |   computed: {
  93 |     activeTemplateMatchSlotLabels() {


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:94:13:
  92 |   computed: {
  93 |     activeTemplateMatchSlotLabels() {
> 94 |       const activeTemplateMatch = this.activeTemplateMatch
     |             ^
  95 |       if (activeTemplateMatch !== null) {
  96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  97 |         return slotLabels


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:94:59:
  92 |   computed: {
  93 |     activeTemplateMatchSlotLabels() {
> 94 |       const activeTemplateMatch = this.activeTemplateMatch
     |                                                           ^
  95 |       if (activeTemplateMatch !== null) {
  96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  97 |         return slotLabels


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:97:26:
   95 |       if (activeTemplateMatch !== null) {
   96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
>  97 |         return slotLabels
      |                          ^
   98 |       }  else {
   99 |         return null
  100 |       }


error: Multiple spaces found before 'else' (no-multi-spaces) at src/views/CreateTrainingExampleView.vue:98:10:
   96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
   97 |         return slotLabels
>  98 |       }  else {
      |          ^
   99 |         return null
  100 |       }
  101 |     },


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:98:15:
   96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
   97 |         return slotLabels
>  98 |       }  else {
      |               ^
   99 |         return null
  100 |       }
  101 |     },


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:99:20:
   97 |         return slotLabels
   98 |       }  else {
>  99 |         return null
      |                    ^
  100 |       }
  101 |     },
  102 |     activeTemplateMatchFeatureDict() {


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:102:35:
  100 |       }
  101 |     },
> 102 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  103 |       const featureDict = this.activeTemplateMatch.feature_dict
  104 |       if (featureDict !== undefined) {
  105 |         console.log(featureDict)


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:103:64:
  101 |     },
  102 |     activeTemplateMatchFeatureDict() {
> 103 |       const featureDict = this.activeTemplateMatch.feature_dict
      |                                                                ^
  104 |       if (featureDict !== undefined) {
  105 |         console.log(featureDict)
  106 |       }


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:105:9:
  103 |       const featureDict = this.activeTemplateMatch.feature_dict
  104 |       if (featureDict !== undefined) {
> 105 |         console.log(featureDict)
      |         ^
  106 |       }
  107 |     },
  108 |   },


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:105:33:
  103 |       const featureDict = this.activeTemplateMatch.feature_dict
  104 |       if (featureDict !== undefined) {
> 105 |         console.log(featureDict)
      |                                 ^
  106 |       }
  107 |     },
  108 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:110:11:
  108 |   },
  109 |   mounted() {
> 110 |     const sentenceId = this.sentenceId;
      |           ^
  111 |     const sentenceTargetAttribute = 'sentence';
  112 |     const tokensTargetAttribute = 'tokens';
  113 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:134:15:
  132 |           headers: { order: 'match_id desc' },
  133 |         })
> 134 |         .then(rows => {
      |               ^
  135 |           const match_ids = rows.map(row => row.match_id);
  136 |           return database.loadByIds(
  137 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:135:17:
  133 |         })
  134 |         .then(rows => {
> 135 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  136 |           return database.loadByIds(
  137 |             'matches',
  138 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:140:37:
  138 |             match_ids,
  139 |             this,
> 140 |             'trainingMatchesHistory'
      |                                     ^
  141 |           );
  142 |         });
  143 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:151:25:
  149 |     roleSlotArrayToObj(roleSlots) {
  150 |       const obj = {};
> 151 |       roleSlots.forEach(roleSlot => {
      |                         ^
  152 |         const label = roleSlot.label;
  153 |         const tokens = roleSlot.tokens;
  154 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:152:15:
  150 |       const obj = {};
  151 |       roleSlots.forEach(roleSlot => {
> 152 |         const label = roleSlot.label;
      |               ^
  153 |         const tokens = roleSlot.tokens;
  154 |         obj[label] = tokens;
  155 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:153:15:
  151 |       roleSlots.forEach(roleSlot => {
  152 |         const label = roleSlot.label;
> 153 |         const tokens = roleSlot.tokens;
      |               ^
  154 |         obj[label] = tokens;
  155 |       });
  156 |       return obj;


error: Line 159 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:159:1:
  157 |     },
  158 |     submitTrainingMatch() {
> 159 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  160 |       this.loading = !this.loading;
  161 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  162 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:163:13:
  161 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  162 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 163 |       const featureDict = this.featureDict;
      |             ^
  164 |       const sentenceId = this.sentenceId;
  165 |       const matchJSON = JSON.stringify({
  166 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:164:13:
  162 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  163 |       const featureDict = this.featureDict;
> 164 |       const sentenceId = this.sentenceId;
      |             ^
  165 |       const matchJSON = JSON.stringify({
  166 |         slots: matchObj,
  167 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:173:7:
  171 |         data: matchJSON,
  172 |       };
> 173 |       console.log(data);
      |       ^
  174 |       database.post('matches/', data).then(matchRow => {
  175 |         const matchId = matchRow.id;
  176 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:174:44:
  172 |       };
  173 |       console.log(data);
> 174 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  175 |         const matchId = matchRow.id;
  176 |         console.log('match id:', matchId);
  177 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:176:9:
  174 |       database.post('matches/', data).then(matchRow => {
  175 |         const matchId = matchRow.id;
> 176 |         console.log('match id:', matchId);
      |         ^
  177 |         this.loading = !this.loading;
  178 |         router.push({
  179 |           path: '/calculate-pattern',


24 errors and 3 warnings found.
19 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:16:51 PM

 WARNING  Compiled with 3 warnings1:16:52 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: Empty block statement (no-empty) at src/views/CreateTrainingExampleView.vue:87:86:
  85 |     },
  86 |     activeTemplateMatch() {
> 87 |       if (this.activeTemplateMatch != null && this.activeTemplateMatch.feature_dict) {
     |                                                                                      ^
  88 | 
  89 |       }
  90 |     }


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:90:6:
  88 | 
  89 |       }
> 90 |     }
     |      ^
  91 |   },
  92 |   computed: {
  93 |     activeTemplateMatchSlotLabels() {


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:94:13:
  92 |   computed: {
  93 |     activeTemplateMatchSlotLabels() {
> 94 |       const activeTemplateMatch = this.activeTemplateMatch
     |             ^
  95 |       if (activeTemplateMatch !== null) {
  96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  97 |         return slotLabels


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:94:59:
  92 |   computed: {
  93 |     activeTemplateMatchSlotLabels() {
> 94 |       const activeTemplateMatch = this.activeTemplateMatch
     |                                                           ^
  95 |       if (activeTemplateMatch !== null) {
  96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  97 |         return slotLabels


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:97:26:
   95 |       if (activeTemplateMatch !== null) {
   96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
>  97 |         return slotLabels
      |                          ^
   98 |       }  else {
   99 |         return null
  100 |       }


error: Multiple spaces found before 'else' (no-multi-spaces) at src/views/CreateTrainingExampleView.vue:98:10:
   96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
   97 |         return slotLabels
>  98 |       }  else {
      |          ^
   99 |         return null
  100 |       }
  101 |     },


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:98:15:
   96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
   97 |         return slotLabels
>  98 |       }  else {
      |               ^
   99 |         return null
  100 |       }
  101 |     },


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:99:20:
   97 |         return slotLabels
   98 |       }  else {
>  99 |         return null
      |                    ^
  100 |       }
  101 |     },
  102 |     activeTemplateMatchFeatureDict() {


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:102:35:
  100 |       }
  101 |     },
> 102 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  103 |       const featureDict = this.activeTemplateMatch.feature_dict
  104 |       if (featureDict !== undefined) {
  105 |         console.log(featureDict)


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:103:64:
  101 |     },
  102 |     activeTemplateMatchFeatureDict() {
> 103 |       const featureDict = this.activeTemplateMatch.feature_dict
      |                                                                ^
  104 |       if (featureDict !== undefined) {
  105 |         console.log(featureDict)
  106 |       }


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:105:9:
  103 |       const featureDict = this.activeTemplateMatch.feature_dict
  104 |       if (featureDict !== undefined) {
> 105 |         console.log(featureDict)
      |         ^
  106 |       }
  107 |     },
  108 |   },


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:105:33:
  103 |       const featureDict = this.activeTemplateMatch.feature_dict
  104 |       if (featureDict !== undefined) {
> 105 |         console.log(featureDict)
      |                                 ^
  106 |       }
  107 |     },
  108 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:110:11:
  108 |   },
  109 |   mounted() {
> 110 |     const sentenceId = this.sentenceId;
      |           ^
  111 |     const sentenceTargetAttribute = 'sentence';
  112 |     const tokensTargetAttribute = 'tokens';
  113 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:134:15:
  132 |           headers: { order: 'match_id desc' },
  133 |         })
> 134 |         .then(rows => {
      |               ^
  135 |           const match_ids = rows.map(row => row.match_id);
  136 |           return database.loadByIds(
  137 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:135:17:
  133 |         })
  134 |         .then(rows => {
> 135 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  136 |           return database.loadByIds(
  137 |             'matches',
  138 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:140:37:
  138 |             match_ids,
  139 |             this,
> 140 |             'trainingMatchesHistory'
      |                                     ^
  141 |           );
  142 |         });
  143 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:151:25:
  149 |     roleSlotArrayToObj(roleSlots) {
  150 |       const obj = {};
> 151 |       roleSlots.forEach(roleSlot => {
      |                         ^
  152 |         const label = roleSlot.label;
  153 |         const tokens = roleSlot.tokens;
  154 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:152:15:
  150 |       const obj = {};
  151 |       roleSlots.forEach(roleSlot => {
> 152 |         const label = roleSlot.label;
      |               ^
  153 |         const tokens = roleSlot.tokens;
  154 |         obj[label] = tokens;
  155 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:153:15:
  151 |       roleSlots.forEach(roleSlot => {
  152 |         const label = roleSlot.label;
> 153 |         const tokens = roleSlot.tokens;
      |               ^
  154 |         obj[label] = tokens;
  155 |       });
  156 |       return obj;


error: Line 159 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:159:1:
  157 |     },
  158 |     submitTrainingMatch() {
> 159 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  160 |       this.loading = !this.loading;
  161 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  162 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:163:13:
  161 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  162 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 163 |       const featureDict = this.featureDict;
      |             ^
  164 |       const sentenceId = this.sentenceId;
  165 |       const matchJSON = JSON.stringify({
  166 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:164:13:
  162 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  163 |       const featureDict = this.featureDict;
> 164 |       const sentenceId = this.sentenceId;
      |             ^
  165 |       const matchJSON = JSON.stringify({
  166 |         slots: matchObj,
  167 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:173:7:
  171 |         data: matchJSON,
  172 |       };
> 173 |       console.log(data);
      |       ^
  174 |       database.post('matches/', data).then(matchRow => {
  175 |         const matchId = matchRow.id;
  176 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:174:44:
  172 |       };
  173 |       console.log(data);
> 174 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  175 |         const matchId = matchRow.id;
  176 |         console.log('match id:', matchId);
  177 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:176:9:
  174 |       database.post('matches/', data).then(matchRow => {
  175 |         const matchId = matchRow.id;
> 176 |         console.log('match id:', matchId);
      |         ^
  177 |         this.loading = !this.loading;
  178 |         router.push({
  179 |           path: '/calculate-pattern',


23 errors and 3 warnings found.
18 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:16:52 PM

 WARNING  Compiled with 3 warnings1:16:53 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: Empty block statement (no-empty) at src/views/CreateTrainingExampleView.vue:87:86:
  85 |     },
  86 |     activeTemplateMatch() {
> 87 |       if (this.activeTemplateMatch != null && this.activeTemplateMatch.feature_dict) {
     |                                                                                      ^
  88 | 
  89 |       }
  90 |     }


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:90:6:
  88 | 
  89 |       }
> 90 |     }
     |      ^
  91 |   },
  92 |   computed: {
  93 |     activeTemplateMatchSlotLabels() {


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:94:13:
  92 |   computed: {
  93 |     activeTemplateMatchSlotLabels() {
> 94 |       const activeTemplateMatch = this.activeTemplateMatch
     |             ^
  95 |       if (activeTemplateMatch !== null) {
  96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  97 |         return slotLabels


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:94:59:
  92 |   computed: {
  93 |     activeTemplateMatchSlotLabels() {
> 94 |       const activeTemplateMatch = this.activeTemplateMatch
     |                                                           ^
  95 |       if (activeTemplateMatch !== null) {
  96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  97 |         return slotLabels


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:97:26:
   95 |       if (activeTemplateMatch !== null) {
   96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
>  97 |         return slotLabels
      |                          ^
   98 |       }  else {
   99 |         return null
  100 |       }


error: Multiple spaces found before 'else' (no-multi-spaces) at src/views/CreateTrainingExampleView.vue:98:10:
   96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
   97 |         return slotLabels
>  98 |       }  else {
      |          ^
   99 |         return null
  100 |       }
  101 |     },


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:98:15:
   96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
   97 |         return slotLabels
>  98 |       }  else {
      |               ^
   99 |         return null
  100 |       }
  101 |     },


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:99:20:
   97 |         return slotLabels
   98 |       }  else {
>  99 |         return null
      |                    ^
  100 |       }
  101 |     },
  102 |     activeTemplateMatchFeatureDict() {


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:102:35:
  100 |       }
  101 |     },
> 102 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  103 |       const featureDict = this.activeTemplateMatch.feature_dict
  104 |       if (featureDict !== undefined) {
  105 |         console.log(featureDict)


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:103:64:
  101 |     },
  102 |     activeTemplateMatchFeatureDict() {
> 103 |       const featureDict = this.activeTemplateMatch.feature_dict
      |                                                                ^
  104 |       if (featureDict !== undefined) {
  105 |         console.log(featureDict)
  106 |       }


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:105:9:
  103 |       const featureDict = this.activeTemplateMatch.feature_dict
  104 |       if (featureDict !== undefined) {
> 105 |         console.log(featureDict)
      |         ^
  106 |       }
  107 |     },
  108 |   },


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:105:33:
  103 |       const featureDict = this.activeTemplateMatch.feature_dict
  104 |       if (featureDict !== undefined) {
> 105 |         console.log(featureDict)
      |                                 ^
  106 |       }
  107 |     },
  108 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:110:11:
  108 |   },
  109 |   mounted() {
> 110 |     const sentenceId = this.sentenceId;
      |           ^
  111 |     const sentenceTargetAttribute = 'sentence';
  112 |     const tokensTargetAttribute = 'tokens';
  113 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:134:15:
  132 |           headers: { order: 'match_id desc' },
  133 |         })
> 134 |         .then(rows => {
      |               ^
  135 |           const match_ids = rows.map(row => row.match_id);
  136 |           return database.loadByIds(
  137 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:135:17:
  133 |         })
  134 |         .then(rows => {
> 135 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  136 |           return database.loadByIds(
  137 |             'matches',
  138 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:140:37:
  138 |             match_ids,
  139 |             this,
> 140 |             'trainingMatchesHistory'
      |                                     ^
  141 |           );
  142 |         });
  143 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:151:25:
  149 |     roleSlotArrayToObj(roleSlots) {
  150 |       const obj = {};
> 151 |       roleSlots.forEach(roleSlot => {
      |                         ^
  152 |         const label = roleSlot.label;
  153 |         const tokens = roleSlot.tokens;
  154 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:152:15:
  150 |       const obj = {};
  151 |       roleSlots.forEach(roleSlot => {
> 152 |         const label = roleSlot.label;
      |               ^
  153 |         const tokens = roleSlot.tokens;
  154 |         obj[label] = tokens;
  155 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:153:15:
  151 |       roleSlots.forEach(roleSlot => {
  152 |         const label = roleSlot.label;
> 153 |         const tokens = roleSlot.tokens;
      |               ^
  154 |         obj[label] = tokens;
  155 |       });
  156 |       return obj;


error: Line 159 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:159:1:
  157 |     },
  158 |     submitTrainingMatch() {
> 159 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  160 |       this.loading = !this.loading;
  161 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  162 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:163:13:
  161 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  162 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 163 |       const featureDict = this.featureDict;
      |             ^
  164 |       const sentenceId = this.sentenceId;
  165 |       const matchJSON = JSON.stringify({
  166 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:164:13:
  162 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  163 |       const featureDict = this.featureDict;
> 164 |       const sentenceId = this.sentenceId;
      |             ^
  165 |       const matchJSON = JSON.stringify({
  166 |         slots: matchObj,
  167 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:173:7:
  171 |         data: matchJSON,
  172 |       };
> 173 |       console.log(data);
      |       ^
  174 |       database.post('matches/', data).then(matchRow => {
  175 |         const matchId = matchRow.id;
  176 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:174:44:
  172 |       };
  173 |       console.log(data);
> 174 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  175 |         const matchId = matchRow.id;
  176 |         console.log('match id:', matchId);
  177 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:176:9:
  174 |       database.post('matches/', data).then(matchRow => {
  175 |         const matchId = matchRow.id;
> 176 |         console.log('match id:', matchId);
      |         ^
  177 |         this.loading = !this.loading;
  178 |         router.push({
  179 |           path: '/calculate-pattern',


23 errors and 3 warnings found.
18 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:16:56 PM

 WARNING  Compiled with 3 warnings1:16:57 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: Empty block statement (no-empty) at src/views/CreateTrainingExampleView.vue:87:100:
  85 |     },
  86 |     activeTemplateMatch() {
> 87 |       if (this.activeTemplateMatch != null && this.activeTemplateMatch.feature_dict !== undefined) {
     |                                                                                                    ^
  88 | 
  89 |       }
  90 |     }


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:90:6:
  88 | 
  89 |       }
> 90 |     }
     |      ^
  91 |   },
  92 |   computed: {
  93 |     activeTemplateMatchSlotLabels() {


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:94:13:
  92 |   computed: {
  93 |     activeTemplateMatchSlotLabels() {
> 94 |       const activeTemplateMatch = this.activeTemplateMatch
     |             ^
  95 |       if (activeTemplateMatch !== null) {
  96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  97 |         return slotLabels


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:94:59:
  92 |   computed: {
  93 |     activeTemplateMatchSlotLabels() {
> 94 |       const activeTemplateMatch = this.activeTemplateMatch
     |                                                           ^
  95 |       if (activeTemplateMatch !== null) {
  96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  97 |         return slotLabels


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:97:26:
   95 |       if (activeTemplateMatch !== null) {
   96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
>  97 |         return slotLabels
      |                          ^
   98 |       }  else {
   99 |         return null
  100 |       }


error: Multiple spaces found before 'else' (no-multi-spaces) at src/views/CreateTrainingExampleView.vue:98:10:
   96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
   97 |         return slotLabels
>  98 |       }  else {
      |          ^
   99 |         return null
  100 |       }
  101 |     },


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:98:15:
   96 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
   97 |         return slotLabels
>  98 |       }  else {
      |               ^
   99 |         return null
  100 |       }
  101 |     },


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:99:20:
   97 |         return slotLabels
   98 |       }  else {
>  99 |         return null
      |                    ^
  100 |       }
  101 |     },
  102 |     activeTemplateMatchFeatureDict() {


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:102:35:
  100 |       }
  101 |     },
> 102 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  103 |       const featureDict = this.activeTemplateMatch.feature_dict
  104 |       if (featureDict !== undefined) {
  105 |         console.log(featureDict)


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:103:64:
  101 |     },
  102 |     activeTemplateMatchFeatureDict() {
> 103 |       const featureDict = this.activeTemplateMatch.feature_dict
      |                                                                ^
  104 |       if (featureDict !== undefined) {
  105 |         console.log(featureDict)
  106 |       }


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:105:9:
  103 |       const featureDict = this.activeTemplateMatch.feature_dict
  104 |       if (featureDict !== undefined) {
> 105 |         console.log(featureDict)
      |         ^
  106 |       }
  107 |     },
  108 |   },


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:105:33:
  103 |       const featureDict = this.activeTemplateMatch.feature_dict
  104 |       if (featureDict !== undefined) {
> 105 |         console.log(featureDict)
      |                                 ^
  106 |       }
  107 |     },
  108 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:110:11:
  108 |   },
  109 |   mounted() {
> 110 |     const sentenceId = this.sentenceId;
      |           ^
  111 |     const sentenceTargetAttribute = 'sentence';
  112 |     const tokensTargetAttribute = 'tokens';
  113 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:134:15:
  132 |           headers: { order: 'match_id desc' },
  133 |         })
> 134 |         .then(rows => {
      |               ^
  135 |           const match_ids = rows.map(row => row.match_id);
  136 |           return database.loadByIds(
  137 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:135:17:
  133 |         })
  134 |         .then(rows => {
> 135 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  136 |           return database.loadByIds(
  137 |             'matches',
  138 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:140:37:
  138 |             match_ids,
  139 |             this,
> 140 |             'trainingMatchesHistory'
      |                                     ^
  141 |           );
  142 |         });
  143 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:151:25:
  149 |     roleSlotArrayToObj(roleSlots) {
  150 |       const obj = {};
> 151 |       roleSlots.forEach(roleSlot => {
      |                         ^
  152 |         const label = roleSlot.label;
  153 |         const tokens = roleSlot.tokens;
  154 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:152:15:
  150 |       const obj = {};
  151 |       roleSlots.forEach(roleSlot => {
> 152 |         const label = roleSlot.label;
      |               ^
  153 |         const tokens = roleSlot.tokens;
  154 |         obj[label] = tokens;
  155 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:153:15:
  151 |       roleSlots.forEach(roleSlot => {
  152 |         const label = roleSlot.label;
> 153 |         const tokens = roleSlot.tokens;
      |               ^
  154 |         obj[label] = tokens;
  155 |       });
  156 |       return obj;


error: Line 159 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:159:1:
  157 |     },
  158 |     submitTrainingMatch() {
> 159 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  160 |       this.loading = !this.loading;
  161 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  162 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:163:13:
  161 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  162 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 163 |       const featureDict = this.featureDict;
      |             ^
  164 |       const sentenceId = this.sentenceId;
  165 |       const matchJSON = JSON.stringify({
  166 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:164:13:
  162 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  163 |       const featureDict = this.featureDict;
> 164 |       const sentenceId = this.sentenceId;
      |             ^
  165 |       const matchJSON = JSON.stringify({
  166 |         slots: matchObj,
  167 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:173:7:
  171 |         data: matchJSON,
  172 |       };
> 173 |       console.log(data);
      |       ^
  174 |       database.post('matches/', data).then(matchRow => {
  175 |         const matchId = matchRow.id;
  176 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:174:44:
  172 |       };
  173 |       console.log(data);
> 174 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  175 |         const matchId = matchRow.id;
  176 |         console.log('match id:', matchId);
  177 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:176:9:
  174 |       database.post('matches/', data).then(matchRow => {
  175 |         const matchId = matchRow.id;
> 176 |         console.log('match id:', matchId);
      |         ^
  177 |         this.loading = !this.loading;
  178 |         router.push({
  179 |           path: '/calculate-pattern',


23 errors and 3 warnings found.
18 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:17:01 PM

 WARNING  Compiled with 3 warnings1:17:02 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         


error: Empty block statement (no-empty) at src/views/CreateTrainingExampleView.vue:90:9:
  88 |         this.activeTemplateMatch != null &&
  89 |         this.activeTemplateMatch.feature_dict !== undefined
> 90 |       ) {
     |         ^
  91 |         
  92 |       }
  93 |     },


error: Trailing spaces not allowed (no-trailing-spaces) at src/views/CreateTrainingExampleView.vue:91:1:
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
> 91 |         
     | ^
  92 |       }
  93 |     },
  94 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:97:13:
   95 |   computed: {
   96 |     activeTemplateMatchSlotLabels() {
>  97 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
   98 |       if (activeTemplateMatch !== null) {
   99 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  100 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:101:14:
   99 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  100 |         return slotLabels;
> 101 |       } else {
      |              ^
  102 |         return null;
  103 |       }
  104 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:105:35:
  103 |       }
  104 |     },
> 105 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  106 |       const featureDict = this.activeTemplateMatch.feature_dict;
  107 |       if (featureDict !== undefined) {
  108 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:108:9:
  106 |       const featureDict = this.activeTemplateMatch.feature_dict;
  107 |       if (featureDict !== undefined) {
> 108 |         console.log(featureDict);
      |         ^
  109 |       }
  110 |     },
  111 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:113:11:
  111 |   },
  112 |   mounted() {
> 113 |     const sentenceId = this.sentenceId;
      |           ^
  114 |     const sentenceTargetAttribute = 'sentence';
  115 |     const tokensTargetAttribute = 'tokens';
  116 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:137:15:
  135 |           headers: { order: 'match_id desc' },
  136 |         })
> 137 |         .then(rows => {
      |               ^
  138 |           const match_ids = rows.map(row => row.match_id);
  139 |           return database.loadByIds(
  140 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:138:17:
  136 |         })
  137 |         .then(rows => {
> 138 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  139 |           return database.loadByIds(
  140 |             'matches',
  141 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:143:37:
  141 |             match_ids,
  142 |             this,
> 143 |             'trainingMatchesHistory'
      |                                     ^
  144 |           );
  145 |         });
  146 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:154:25:
  152 |     roleSlotArrayToObj(roleSlots) {
  153 |       const obj = {};
> 154 |       roleSlots.forEach(roleSlot => {
      |                         ^
  155 |         const label = roleSlot.label;
  156 |         const tokens = roleSlot.tokens;
  157 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:155:15:
  153 |       const obj = {};
  154 |       roleSlots.forEach(roleSlot => {
> 155 |         const label = roleSlot.label;
      |               ^
  156 |         const tokens = roleSlot.tokens;
  157 |         obj[label] = tokens;
  158 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:156:15:
  154 |       roleSlots.forEach(roleSlot => {
  155 |         const label = roleSlot.label;
> 156 |         const tokens = roleSlot.tokens;
      |               ^
  157 |         obj[label] = tokens;
  158 |       });
  159 |       return obj;


error: Line 162 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:162:1:
  160 |     },
  161 |     submitTrainingMatch() {
> 162 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  163 |       this.loading = !this.loading;
  164 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:166:13:
  164 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 166 |       const featureDict = this.featureDict;
      |             ^
  167 |       const sentenceId = this.sentenceId;
  168 |       const matchJSON = JSON.stringify({
  169 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:167:13:
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  166 |       const featureDict = this.featureDict;
> 167 |       const sentenceId = this.sentenceId;
      |             ^
  168 |       const matchJSON = JSON.stringify({
  169 |         slots: matchObj,
  170 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:176:7:
  174 |         data: matchJSON,
  175 |       };
> 176 |       console.log(data);
      |       ^
  177 |       database.post('matches/', data).then(matchRow => {
  178 |         const matchId = matchRow.id;
  179 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:177:44:
  175 |       };
  176 |       console.log(data);
> 177 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  178 |         const matchId = matchRow.id;
  179 |         console.log('match id:', matchId);
  180 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:179:9:
  177 |       database.post('matches/', data).then(matchRow => {
  178 |         const matchId = matchRow.id;
> 179 |         console.log('match id:', matchId);
      |         ^
  180 |         this.loading = !this.loading;
  181 |         router.push({
  182 |           path: '/calculate-pattern',


18 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:17:03 PM

 WARNING  Compiled with 3 warnings1:17:03 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         


error: Empty block statement (no-empty) at src/views/CreateTrainingExampleView.vue:90:9:
  88 |         this.activeTemplateMatch != null &&
  89 |         this.activeTemplateMatch.feature_dict !== undefined
> 90 |       ) {
     |         ^
  91 |         
  92 |       }
  93 |     },


error: Trailing spaces not allowed (no-trailing-spaces) at src/views/CreateTrainingExampleView.vue:91:1:
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
> 91 |         
     | ^
  92 |       }
  93 |     },
  94 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:97:13:
   95 |   computed: {
   96 |     activeTemplateMatchSlotLabels() {
>  97 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
   98 |       if (activeTemplateMatch !== null) {
   99 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  100 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:101:14:
   99 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  100 |         return slotLabels;
> 101 |       } else {
      |              ^
  102 |         return null;
  103 |       }
  104 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:105:35:
  103 |       }
  104 |     },
> 105 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  106 |       const featureDict = this.activeTemplateMatch.feature_dict;
  107 |       if (featureDict !== undefined) {
  108 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:108:9:
  106 |       const featureDict = this.activeTemplateMatch.feature_dict;
  107 |       if (featureDict !== undefined) {
> 108 |         console.log(featureDict);
      |         ^
  109 |       }
  110 |     },
  111 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:113:11:
  111 |   },
  112 |   mounted() {
> 113 |     const sentenceId = this.sentenceId;
      |           ^
  114 |     const sentenceTargetAttribute = 'sentence';
  115 |     const tokensTargetAttribute = 'tokens';
  116 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:137:15:
  135 |           headers: { order: 'match_id desc' },
  136 |         })
> 137 |         .then(rows => {
      |               ^
  138 |           const match_ids = rows.map(row => row.match_id);
  139 |           return database.loadByIds(
  140 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:138:17:
  136 |         })
  137 |         .then(rows => {
> 138 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  139 |           return database.loadByIds(
  140 |             'matches',
  141 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:143:37:
  141 |             match_ids,
  142 |             this,
> 143 |             'trainingMatchesHistory'
      |                                     ^
  144 |           );
  145 |         });
  146 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:154:25:
  152 |     roleSlotArrayToObj(roleSlots) {
  153 |       const obj = {};
> 154 |       roleSlots.forEach(roleSlot => {
      |                         ^
  155 |         const label = roleSlot.label;
  156 |         const tokens = roleSlot.tokens;
  157 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:155:15:
  153 |       const obj = {};
  154 |       roleSlots.forEach(roleSlot => {
> 155 |         const label = roleSlot.label;
      |               ^
  156 |         const tokens = roleSlot.tokens;
  157 |         obj[label] = tokens;
  158 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:156:15:
  154 |       roleSlots.forEach(roleSlot => {
  155 |         const label = roleSlot.label;
> 156 |         const tokens = roleSlot.tokens;
      |               ^
  157 |         obj[label] = tokens;
  158 |       });
  159 |       return obj;


error: Line 162 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:162:1:
  160 |     },
  161 |     submitTrainingMatch() {
> 162 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  163 |       this.loading = !this.loading;
  164 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:166:13:
  164 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 166 |       const featureDict = this.featureDict;
      |             ^
  167 |       const sentenceId = this.sentenceId;
  168 |       const matchJSON = JSON.stringify({
  169 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:167:13:
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  166 |       const featureDict = this.featureDict;
> 167 |       const sentenceId = this.sentenceId;
      |             ^
  168 |       const matchJSON = JSON.stringify({
  169 |         slots: matchObj,
  170 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:176:7:
  174 |         data: matchJSON,
  175 |       };
> 176 |       console.log(data);
      |       ^
  177 |       database.post('matches/', data).then(matchRow => {
  178 |         const matchId = matchRow.id;
  179 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:177:44:
  175 |       };
  176 |       console.log(data);
> 177 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  178 |         const matchId = matchRow.id;
  179 |         console.log('match id:', matchId);
  180 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:179:9:
  177 |       database.post('matches/', data).then(matchRow => {
  178 |         const matchId = matchRow.id;
> 179 |         console.log('match id:', matchId);
      |         ^
  180 |         this.loading = !this.loading;
  181 |         router.push({
  182 |           path: '/calculate-pattern',


18 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:17:03 PM

 WARNING  Compiled with 3 warnings1:17:04 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         


error: Empty block statement (no-empty) at src/views/CreateTrainingExampleView.vue:90:9:
  88 |         this.activeTemplateMatch != null &&
  89 |         this.activeTemplateMatch.feature_dict !== undefined
> 90 |       ) {
     |         ^
  91 |         
  92 |       }
  93 |     },


error: Trailing spaces not allowed (no-trailing-spaces) at src/views/CreateTrainingExampleView.vue:91:1:
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
> 91 |         
     | ^
  92 |       }
  93 |     },
  94 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:97:13:
   95 |   computed: {
   96 |     activeTemplateMatchSlotLabels() {
>  97 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
   98 |       if (activeTemplateMatch !== null) {
   99 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  100 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:101:14:
   99 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  100 |         return slotLabels;
> 101 |       } else {
      |              ^
  102 |         return null;
  103 |       }
  104 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:105:35:
  103 |       }
  104 |     },
> 105 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  106 |       const featureDict = this.activeTemplateMatch.feature_dict;
  107 |       if (featureDict !== undefined) {
  108 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:108:9:
  106 |       const featureDict = this.activeTemplateMatch.feature_dict;
  107 |       if (featureDict !== undefined) {
> 108 |         console.log(featureDict);
      |         ^
  109 |       }
  110 |     },
  111 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:113:11:
  111 |   },
  112 |   mounted() {
> 113 |     const sentenceId = this.sentenceId;
      |           ^
  114 |     const sentenceTargetAttribute = 'sentence';
  115 |     const tokensTargetAttribute = 'tokens';
  116 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:137:15:
  135 |           headers: { order: 'match_id desc' },
  136 |         })
> 137 |         .then(rows => {
      |               ^
  138 |           const match_ids = rows.map(row => row.match_id);
  139 |           return database.loadByIds(
  140 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:138:17:
  136 |         })
  137 |         .then(rows => {
> 138 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  139 |           return database.loadByIds(
  140 |             'matches',
  141 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:143:37:
  141 |             match_ids,
  142 |             this,
> 143 |             'trainingMatchesHistory'
      |                                     ^
  144 |           );
  145 |         });
  146 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:154:25:
  152 |     roleSlotArrayToObj(roleSlots) {
  153 |       const obj = {};
> 154 |       roleSlots.forEach(roleSlot => {
      |                         ^
  155 |         const label = roleSlot.label;
  156 |         const tokens = roleSlot.tokens;
  157 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:155:15:
  153 |       const obj = {};
  154 |       roleSlots.forEach(roleSlot => {
> 155 |         const label = roleSlot.label;
      |               ^
  156 |         const tokens = roleSlot.tokens;
  157 |         obj[label] = tokens;
  158 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:156:15:
  154 |       roleSlots.forEach(roleSlot => {
  155 |         const label = roleSlot.label;
> 156 |         const tokens = roleSlot.tokens;
      |               ^
  157 |         obj[label] = tokens;
  158 |       });
  159 |       return obj;


error: Line 162 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:162:1:
  160 |     },
  161 |     submitTrainingMatch() {
> 162 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  163 |       this.loading = !this.loading;
  164 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:166:13:
  164 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 166 |       const featureDict = this.featureDict;
      |             ^
  167 |       const sentenceId = this.sentenceId;
  168 |       const matchJSON = JSON.stringify({
  169 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:167:13:
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  166 |       const featureDict = this.featureDict;
> 167 |       const sentenceId = this.sentenceId;
      |             ^
  168 |       const matchJSON = JSON.stringify({
  169 |         slots: matchObj,
  170 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:176:7:
  174 |         data: matchJSON,
  175 |       };
> 176 |       console.log(data);
      |       ^
  177 |       database.post('matches/', data).then(matchRow => {
  178 |         const matchId = matchRow.id;
  179 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:177:44:
  175 |       };
  176 |       console.log(data);
> 177 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  178 |         const matchId = matchRow.id;
  179 |         console.log('match id:', matchId);
  180 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:179:9:
  177 |       database.post('matches/', data).then(matchRow => {
  178 |         const matchId = matchRow.id;
> 179 |         console.log('match id:', matchId);
      |         ^
  180 |         this.loading = !this.loading;
  181 |         router.push({
  182 |           path: '/calculate-pattern',


18 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:17:04 PM

 WARNING  Compiled with 3 warnings1:17:05 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         


error: Empty block statement (no-empty) at src/views/CreateTrainingExampleView.vue:90:9:
  88 |         this.activeTemplateMatch != null &&
  89 |         this.activeTemplateMatch.feature_dict !== undefined
> 90 |       ) {
     |         ^
  91 |         
  92 |       }
  93 |     },


error: Trailing spaces not allowed (no-trailing-spaces) at src/views/CreateTrainingExampleView.vue:91:1:
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
> 91 |         
     | ^
  92 |       }
  93 |     },
  94 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:97:13:
   95 |   computed: {
   96 |     activeTemplateMatchSlotLabels() {
>  97 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
   98 |       if (activeTemplateMatch !== null) {
   99 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  100 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:101:14:
   99 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  100 |         return slotLabels;
> 101 |       } else {
      |              ^
  102 |         return null;
  103 |       }
  104 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:105:35:
  103 |       }
  104 |     },
> 105 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  106 |       const featureDict = this.activeTemplateMatch.feature_dict;
  107 |       if (featureDict !== undefined) {
  108 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:108:9:
  106 |       const featureDict = this.activeTemplateMatch.feature_dict;
  107 |       if (featureDict !== undefined) {
> 108 |         console.log(featureDict);
      |         ^
  109 |       }
  110 |     },
  111 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:113:11:
  111 |   },
  112 |   mounted() {
> 113 |     const sentenceId = this.sentenceId;
      |           ^
  114 |     const sentenceTargetAttribute = 'sentence';
  115 |     const tokensTargetAttribute = 'tokens';
  116 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:137:15:
  135 |           headers: { order: 'match_id desc' },
  136 |         })
> 137 |         .then(rows => {
      |               ^
  138 |           const match_ids = rows.map(row => row.match_id);
  139 |           return database.loadByIds(
  140 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:138:17:
  136 |         })
  137 |         .then(rows => {
> 138 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  139 |           return database.loadByIds(
  140 |             'matches',
  141 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:143:37:
  141 |             match_ids,
  142 |             this,
> 143 |             'trainingMatchesHistory'
      |                                     ^
  144 |           );
  145 |         });
  146 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:154:25:
  152 |     roleSlotArrayToObj(roleSlots) {
  153 |       const obj = {};
> 154 |       roleSlots.forEach(roleSlot => {
      |                         ^
  155 |         const label = roleSlot.label;
  156 |         const tokens = roleSlot.tokens;
  157 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:155:15:
  153 |       const obj = {};
  154 |       roleSlots.forEach(roleSlot => {
> 155 |         const label = roleSlot.label;
      |               ^
  156 |         const tokens = roleSlot.tokens;
  157 |         obj[label] = tokens;
  158 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:156:15:
  154 |       roleSlots.forEach(roleSlot => {
  155 |         const label = roleSlot.label;
> 156 |         const tokens = roleSlot.tokens;
      |               ^
  157 |         obj[label] = tokens;
  158 |       });
  159 |       return obj;


error: Line 162 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:162:1:
  160 |     },
  161 |     submitTrainingMatch() {
> 162 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  163 |       this.loading = !this.loading;
  164 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:166:13:
  164 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 166 |       const featureDict = this.featureDict;
      |             ^
  167 |       const sentenceId = this.sentenceId;
  168 |       const matchJSON = JSON.stringify({
  169 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:167:13:
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  166 |       const featureDict = this.featureDict;
> 167 |       const sentenceId = this.sentenceId;
      |             ^
  168 |       const matchJSON = JSON.stringify({
  169 |         slots: matchObj,
  170 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:176:7:
  174 |         data: matchJSON,
  175 |       };
> 176 |       console.log(data);
      |       ^
  177 |       database.post('matches/', data).then(matchRow => {
  178 |         const matchId = matchRow.id;
  179 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:177:44:
  175 |       };
  176 |       console.log(data);
> 177 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  178 |         const matchId = matchRow.id;
  179 |         console.log('match id:', matchId);
  180 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:179:9:
  177 |       database.post('matches/', data).then(matchRow => {
  178 |         const matchId = matchRow.id;
> 179 |         console.log('match id:', matchId);
      |         ^
  180 |         this.loading = !this.loading;
  181 |         router.push({
  182 |           path: '/calculate-pattern',


18 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:17:27 PM

 WARNING  Compiled with 3 warnings1:17:28 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.parse(this.activeTemplateMatch.feature_dict)


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:91:87:
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
> 91 |         this.featureDictInputValue = JSON.parse(this.activeTemplateMatch.feature_dict)
     |                                                                                       ^
  92 |       }
  93 |     },
  94 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:97:13:
   95 |   computed: {
   96 |     activeTemplateMatchSlotLabels() {
>  97 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
   98 |       if (activeTemplateMatch !== null) {
   99 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  100 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:101:14:
   99 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  100 |         return slotLabels;
> 101 |       } else {
      |              ^
  102 |         return null;
  103 |       }
  104 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:105:35:
  103 |       }
  104 |     },
> 105 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  106 |       const featureDict = this.activeTemplateMatch.feature_dict;
  107 |       if (featureDict !== undefined) {
  108 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:108:9:
  106 |       const featureDict = this.activeTemplateMatch.feature_dict;
  107 |       if (featureDict !== undefined) {
> 108 |         console.log(featureDict);
      |         ^
  109 |       }
  110 |     },
  111 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:113:11:
  111 |   },
  112 |   mounted() {
> 113 |     const sentenceId = this.sentenceId;
      |           ^
  114 |     const sentenceTargetAttribute = 'sentence';
  115 |     const tokensTargetAttribute = 'tokens';
  116 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:137:15:
  135 |           headers: { order: 'match_id desc' },
  136 |         })
> 137 |         .then(rows => {
      |               ^
  138 |           const match_ids = rows.map(row => row.match_id);
  139 |           return database.loadByIds(
  140 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:138:17:
  136 |         })
  137 |         .then(rows => {
> 138 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  139 |           return database.loadByIds(
  140 |             'matches',
  141 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:143:37:
  141 |             match_ids,
  142 |             this,
> 143 |             'trainingMatchesHistory'
      |                                     ^
  144 |           );
  145 |         });
  146 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:154:25:
  152 |     roleSlotArrayToObj(roleSlots) {
  153 |       const obj = {};
> 154 |       roleSlots.forEach(roleSlot => {
      |                         ^
  155 |         const label = roleSlot.label;
  156 |         const tokens = roleSlot.tokens;
  157 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:155:15:
  153 |       const obj = {};
  154 |       roleSlots.forEach(roleSlot => {
> 155 |         const label = roleSlot.label;
      |               ^
  156 |         const tokens = roleSlot.tokens;
  157 |         obj[label] = tokens;
  158 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:156:15:
  154 |       roleSlots.forEach(roleSlot => {
  155 |         const label = roleSlot.label;
> 156 |         const tokens = roleSlot.tokens;
      |               ^
  157 |         obj[label] = tokens;
  158 |       });
  159 |       return obj;


error: Line 162 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:162:1:
  160 |     },
  161 |     submitTrainingMatch() {
> 162 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  163 |       this.loading = !this.loading;
  164 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:166:13:
  164 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 166 |       const featureDict = this.featureDict;
      |             ^
  167 |       const sentenceId = this.sentenceId;
  168 |       const matchJSON = JSON.stringify({
  169 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:167:13:
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  166 |       const featureDict = this.featureDict;
> 167 |       const sentenceId = this.sentenceId;
      |             ^
  168 |       const matchJSON = JSON.stringify({
  169 |         slots: matchObj,
  170 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:176:7:
  174 |         data: matchJSON,
  175 |       };
> 176 |       console.log(data);
      |       ^
  177 |       database.post('matches/', data).then(matchRow => {
  178 |         const matchId = matchRow.id;
  179 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:177:44:
  175 |       };
  176 |       console.log(data);
> 177 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  178 |         const matchId = matchRow.id;
  179 |         console.log('match id:', matchId);
  180 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:179:9:
  177 |       database.post('matches/', data).then(matchRow => {
  178 |         const matchId = matchRow.id;
> 179 |         console.log('match id:', matchId);
      |         ^
  180 |         this.loading = !this.loading;
  181 |         router.push({
  182 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:17:29 PM

 WARNING  Compiled with 3 warnings1:17:30 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.parse(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:92:48:
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.parse(
> 92 |           this.activeTemplateMatch.feature_dict
     |                                                ^
  93 |         );
  94 |       }
  95 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:99:13:
   97 |   computed: {
   98 |     activeTemplateMatchSlotLabels() {
>  99 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  100 |       if (activeTemplateMatch !== null) {
  101 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  102 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:103:14:
  101 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  102 |         return slotLabels;
> 103 |       } else {
      |              ^
  104 |         return null;
  105 |       }
  106 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:107:35:
  105 |       }
  106 |     },
> 107 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  108 |       const featureDict = this.activeTemplateMatch.feature_dict;
  109 |       if (featureDict !== undefined) {
  110 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:110:9:
  108 |       const featureDict = this.activeTemplateMatch.feature_dict;
  109 |       if (featureDict !== undefined) {
> 110 |         console.log(featureDict);
      |         ^
  111 |       }
  112 |     },
  113 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:115:11:
  113 |   },
  114 |   mounted() {
> 115 |     const sentenceId = this.sentenceId;
      |           ^
  116 |     const sentenceTargetAttribute = 'sentence';
  117 |     const tokensTargetAttribute = 'tokens';
  118 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:139:15:
  137 |           headers: { order: 'match_id desc' },
  138 |         })
> 139 |         .then(rows => {
      |               ^
  140 |           const match_ids = rows.map(row => row.match_id);
  141 |           return database.loadByIds(
  142 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:140:17:
  138 |         })
  139 |         .then(rows => {
> 140 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  141 |           return database.loadByIds(
  142 |             'matches',
  143 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:145:37:
  143 |             match_ids,
  144 |             this,
> 145 |             'trainingMatchesHistory'
      |                                     ^
  146 |           );
  147 |         });
  148 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:156:25:
  154 |     roleSlotArrayToObj(roleSlots) {
  155 |       const obj = {};
> 156 |       roleSlots.forEach(roleSlot => {
      |                         ^
  157 |         const label = roleSlot.label;
  158 |         const tokens = roleSlot.tokens;
  159 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:157:15:
  155 |       const obj = {};
  156 |       roleSlots.forEach(roleSlot => {
> 157 |         const label = roleSlot.label;
      |               ^
  158 |         const tokens = roleSlot.tokens;
  159 |         obj[label] = tokens;
  160 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:158:15:
  156 |       roleSlots.forEach(roleSlot => {
  157 |         const label = roleSlot.label;
> 158 |         const tokens = roleSlot.tokens;
      |               ^
  159 |         obj[label] = tokens;
  160 |       });
  161 |       return obj;


error: Line 164 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:164:1:
  162 |     },
  163 |     submitTrainingMatch() {
> 164 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  165 |       this.loading = !this.loading;
  166 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:168:13:
  166 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 168 |       const featureDict = this.featureDict;
      |             ^
  169 |       const sentenceId = this.sentenceId;
  170 |       const matchJSON = JSON.stringify({
  171 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:169:13:
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  168 |       const featureDict = this.featureDict;
> 169 |       const sentenceId = this.sentenceId;
      |             ^
  170 |       const matchJSON = JSON.stringify({
  171 |         slots: matchObj,
  172 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:178:7:
  176 |         data: matchJSON,
  177 |       };
> 178 |       console.log(data);
      |       ^
  179 |       database.post('matches/', data).then(matchRow => {
  180 |         const matchId = matchRow.id;
  181 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:179:44:
  177 |       };
  178 |       console.log(data);
> 179 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  180 |         const matchId = matchRow.id;
  181 |         console.log('match id:', matchId);
  182 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:181:9:
  179 |       database.post('matches/', data).then(matchRow => {
  180 |         const matchId = matchRow.id;
> 181 |         console.log('match id:', matchId);
      |         ^
  182 |         this.loading = !this.loading;
  183 |         router.push({
  184 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:17:30 PM

 WARNING  Compiled with 3 warnings1:17:31 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.parse(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:92:48:
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.parse(
> 92 |           this.activeTemplateMatch.feature_dict
     |                                                ^
  93 |         );
  94 |       }
  95 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:99:13:
   97 |   computed: {
   98 |     activeTemplateMatchSlotLabels() {
>  99 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  100 |       if (activeTemplateMatch !== null) {
  101 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  102 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:103:14:
  101 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  102 |         return slotLabels;
> 103 |       } else {
      |              ^
  104 |         return null;
  105 |       }
  106 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:107:35:
  105 |       }
  106 |     },
> 107 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  108 |       const featureDict = this.activeTemplateMatch.feature_dict;
  109 |       if (featureDict !== undefined) {
  110 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:110:9:
  108 |       const featureDict = this.activeTemplateMatch.feature_dict;
  109 |       if (featureDict !== undefined) {
> 110 |         console.log(featureDict);
      |         ^
  111 |       }
  112 |     },
  113 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:115:11:
  113 |   },
  114 |   mounted() {
> 115 |     const sentenceId = this.sentenceId;
      |           ^
  116 |     const sentenceTargetAttribute = 'sentence';
  117 |     const tokensTargetAttribute = 'tokens';
  118 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:139:15:
  137 |           headers: { order: 'match_id desc' },
  138 |         })
> 139 |         .then(rows => {
      |               ^
  140 |           const match_ids = rows.map(row => row.match_id);
  141 |           return database.loadByIds(
  142 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:140:17:
  138 |         })
  139 |         .then(rows => {
> 140 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  141 |           return database.loadByIds(
  142 |             'matches',
  143 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:145:37:
  143 |             match_ids,
  144 |             this,
> 145 |             'trainingMatchesHistory'
      |                                     ^
  146 |           );
  147 |         });
  148 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:156:25:
  154 |     roleSlotArrayToObj(roleSlots) {
  155 |       const obj = {};
> 156 |       roleSlots.forEach(roleSlot => {
      |                         ^
  157 |         const label = roleSlot.label;
  158 |         const tokens = roleSlot.tokens;
  159 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:157:15:
  155 |       const obj = {};
  156 |       roleSlots.forEach(roleSlot => {
> 157 |         const label = roleSlot.label;
      |               ^
  158 |         const tokens = roleSlot.tokens;
  159 |         obj[label] = tokens;
  160 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:158:15:
  156 |       roleSlots.forEach(roleSlot => {
  157 |         const label = roleSlot.label;
> 158 |         const tokens = roleSlot.tokens;
      |               ^
  159 |         obj[label] = tokens;
  160 |       });
  161 |       return obj;


error: Line 164 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:164:1:
  162 |     },
  163 |     submitTrainingMatch() {
> 164 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  165 |       this.loading = !this.loading;
  166 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:168:13:
  166 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 168 |       const featureDict = this.featureDict;
      |             ^
  169 |       const sentenceId = this.sentenceId;
  170 |       const matchJSON = JSON.stringify({
  171 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:169:13:
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  168 |       const featureDict = this.featureDict;
> 169 |       const sentenceId = this.sentenceId;
      |             ^
  170 |       const matchJSON = JSON.stringify({
  171 |         slots: matchObj,
  172 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:178:7:
  176 |         data: matchJSON,
  177 |       };
> 178 |       console.log(data);
      |       ^
  179 |       database.post('matches/', data).then(matchRow => {
  180 |         const matchId = matchRow.id;
  181 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:179:44:
  177 |       };
  178 |       console.log(data);
> 179 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  180 |         const matchId = matchRow.id;
  181 |         console.log('match id:', matchId);
  182 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:181:9:
  179 |       database.post('matches/', data).then(matchRow => {
  180 |         const matchId = matchRow.id;
> 181 |         console.log('match id:', matchId);
      |         ^
  182 |         this.loading = !this.loading;
  183 |         router.push({
  184 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:17:32 PM

 WARNING  Compiled with 3 warnings1:17:33 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.parse(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:92:48:
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.parse(
> 92 |           this.activeTemplateMatch.feature_dict
     |                                                ^
  93 |         );
  94 |       }
  95 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:99:13:
   97 |   computed: {
   98 |     activeTemplateMatchSlotLabels() {
>  99 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  100 |       if (activeTemplateMatch !== null) {
  101 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  102 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:103:14:
  101 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  102 |         return slotLabels;
> 103 |       } else {
      |              ^
  104 |         return null;
  105 |       }
  106 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:107:35:
  105 |       }
  106 |     },
> 107 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  108 |       const featureDict = this.activeTemplateMatch.feature_dict;
  109 |       if (featureDict !== undefined) {
  110 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:110:9:
  108 |       const featureDict = this.activeTemplateMatch.feature_dict;
  109 |       if (featureDict !== undefined) {
> 110 |         console.log(featureDict);
      |         ^
  111 |       }
  112 |     },
  113 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:115:11:
  113 |   },
  114 |   mounted() {
> 115 |     const sentenceId = this.sentenceId;
      |           ^
  116 |     const sentenceTargetAttribute = 'sentence';
  117 |     const tokensTargetAttribute = 'tokens';
  118 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:139:15:
  137 |           headers: { order: 'match_id desc' },
  138 |         })
> 139 |         .then(rows => {
      |               ^
  140 |           const match_ids = rows.map(row => row.match_id);
  141 |           return database.loadByIds(
  142 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:140:17:
  138 |         })
  139 |         .then(rows => {
> 140 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  141 |           return database.loadByIds(
  142 |             'matches',
  143 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:145:37:
  143 |             match_ids,
  144 |             this,
> 145 |             'trainingMatchesHistory'
      |                                     ^
  146 |           );
  147 |         });
  148 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:156:25:
  154 |     roleSlotArrayToObj(roleSlots) {
  155 |       const obj = {};
> 156 |       roleSlots.forEach(roleSlot => {
      |                         ^
  157 |         const label = roleSlot.label;
  158 |         const tokens = roleSlot.tokens;
  159 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:157:15:
  155 |       const obj = {};
  156 |       roleSlots.forEach(roleSlot => {
> 157 |         const label = roleSlot.label;
      |               ^
  158 |         const tokens = roleSlot.tokens;
  159 |         obj[label] = tokens;
  160 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:158:15:
  156 |       roleSlots.forEach(roleSlot => {
  157 |         const label = roleSlot.label;
> 158 |         const tokens = roleSlot.tokens;
      |               ^
  159 |         obj[label] = tokens;
  160 |       });
  161 |       return obj;


error: Line 164 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:164:1:
  162 |     },
  163 |     submitTrainingMatch() {
> 164 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  165 |       this.loading = !this.loading;
  166 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:168:13:
  166 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 168 |       const featureDict = this.featureDict;
      |             ^
  169 |       const sentenceId = this.sentenceId;
  170 |       const matchJSON = JSON.stringify({
  171 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:169:13:
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  168 |       const featureDict = this.featureDict;
> 169 |       const sentenceId = this.sentenceId;
      |             ^
  170 |       const matchJSON = JSON.stringify({
  171 |         slots: matchObj,
  172 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:178:7:
  176 |         data: matchJSON,
  177 |       };
> 178 |       console.log(data);
      |       ^
  179 |       database.post('matches/', data).then(matchRow => {
  180 |         const matchId = matchRow.id;
  181 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:179:44:
  177 |       };
  178 |       console.log(data);
> 179 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  180 |         const matchId = matchRow.id;
  181 |         console.log('match id:', matchId);
  182 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:181:9:
  179 |       database.post('matches/', data).then(matchRow => {
  180 |         const matchId = matchRow.id;
> 181 |         console.log('match id:', matchId);
      |         ^
  182 |         this.loading = !this.loading;
  183 |         router.push({
  184 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:18:03 PM

 WARNING  Compiled with 3 warnings1:18:04 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         console.log(this.activeTemplateMatch.feature_dict)


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:91:9:
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
> 91 |         console.log(this.activeTemplateMatch.feature_dict)
     |         ^
  92 |         this.featureDictInputValue = JSON.parse(
  93 |           this.activeTemplateMatch.feature_dict
  94 |         );


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:91:59:
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
> 91 |         console.log(this.activeTemplateMatch.feature_dict)
     |                                                           ^
  92 |         this.featureDictInputValue = JSON.parse(
  93 |           this.activeTemplateMatch.feature_dict
  94 |         );


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:93:48:
  91 |         console.log(this.activeTemplateMatch.feature_dict)
  92 |         this.featureDictInputValue = JSON.parse(
> 93 |           this.activeTemplateMatch.feature_dict
     |                                                ^
  94 |         );
  95 |       }
  96 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:100:13:
   98 |   computed: {
   99 |     activeTemplateMatchSlotLabels() {
> 100 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  101 |       if (activeTemplateMatch !== null) {
  102 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  103 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:104:14:
  102 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  103 |         return slotLabels;
> 104 |       } else {
      |              ^
  105 |         return null;
  106 |       }
  107 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:108:35:
  106 |       }
  107 |     },
> 108 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  109 |       const featureDict = this.activeTemplateMatch.feature_dict;
  110 |       if (featureDict !== undefined) {
  111 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:111:9:
  109 |       const featureDict = this.activeTemplateMatch.feature_dict;
  110 |       if (featureDict !== undefined) {
> 111 |         console.log(featureDict);
      |         ^
  112 |       }
  113 |     },
  114 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:116:11:
  114 |   },
  115 |   mounted() {
> 116 |     const sentenceId = this.sentenceId;
      |           ^
  117 |     const sentenceTargetAttribute = 'sentence';
  118 |     const tokensTargetAttribute = 'tokens';
  119 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:140:15:
  138 |           headers: { order: 'match_id desc' },
  139 |         })
> 140 |         .then(rows => {
      |               ^
  141 |           const match_ids = rows.map(row => row.match_id);
  142 |           return database.loadByIds(
  143 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:141:17:
  139 |         })
  140 |         .then(rows => {
> 141 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  142 |           return database.loadByIds(
  143 |             'matches',
  144 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:146:37:
  144 |             match_ids,
  145 |             this,
> 146 |             'trainingMatchesHistory'
      |                                     ^
  147 |           );
  148 |         });
  149 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:157:25:
  155 |     roleSlotArrayToObj(roleSlots) {
  156 |       const obj = {};
> 157 |       roleSlots.forEach(roleSlot => {
      |                         ^
  158 |         const label = roleSlot.label;
  159 |         const tokens = roleSlot.tokens;
  160 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:158:15:
  156 |       const obj = {};
  157 |       roleSlots.forEach(roleSlot => {
> 158 |         const label = roleSlot.label;
      |               ^
  159 |         const tokens = roleSlot.tokens;
  160 |         obj[label] = tokens;
  161 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       roleSlots.forEach(roleSlot => {
  158 |         const label = roleSlot.label;
> 159 |         const tokens = roleSlot.tokens;
      |               ^
  160 |         obj[label] = tokens;
  161 |       });
  162 |       return obj;


error: Line 165 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:165:1:
  163 |     },
  164 |     submitTrainingMatch() {
> 165 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  166 |       this.loading = !this.loading;
  167 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  168 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:169:13:
  167 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  168 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 169 |       const featureDict = this.featureDict;
      |             ^
  170 |       const sentenceId = this.sentenceId;
  171 |       const matchJSON = JSON.stringify({
  172 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  169 |       const featureDict = this.featureDict;
> 170 |       const sentenceId = this.sentenceId;
      |             ^
  171 |       const matchJSON = JSON.stringify({
  172 |         slots: matchObj,
  173 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:179:7:
  177 |         data: matchJSON,
  178 |       };
> 179 |       console.log(data);
      |       ^
  180 |       database.post('matches/', data).then(matchRow => {
  181 |         const matchId = matchRow.id;
  182 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:180:44:
  178 |       };
  179 |       console.log(data);
> 180 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  181 |         const matchId = matchRow.id;
  182 |         console.log('match id:', matchId);
  183 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:182:9:
  180 |       database.post('matches/', data).then(matchRow => {
  181 |         const matchId = matchRow.id;
> 182 |         console.log('match id:', matchId);
      |         ^
  183 |         this.loading = !this.loading;
  184 |         router.push({
  185 |           path: '/calculate-pattern',


18 errors and 4 warnings found.
14 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:18:23 PM

 WARNING  Compiled with 3 warnings1:18:23 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         console.log(this.activeTemplateMatch.feature_dict)


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:91:9:
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
> 91 |         console.log(this.activeTemplateMatch.feature_dict)
     |         ^
  92 |         this.featureDictInputValue = 
  93 |           this.activeTemplateMatch.feature_dict
  94 |         ;


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:91:59:
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
> 91 |         console.log(this.activeTemplateMatch.feature_dict)
     |                                                           ^
  92 |         this.featureDictInputValue = 
  93 |           this.activeTemplateMatch.feature_dict
  94 |         ;


error: There should be no line break before or after '=' (operator-linebreak) at src/views/CreateTrainingExampleView.vue:92:37:
  90 |       ) {
  91 |         console.log(this.activeTemplateMatch.feature_dict)
> 92 |         this.featureDictInputValue = 
     |                                     ^
  93 |           this.activeTemplateMatch.feature_dict
  94 |         ;
  95 |       }


error: Trailing spaces not allowed (no-trailing-spaces) at src/views/CreateTrainingExampleView.vue:92:37:
  90 |       ) {
  91 |         console.log(this.activeTemplateMatch.feature_dict)
> 92 |         this.featureDictInputValue = 
     |                                     ^
  93 |           this.activeTemplateMatch.feature_dict
  94 |         ;
  95 |       }


error: Expected this semicolon to be at the end of the previous line (semi-style) at src/views/CreateTrainingExampleView.vue:94:9:
  92 |         this.featureDictInputValue = 
  93 |           this.activeTemplateMatch.feature_dict
> 94 |         ;
     |         ^
  95 |       }
  96 |     },
  97 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:100:13:
   98 |   computed: {
   99 |     activeTemplateMatchSlotLabels() {
> 100 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  101 |       if (activeTemplateMatch !== null) {
  102 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  103 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:104:14:
  102 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  103 |         return slotLabels;
> 104 |       } else {
      |              ^
  105 |         return null;
  106 |       }
  107 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:108:35:
  106 |       }
  107 |     },
> 108 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  109 |       const featureDict = this.activeTemplateMatch.feature_dict;
  110 |       if (featureDict !== undefined) {
  111 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:111:9:
  109 |       const featureDict = this.activeTemplateMatch.feature_dict;
  110 |       if (featureDict !== undefined) {
> 111 |         console.log(featureDict);
      |         ^
  112 |       }
  113 |     },
  114 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:116:11:
  114 |   },
  115 |   mounted() {
> 116 |     const sentenceId = this.sentenceId;
      |           ^
  117 |     const sentenceTargetAttribute = 'sentence';
  118 |     const tokensTargetAttribute = 'tokens';
  119 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:140:15:
  138 |           headers: { order: 'match_id desc' },
  139 |         })
> 140 |         .then(rows => {
      |               ^
  141 |           const match_ids = rows.map(row => row.match_id);
  142 |           return database.loadByIds(
  143 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:141:17:
  139 |         })
  140 |         .then(rows => {
> 141 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  142 |           return database.loadByIds(
  143 |             'matches',
  144 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:146:37:
  144 |             match_ids,
  145 |             this,
> 146 |             'trainingMatchesHistory'
      |                                     ^
  147 |           );
  148 |         });
  149 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:157:25:
  155 |     roleSlotArrayToObj(roleSlots) {
  156 |       const obj = {};
> 157 |       roleSlots.forEach(roleSlot => {
      |                         ^
  158 |         const label = roleSlot.label;
  159 |         const tokens = roleSlot.tokens;
  160 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:158:15:
  156 |       const obj = {};
  157 |       roleSlots.forEach(roleSlot => {
> 158 |         const label = roleSlot.label;
      |               ^
  159 |         const tokens = roleSlot.tokens;
  160 |         obj[label] = tokens;
  161 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       roleSlots.forEach(roleSlot => {
  158 |         const label = roleSlot.label;
> 159 |         const tokens = roleSlot.tokens;
      |               ^
  160 |         obj[label] = tokens;
  161 |       });
  162 |       return obj;


error: Line 165 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:165:1:
  163 |     },
  164 |     submitTrainingMatch() {
> 165 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  166 |       this.loading = !this.loading;
  167 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  168 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:169:13:
  167 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  168 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 169 |       const featureDict = this.featureDict;
      |             ^
  170 |       const sentenceId = this.sentenceId;
  171 |       const matchJSON = JSON.stringify({
  172 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  169 |       const featureDict = this.featureDict;
> 170 |       const sentenceId = this.sentenceId;
      |             ^
  171 |       const matchJSON = JSON.stringify({
  172 |         slots: matchObj,
  173 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:179:7:
  177 |         data: matchJSON,
  178 |       };
> 179 |       console.log(data);
      |       ^
  180 |       database.post('matches/', data).then(matchRow => {
  181 |         const matchId = matchRow.id;
  182 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:180:44:
  178 |       };
  179 |       console.log(data);
> 180 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  181 |         const matchId = matchRow.id;
  182 |         console.log('match id:', matchId);
  183 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:182:9:
  180 |       database.post('matches/', data).then(matchRow => {
  181 |         const matchId = matchRow.id;
> 182 |         console.log('match id:', matchId);
      |         ^
  183 |         this.loading = !this.loading;
  184 |         router.push({
  185 |           path: '/calculate-pattern',


20 errors and 4 warnings found.
16 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:18:24 PM

 WARNING  Compiled with 3 warnings1:18:25 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         console.log(this.activeTemplateMatch.feature_dict)


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:91:9:
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
> 91 |         console.log(this.activeTemplateMatch.feature_dict)
     |         ^
  92 |         this.featureDictInputValue = 
  93 |           this.activeTemplateMatch.feature_dict
  94 |         ;


error: Missing semicolon (semi) at src/views/CreateTrainingExampleView.vue:91:59:
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
> 91 |         console.log(this.activeTemplateMatch.feature_dict)
     |                                                           ^
  92 |         this.featureDictInputValue = 
  93 |           this.activeTemplateMatch.feature_dict
  94 |         ;


error: There should be no line break before or after '=' (operator-linebreak) at src/views/CreateTrainingExampleView.vue:92:37:
  90 |       ) {
  91 |         console.log(this.activeTemplateMatch.feature_dict)
> 92 |         this.featureDictInputValue = 
     |                                     ^
  93 |           this.activeTemplateMatch.feature_dict
  94 |         ;
  95 |       }


error: Trailing spaces not allowed (no-trailing-spaces) at src/views/CreateTrainingExampleView.vue:92:37:
  90 |       ) {
  91 |         console.log(this.activeTemplateMatch.feature_dict)
> 92 |         this.featureDictInputValue = 
     |                                     ^
  93 |           this.activeTemplateMatch.feature_dict
  94 |         ;
  95 |       }


error: Expected this semicolon to be at the end of the previous line (semi-style) at src/views/CreateTrainingExampleView.vue:94:9:
  92 |         this.featureDictInputValue = 
  93 |           this.activeTemplateMatch.feature_dict
> 94 |         ;
     |         ^
  95 |       }
  96 |     },
  97 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:100:13:
   98 |   computed: {
   99 |     activeTemplateMatchSlotLabels() {
> 100 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  101 |       if (activeTemplateMatch !== null) {
  102 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  103 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:104:14:
  102 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  103 |         return slotLabels;
> 104 |       } else {
      |              ^
  105 |         return null;
  106 |       }
  107 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:108:35:
  106 |       }
  107 |     },
> 108 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  109 |       const featureDict = this.activeTemplateMatch.feature_dict;
  110 |       if (featureDict !== undefined) {
  111 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:111:9:
  109 |       const featureDict = this.activeTemplateMatch.feature_dict;
  110 |       if (featureDict !== undefined) {
> 111 |         console.log(featureDict);
      |         ^
  112 |       }
  113 |     },
  114 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:116:11:
  114 |   },
  115 |   mounted() {
> 116 |     const sentenceId = this.sentenceId;
      |           ^
  117 |     const sentenceTargetAttribute = 'sentence';
  118 |     const tokensTargetAttribute = 'tokens';
  119 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:140:15:
  138 |           headers: { order: 'match_id desc' },
  139 |         })
> 140 |         .then(rows => {
      |               ^
  141 |           const match_ids = rows.map(row => row.match_id);
  142 |           return database.loadByIds(
  143 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:141:17:
  139 |         })
  140 |         .then(rows => {
> 141 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  142 |           return database.loadByIds(
  143 |             'matches',
  144 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:146:37:
  144 |             match_ids,
  145 |             this,
> 146 |             'trainingMatchesHistory'
      |                                     ^
  147 |           );
  148 |         });
  149 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:157:25:
  155 |     roleSlotArrayToObj(roleSlots) {
  156 |       const obj = {};
> 157 |       roleSlots.forEach(roleSlot => {
      |                         ^
  158 |         const label = roleSlot.label;
  159 |         const tokens = roleSlot.tokens;
  160 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:158:15:
  156 |       const obj = {};
  157 |       roleSlots.forEach(roleSlot => {
> 158 |         const label = roleSlot.label;
      |               ^
  159 |         const tokens = roleSlot.tokens;
  160 |         obj[label] = tokens;
  161 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       roleSlots.forEach(roleSlot => {
  158 |         const label = roleSlot.label;
> 159 |         const tokens = roleSlot.tokens;
      |               ^
  160 |         obj[label] = tokens;
  161 |       });
  162 |       return obj;


error: Line 165 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:165:1:
  163 |     },
  164 |     submitTrainingMatch() {
> 165 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  166 |       this.loading = !this.loading;
  167 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  168 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:169:13:
  167 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  168 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 169 |       const featureDict = this.featureDict;
      |             ^
  170 |       const sentenceId = this.sentenceId;
  171 |       const matchJSON = JSON.stringify({
  172 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  169 |       const featureDict = this.featureDict;
> 170 |       const sentenceId = this.sentenceId;
      |             ^
  171 |       const matchJSON = JSON.stringify({
  172 |         slots: matchObj,
  173 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:179:7:
  177 |         data: matchJSON,
  178 |       };
> 179 |       console.log(data);
      |       ^
  180 |       database.post('matches/', data).then(matchRow => {
  181 |         const matchId = matchRow.id;
  182 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:180:44:
  178 |       };
  179 |       console.log(data);
> 180 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  181 |         const matchId = matchRow.id;
  182 |         console.log('match id:', matchId);
  183 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:182:9:
  180 |       database.post('matches/', data).then(matchRow => {
  181 |         const matchId = matchRow.id;
> 182 |         console.log('match id:', matchId);
      |         ^
  183 |         this.loading = !this.loading;
  184 |         router.push({
  185 |           path: '/calculate-pattern',


20 errors and 4 warnings found.
16 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:18:28 PM

 WARNING  Compiled with 3 warnings1:18:28 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = this.activeTemplateMatch.feature_dict;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:97:13:
   95 |   computed: {
   96 |     activeTemplateMatchSlotLabels() {
>  97 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
   98 |       if (activeTemplateMatch !== null) {
   99 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  100 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:101:14:
   99 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  100 |         return slotLabels;
> 101 |       } else {
      |              ^
  102 |         return null;
  103 |       }
  104 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:105:35:
  103 |       }
  104 |     },
> 105 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  106 |       const featureDict = this.activeTemplateMatch.feature_dict;
  107 |       if (featureDict !== undefined) {
  108 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:108:9:
  106 |       const featureDict = this.activeTemplateMatch.feature_dict;
  107 |       if (featureDict !== undefined) {
> 108 |         console.log(featureDict);
      |         ^
  109 |       }
  110 |     },
  111 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:113:11:
  111 |   },
  112 |   mounted() {
> 113 |     const sentenceId = this.sentenceId;
      |           ^
  114 |     const sentenceTargetAttribute = 'sentence';
  115 |     const tokensTargetAttribute = 'tokens';
  116 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:137:15:
  135 |           headers: { order: 'match_id desc' },
  136 |         })
> 137 |         .then(rows => {
      |               ^
  138 |           const match_ids = rows.map(row => row.match_id);
  139 |           return database.loadByIds(
  140 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:138:17:
  136 |         })
  137 |         .then(rows => {
> 138 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  139 |           return database.loadByIds(
  140 |             'matches',
  141 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:143:37:
  141 |             match_ids,
  142 |             this,
> 143 |             'trainingMatchesHistory'
      |                                     ^
  144 |           );
  145 |         });
  146 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:154:25:
  152 |     roleSlotArrayToObj(roleSlots) {
  153 |       const obj = {};
> 154 |       roleSlots.forEach(roleSlot => {
      |                         ^
  155 |         const label = roleSlot.label;
  156 |         const tokens = roleSlot.tokens;
  157 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:155:15:
  153 |       const obj = {};
  154 |       roleSlots.forEach(roleSlot => {
> 155 |         const label = roleSlot.label;
      |               ^
  156 |         const tokens = roleSlot.tokens;
  157 |         obj[label] = tokens;
  158 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:156:15:
  154 |       roleSlots.forEach(roleSlot => {
  155 |         const label = roleSlot.label;
> 156 |         const tokens = roleSlot.tokens;
      |               ^
  157 |         obj[label] = tokens;
  158 |       });
  159 |       return obj;


error: Line 162 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:162:1:
  160 |     },
  161 |     submitTrainingMatch() {
> 162 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  163 |       this.loading = !this.loading;
  164 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:166:13:
  164 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 166 |       const featureDict = this.featureDict;
      |             ^
  167 |       const sentenceId = this.sentenceId;
  168 |       const matchJSON = JSON.stringify({
  169 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:167:13:
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  166 |       const featureDict = this.featureDict;
> 167 |       const sentenceId = this.sentenceId;
      |             ^
  168 |       const matchJSON = JSON.stringify({
  169 |         slots: matchObj,
  170 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:176:7:
  174 |         data: matchJSON,
  175 |       };
> 176 |       console.log(data);
      |       ^
  177 |       database.post('matches/', data).then(matchRow => {
  178 |         const matchId = matchRow.id;
  179 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:177:44:
  175 |       };
  176 |       console.log(data);
> 177 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  178 |         const matchId = matchRow.id;
  179 |         console.log('match id:', matchId);
  180 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:179:9:
  177 |       database.post('matches/', data).then(matchRow => {
  178 |         const matchId = matchRow.id;
> 179 |         console.log('match id:', matchId);
      |         ^
  180 |         this.loading = !this.loading;
  181 |         router.push({
  182 |           path: '/calculate-pattern',


16 errors and 3 warnings found.
12 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:18:28 PM

 WARNING  Compiled with 3 warnings1:18:29 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = this.activeTemplateMatch.feature_dict;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:97:13:
   95 |   computed: {
   96 |     activeTemplateMatchSlotLabels() {
>  97 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
   98 |       if (activeTemplateMatch !== null) {
   99 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  100 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:101:14:
   99 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  100 |         return slotLabels;
> 101 |       } else {
      |              ^
  102 |         return null;
  103 |       }
  104 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:105:35:
  103 |       }
  104 |     },
> 105 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  106 |       const featureDict = this.activeTemplateMatch.feature_dict;
  107 |       if (featureDict !== undefined) {
  108 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:108:9:
  106 |       const featureDict = this.activeTemplateMatch.feature_dict;
  107 |       if (featureDict !== undefined) {
> 108 |         console.log(featureDict);
      |         ^
  109 |       }
  110 |     },
  111 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:113:11:
  111 |   },
  112 |   mounted() {
> 113 |     const sentenceId = this.sentenceId;
      |           ^
  114 |     const sentenceTargetAttribute = 'sentence';
  115 |     const tokensTargetAttribute = 'tokens';
  116 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:137:15:
  135 |           headers: { order: 'match_id desc' },
  136 |         })
> 137 |         .then(rows => {
      |               ^
  138 |           const match_ids = rows.map(row => row.match_id);
  139 |           return database.loadByIds(
  140 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:138:17:
  136 |         })
  137 |         .then(rows => {
> 138 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  139 |           return database.loadByIds(
  140 |             'matches',
  141 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:143:37:
  141 |             match_ids,
  142 |             this,
> 143 |             'trainingMatchesHistory'
      |                                     ^
  144 |           );
  145 |         });
  146 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:154:25:
  152 |     roleSlotArrayToObj(roleSlots) {
  153 |       const obj = {};
> 154 |       roleSlots.forEach(roleSlot => {
      |                         ^
  155 |         const label = roleSlot.label;
  156 |         const tokens = roleSlot.tokens;
  157 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:155:15:
  153 |       const obj = {};
  154 |       roleSlots.forEach(roleSlot => {
> 155 |         const label = roleSlot.label;
      |               ^
  156 |         const tokens = roleSlot.tokens;
  157 |         obj[label] = tokens;
  158 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:156:15:
  154 |       roleSlots.forEach(roleSlot => {
  155 |         const label = roleSlot.label;
> 156 |         const tokens = roleSlot.tokens;
      |               ^
  157 |         obj[label] = tokens;
  158 |       });
  159 |       return obj;


error: Line 162 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:162:1:
  160 |     },
  161 |     submitTrainingMatch() {
> 162 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  163 |       this.loading = !this.loading;
  164 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:166:13:
  164 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 166 |       const featureDict = this.featureDict;
      |             ^
  167 |       const sentenceId = this.sentenceId;
  168 |       const matchJSON = JSON.stringify({
  169 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:167:13:
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  166 |       const featureDict = this.featureDict;
> 167 |       const sentenceId = this.sentenceId;
      |             ^
  168 |       const matchJSON = JSON.stringify({
  169 |         slots: matchObj,
  170 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:176:7:
  174 |         data: matchJSON,
  175 |       };
> 176 |       console.log(data);
      |       ^
  177 |       database.post('matches/', data).then(matchRow => {
  178 |         const matchId = matchRow.id;
  179 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:177:44:
  175 |       };
  176 |       console.log(data);
> 177 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  178 |         const matchId = matchRow.id;
  179 |         console.log('match id:', matchId);
  180 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:179:9:
  177 |       database.post('matches/', data).then(matchRow => {
  178 |         const matchId = matchRow.id;
> 179 |         console.log('match id:', matchId);
      |         ^
  180 |         this.loading = !this.loading;
  181 |         router.push({
  182 |           path: '/calculate-pattern',


16 errors and 3 warnings found.
12 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:18:38 PM

 WARNING  Compiled with 3 warnings1:18:39 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(this.activeTemplateMatch.feature_dict);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:97:13:
   95 |   computed: {
   96 |     activeTemplateMatchSlotLabels() {
>  97 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
   98 |       if (activeTemplateMatch !== null) {
   99 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  100 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:101:14:
   99 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  100 |         return slotLabels;
> 101 |       } else {
      |              ^
  102 |         return null;
  103 |       }
  104 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:105:35:
  103 |       }
  104 |     },
> 105 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  106 |       const featureDict = this.activeTemplateMatch.feature_dict;
  107 |       if (featureDict !== undefined) {
  108 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:108:9:
  106 |       const featureDict = this.activeTemplateMatch.feature_dict;
  107 |       if (featureDict !== undefined) {
> 108 |         console.log(featureDict);
      |         ^
  109 |       }
  110 |     },
  111 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:113:11:
  111 |   },
  112 |   mounted() {
> 113 |     const sentenceId = this.sentenceId;
      |           ^
  114 |     const sentenceTargetAttribute = 'sentence';
  115 |     const tokensTargetAttribute = 'tokens';
  116 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:137:15:
  135 |           headers: { order: 'match_id desc' },
  136 |         })
> 137 |         .then(rows => {
      |               ^
  138 |           const match_ids = rows.map(row => row.match_id);
  139 |           return database.loadByIds(
  140 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:138:17:
  136 |         })
  137 |         .then(rows => {
> 138 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  139 |           return database.loadByIds(
  140 |             'matches',
  141 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:143:37:
  141 |             match_ids,
  142 |             this,
> 143 |             'trainingMatchesHistory'
      |                                     ^
  144 |           );
  145 |         });
  146 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:154:25:
  152 |     roleSlotArrayToObj(roleSlots) {
  153 |       const obj = {};
> 154 |       roleSlots.forEach(roleSlot => {
      |                         ^
  155 |         const label = roleSlot.label;
  156 |         const tokens = roleSlot.tokens;
  157 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:155:15:
  153 |       const obj = {};
  154 |       roleSlots.forEach(roleSlot => {
> 155 |         const label = roleSlot.label;
      |               ^
  156 |         const tokens = roleSlot.tokens;
  157 |         obj[label] = tokens;
  158 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:156:15:
  154 |       roleSlots.forEach(roleSlot => {
  155 |         const label = roleSlot.label;
> 156 |         const tokens = roleSlot.tokens;
      |               ^
  157 |         obj[label] = tokens;
  158 |       });
  159 |       return obj;


error: Line 162 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:162:1:
  160 |     },
  161 |     submitTrainingMatch() {
> 162 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  163 |       this.loading = !this.loading;
  164 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:166:13:
  164 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 166 |       const featureDict = this.featureDict;
      |             ^
  167 |       const sentenceId = this.sentenceId;
  168 |       const matchJSON = JSON.stringify({
  169 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:167:13:
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  166 |       const featureDict = this.featureDict;
> 167 |       const sentenceId = this.sentenceId;
      |             ^
  168 |       const matchJSON = JSON.stringify({
  169 |         slots: matchObj,
  170 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:176:7:
  174 |         data: matchJSON,
  175 |       };
> 176 |       console.log(data);
      |       ^
  177 |       database.post('matches/', data).then(matchRow => {
  178 |         const matchId = matchRow.id;
  179 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:177:44:
  175 |       };
  176 |       console.log(data);
> 177 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  178 |         const matchId = matchRow.id;
  179 |         console.log('match id:', matchId);
  180 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:179:9:
  177 |       database.post('matches/', data).then(matchRow => {
  178 |         const matchId = matchRow.id;
> 179 |         console.log('match id:', matchId);
      |         ^
  180 |         this.loading = !this.loading;
  181 |         router.push({
  182 |           path: '/calculate-pattern',


16 errors and 3 warnings found.
12 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:18:39 PM

 WARNING  Compiled with 3 warnings1:18:39 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(this.activeTemplateMatch.feature_dict);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:97:13:
   95 |   computed: {
   96 |     activeTemplateMatchSlotLabels() {
>  97 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
   98 |       if (activeTemplateMatch !== null) {
   99 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  100 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:101:14:
   99 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  100 |         return slotLabels;
> 101 |       } else {
      |              ^
  102 |         return null;
  103 |       }
  104 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:105:35:
  103 |       }
  104 |     },
> 105 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  106 |       const featureDict = this.activeTemplateMatch.feature_dict;
  107 |       if (featureDict !== undefined) {
  108 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:108:9:
  106 |       const featureDict = this.activeTemplateMatch.feature_dict;
  107 |       if (featureDict !== undefined) {
> 108 |         console.log(featureDict);
      |         ^
  109 |       }
  110 |     },
  111 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:113:11:
  111 |   },
  112 |   mounted() {
> 113 |     const sentenceId = this.sentenceId;
      |           ^
  114 |     const sentenceTargetAttribute = 'sentence';
  115 |     const tokensTargetAttribute = 'tokens';
  116 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:137:15:
  135 |           headers: { order: 'match_id desc' },
  136 |         })
> 137 |         .then(rows => {
      |               ^
  138 |           const match_ids = rows.map(row => row.match_id);
  139 |           return database.loadByIds(
  140 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:138:17:
  136 |         })
  137 |         .then(rows => {
> 138 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  139 |           return database.loadByIds(
  140 |             'matches',
  141 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:143:37:
  141 |             match_ids,
  142 |             this,
> 143 |             'trainingMatchesHistory'
      |                                     ^
  144 |           );
  145 |         });
  146 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:154:25:
  152 |     roleSlotArrayToObj(roleSlots) {
  153 |       const obj = {};
> 154 |       roleSlots.forEach(roleSlot => {
      |                         ^
  155 |         const label = roleSlot.label;
  156 |         const tokens = roleSlot.tokens;
  157 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:155:15:
  153 |       const obj = {};
  154 |       roleSlots.forEach(roleSlot => {
> 155 |         const label = roleSlot.label;
      |               ^
  156 |         const tokens = roleSlot.tokens;
  157 |         obj[label] = tokens;
  158 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:156:15:
  154 |       roleSlots.forEach(roleSlot => {
  155 |         const label = roleSlot.label;
> 156 |         const tokens = roleSlot.tokens;
      |               ^
  157 |         obj[label] = tokens;
  158 |       });
  159 |       return obj;


error: Line 162 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:162:1:
  160 |     },
  161 |     submitTrainingMatch() {
> 162 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  163 |       this.loading = !this.loading;
  164 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:166:13:
  164 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 166 |       const featureDict = this.featureDict;
      |             ^
  167 |       const sentenceId = this.sentenceId;
  168 |       const matchJSON = JSON.stringify({
  169 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:167:13:
  165 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  166 |       const featureDict = this.featureDict;
> 167 |       const sentenceId = this.sentenceId;
      |             ^
  168 |       const matchJSON = JSON.stringify({
  169 |         slots: matchObj,
  170 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:176:7:
  174 |         data: matchJSON,
  175 |       };
> 176 |       console.log(data);
      |       ^
  177 |       database.post('matches/', data).then(matchRow => {
  178 |         const matchId = matchRow.id;
  179 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:177:44:
  175 |       };
  176 |       console.log(data);
> 177 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  178 |         const matchId = matchRow.id;
  179 |         console.log('match id:', matchId);
  180 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:179:9:
  177 |       database.post('matches/', data).then(matchRow => {
  178 |         const matchId = matchRow.id;
> 179 |         console.log('match id:', matchId);
      |         ^
  180 |         this.loading = !this.loading;
  181 |         router.push({
  182 |           path: '/calculate-pattern',


16 errors and 3 warnings found.
12 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:18:41 PM

 WARNING  Compiled with 3 warnings1:18:42 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:92:48:
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(
> 92 |           this.activeTemplateMatch.feature_dict
     |                                                ^
  93 |         );
  94 |       }
  95 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:99:13:
   97 |   computed: {
   98 |     activeTemplateMatchSlotLabels() {
>  99 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  100 |       if (activeTemplateMatch !== null) {
  101 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  102 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:103:14:
  101 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  102 |         return slotLabels;
> 103 |       } else {
      |              ^
  104 |         return null;
  105 |       }
  106 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:107:35:
  105 |       }
  106 |     },
> 107 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  108 |       const featureDict = this.activeTemplateMatch.feature_dict;
  109 |       if (featureDict !== undefined) {
  110 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:110:9:
  108 |       const featureDict = this.activeTemplateMatch.feature_dict;
  109 |       if (featureDict !== undefined) {
> 110 |         console.log(featureDict);
      |         ^
  111 |       }
  112 |     },
  113 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:115:11:
  113 |   },
  114 |   mounted() {
> 115 |     const sentenceId = this.sentenceId;
      |           ^
  116 |     const sentenceTargetAttribute = 'sentence';
  117 |     const tokensTargetAttribute = 'tokens';
  118 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:139:15:
  137 |           headers: { order: 'match_id desc' },
  138 |         })
> 139 |         .then(rows => {
      |               ^
  140 |           const match_ids = rows.map(row => row.match_id);
  141 |           return database.loadByIds(
  142 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:140:17:
  138 |         })
  139 |         .then(rows => {
> 140 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  141 |           return database.loadByIds(
  142 |             'matches',
  143 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:145:37:
  143 |             match_ids,
  144 |             this,
> 145 |             'trainingMatchesHistory'
      |                                     ^
  146 |           );
  147 |         });
  148 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:156:25:
  154 |     roleSlotArrayToObj(roleSlots) {
  155 |       const obj = {};
> 156 |       roleSlots.forEach(roleSlot => {
      |                         ^
  157 |         const label = roleSlot.label;
  158 |         const tokens = roleSlot.tokens;
  159 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:157:15:
  155 |       const obj = {};
  156 |       roleSlots.forEach(roleSlot => {
> 157 |         const label = roleSlot.label;
      |               ^
  158 |         const tokens = roleSlot.tokens;
  159 |         obj[label] = tokens;
  160 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:158:15:
  156 |       roleSlots.forEach(roleSlot => {
  157 |         const label = roleSlot.label;
> 158 |         const tokens = roleSlot.tokens;
      |               ^
  159 |         obj[label] = tokens;
  160 |       });
  161 |       return obj;


error: Line 164 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:164:1:
  162 |     },
  163 |     submitTrainingMatch() {
> 164 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  165 |       this.loading = !this.loading;
  166 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:168:13:
  166 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 168 |       const featureDict = this.featureDict;
      |             ^
  169 |       const sentenceId = this.sentenceId;
  170 |       const matchJSON = JSON.stringify({
  171 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:169:13:
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  168 |       const featureDict = this.featureDict;
> 169 |       const sentenceId = this.sentenceId;
      |             ^
  170 |       const matchJSON = JSON.stringify({
  171 |         slots: matchObj,
  172 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:178:7:
  176 |         data: matchJSON,
  177 |       };
> 178 |       console.log(data);
      |       ^
  179 |       database.post('matches/', data).then(matchRow => {
  180 |         const matchId = matchRow.id;
  181 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:179:44:
  177 |       };
  178 |       console.log(data);
> 179 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  180 |         const matchId = matchRow.id;
  181 |         console.log('match id:', matchId);
  182 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:181:9:
  179 |       database.post('matches/', data).then(matchRow => {
  180 |         const matchId = matchRow.id;
> 181 |         console.log('match id:', matchId);
      |         ^
  182 |         this.loading = !this.loading;
  183 |         router.push({
  184 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:18:54 PM

 WARNING  Compiled with 3 warnings1:18:54 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:92:57:
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(
> 92 |           this.activeTemplateMatch.feature_dict, null, 2
     |                                                         ^
  93 |         );
  94 |       }
  95 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:99:13:
   97 |   computed: {
   98 |     activeTemplateMatchSlotLabels() {
>  99 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  100 |       if (activeTemplateMatch !== null) {
  101 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  102 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:103:14:
  101 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  102 |         return slotLabels;
> 103 |       } else {
      |              ^
  104 |         return null;
  105 |       }
  106 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:107:35:
  105 |       }
  106 |     },
> 107 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  108 |       const featureDict = this.activeTemplateMatch.feature_dict;
  109 |       if (featureDict !== undefined) {
  110 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:110:9:
  108 |       const featureDict = this.activeTemplateMatch.feature_dict;
  109 |       if (featureDict !== undefined) {
> 110 |         console.log(featureDict);
      |         ^
  111 |       }
  112 |     },
  113 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:115:11:
  113 |   },
  114 |   mounted() {
> 115 |     const sentenceId = this.sentenceId;
      |           ^
  116 |     const sentenceTargetAttribute = 'sentence';
  117 |     const tokensTargetAttribute = 'tokens';
  118 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:139:15:
  137 |           headers: { order: 'match_id desc' },
  138 |         })
> 139 |         .then(rows => {
      |               ^
  140 |           const match_ids = rows.map(row => row.match_id);
  141 |           return database.loadByIds(
  142 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:140:17:
  138 |         })
  139 |         .then(rows => {
> 140 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  141 |           return database.loadByIds(
  142 |             'matches',
  143 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:145:37:
  143 |             match_ids,
  144 |             this,
> 145 |             'trainingMatchesHistory'
      |                                     ^
  146 |           );
  147 |         });
  148 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:156:25:
  154 |     roleSlotArrayToObj(roleSlots) {
  155 |       const obj = {};
> 156 |       roleSlots.forEach(roleSlot => {
      |                         ^
  157 |         const label = roleSlot.label;
  158 |         const tokens = roleSlot.tokens;
  159 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:157:15:
  155 |       const obj = {};
  156 |       roleSlots.forEach(roleSlot => {
> 157 |         const label = roleSlot.label;
      |               ^
  158 |         const tokens = roleSlot.tokens;
  159 |         obj[label] = tokens;
  160 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:158:15:
  156 |       roleSlots.forEach(roleSlot => {
  157 |         const label = roleSlot.label;
> 158 |         const tokens = roleSlot.tokens;
      |               ^
  159 |         obj[label] = tokens;
  160 |       });
  161 |       return obj;


error: Line 164 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:164:1:
  162 |     },
  163 |     submitTrainingMatch() {
> 164 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  165 |       this.loading = !this.loading;
  166 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:168:13:
  166 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 168 |       const featureDict = this.featureDict;
      |             ^
  169 |       const sentenceId = this.sentenceId;
  170 |       const matchJSON = JSON.stringify({
  171 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:169:13:
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  168 |       const featureDict = this.featureDict;
> 169 |       const sentenceId = this.sentenceId;
      |             ^
  170 |       const matchJSON = JSON.stringify({
  171 |         slots: matchObj,
  172 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:178:7:
  176 |         data: matchJSON,
  177 |       };
> 178 |       console.log(data);
      |       ^
  179 |       database.post('matches/', data).then(matchRow => {
  180 |         const matchId = matchRow.id;
  181 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:179:44:
  177 |       };
  178 |       console.log(data);
> 179 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  180 |         const matchId = matchRow.id;
  181 |         console.log('match id:', matchId);
  182 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:181:9:
  179 |       database.post('matches/', data).then(matchRow => {
  180 |         const matchId = matchRow.id;
> 181 |         console.log('match id:', matchId);
      |         ^
  182 |         this.loading = !this.loading;
  183 |         router.push({
  184 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:19:21 PM

 WARNING  Compiled with 3 warnings1:19:21 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:92:57:
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(
> 92 |           this.activeTemplateMatch.feature_dict, null, 2
     |                                                         ^
  93 |         );
  94 |       }
  95 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:99:13:
   97 |   computed: {
   98 |     activeTemplateMatchSlotLabels() {
>  99 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  100 |       if (activeTemplateMatch !== null) {
  101 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  102 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:103:14:
  101 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  102 |         return slotLabels;
> 103 |       } else {
      |              ^
  104 |         return null;
  105 |       }
  106 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:107:35:
  105 |       }
  106 |     },
> 107 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  108 |       const featureDict = this.activeTemplateMatch.feature_dict;
  109 |       if (featureDict !== undefined) {
  110 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:110:9:
  108 |       const featureDict = this.activeTemplateMatch.feature_dict;
  109 |       if (featureDict !== undefined) {
> 110 |         console.log(featureDict);
      |         ^
  111 |       }
  112 |     },
  113 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:115:11:
  113 |   },
  114 |   mounted() {
> 115 |     const sentenceId = this.sentenceId;
      |           ^
  116 |     const sentenceTargetAttribute = 'sentence';
  117 |     const tokensTargetAttribute = 'tokens';
  118 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:139:15:
  137 |           headers: { order: 'match_id desc' },
  138 |         })
> 139 |         .then(rows => {
      |               ^
  140 |           const match_ids = rows.map(row => row.match_id);
  141 |           return database.loadByIds(
  142 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:140:17:
  138 |         })
  139 |         .then(rows => {
> 140 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  141 |           return database.loadByIds(
  142 |             'matches',
  143 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:145:37:
  143 |             match_ids,
  144 |             this,
> 145 |             'trainingMatchesHistory'
      |                                     ^
  146 |           );
  147 |         });
  148 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:156:25:
  154 |     roleSlotArrayToObj(roleSlots) {
  155 |       const obj = {};
> 156 |       roleSlots.forEach(roleSlot => {
      |                         ^
  157 |         const label = roleSlot.label;
  158 |         const tokens = roleSlot.tokens;
  159 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:157:15:
  155 |       const obj = {};
  156 |       roleSlots.forEach(roleSlot => {
> 157 |         const label = roleSlot.label;
      |               ^
  158 |         const tokens = roleSlot.tokens;
  159 |         obj[label] = tokens;
  160 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:158:15:
  156 |       roleSlots.forEach(roleSlot => {
  157 |         const label = roleSlot.label;
> 158 |         const tokens = roleSlot.tokens;
      |               ^
  159 |         obj[label] = tokens;
  160 |       });
  161 |       return obj;


error: Line 164 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:164:1:
  162 |     },
  163 |     submitTrainingMatch() {
> 164 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  165 |       this.loading = !this.loading;
  166 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:168:13:
  166 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 168 |       const featureDict = this.featureDict;
      |             ^
  169 |       const sentenceId = this.sentenceId;
  170 |       const matchJSON = JSON.stringify({
  171 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:169:13:
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  168 |       const featureDict = this.featureDict;
> 169 |       const sentenceId = this.sentenceId;
      |             ^
  170 |       const matchJSON = JSON.stringify({
  171 |         slots: matchObj,
  172 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:178:7:
  176 |         data: matchJSON,
  177 |       };
> 178 |       console.log(data);
      |       ^
  179 |       database.post('matches/', data).then(matchRow => {
  180 |         const matchId = matchRow.id;
  181 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:179:44:
  177 |       };
  178 |       console.log(data);
> 179 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  180 |         const matchId = matchRow.id;
  181 |         console.log('match id:', matchId);
  182 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:181:9:
  179 |       database.post('matches/', data).then(matchRow => {
  180 |         const matchId = matchRow.id;
> 181 |         console.log('match id:', matchId);
      |         ^
  182 |         this.loading = !this.loading;
  183 |         router.push({
  184 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:19:54 PM

 WARNING  Compiled with 3 warnings1:19:55 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:92:57:
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(
> 92 |           this.activeTemplateMatch.feature_dict, null, 2
     |                                                         ^
  93 |         );
  94 |       }
  95 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:99:13:
   97 |   computed: {
   98 |     activeTemplateMatchSlotLabels() {
>  99 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  100 |       if (activeTemplateMatch !== null) {
  101 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  102 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:103:14:
  101 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  102 |         return slotLabels;
> 103 |       } else {
      |              ^
  104 |         return null;
  105 |       }
  106 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:107:35:
  105 |       }
  106 |     },
> 107 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  108 |       const featureDict = this.activeTemplateMatch.feature_dict;
  109 |       if (featureDict !== undefined) {
  110 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:110:9:
  108 |       const featureDict = this.activeTemplateMatch.feature_dict;
  109 |       if (featureDict !== undefined) {
> 110 |         console.log(featureDict);
      |         ^
  111 |       }
  112 |     },
  113 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:115:11:
  113 |   },
  114 |   mounted() {
> 115 |     const sentenceId = this.sentenceId;
      |           ^
  116 |     const sentenceTargetAttribute = 'sentence';
  117 |     const tokensTargetAttribute = 'tokens';
  118 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:139:15:
  137 |           headers: { order: 'match_id desc' },
  138 |         })
> 139 |         .then(rows => {
      |               ^
  140 |           const match_ids = rows.map(row => row.match_id);
  141 |           return database.loadByIds(
  142 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:140:17:
  138 |         })
  139 |         .then(rows => {
> 140 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  141 |           return database.loadByIds(
  142 |             'matches',
  143 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:145:37:
  143 |             match_ids,
  144 |             this,
> 145 |             'trainingMatchesHistory'
      |                                     ^
  146 |           );
  147 |         });
  148 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:156:25:
  154 |     roleSlotArrayToObj(roleSlots) {
  155 |       const obj = {};
> 156 |       roleSlots.forEach(roleSlot => {
      |                         ^
  157 |         const label = roleSlot.label;
  158 |         const tokens = roleSlot.tokens;
  159 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:157:15:
  155 |       const obj = {};
  156 |       roleSlots.forEach(roleSlot => {
> 157 |         const label = roleSlot.label;
      |               ^
  158 |         const tokens = roleSlot.tokens;
  159 |         obj[label] = tokens;
  160 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:158:15:
  156 |       roleSlots.forEach(roleSlot => {
  157 |         const label = roleSlot.label;
> 158 |         const tokens = roleSlot.tokens;
      |               ^
  159 |         obj[label] = tokens;
  160 |       });
  161 |       return obj;


error: Line 164 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:164:1:
  162 |     },
  163 |     submitTrainingMatch() {
> 164 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  165 |       this.loading = !this.loading;
  166 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:168:13:
  166 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 168 |       const featureDict = this.featureDict;
      |             ^
  169 |       const sentenceId = this.sentenceId;
  170 |       const matchJSON = JSON.stringify({
  171 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:169:13:
  167 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  168 |       const featureDict = this.featureDict;
> 169 |       const sentenceId = this.sentenceId;
      |             ^
  170 |       const matchJSON = JSON.stringify({
  171 |         slots: matchObj,
  172 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:178:7:
  176 |         data: matchJSON,
  177 |       };
> 178 |       console.log(data);
      |       ^
  179 |       database.post('matches/', data).then(matchRow => {
  180 |         const matchId = matchRow.id;
  181 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:179:44:
  177 |       };
  178 |       console.log(data);
> 179 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  180 |         const matchId = matchRow.id;
  181 |         console.log('match id:', matchId);
  182 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:181:9:
  179 |       database.post('matches/', data).then(matchRow => {
  180 |         const matchId = matchRow.id;
> 181 |         console.log('match id:', matchId);
      |         ^
  182 |         this.loading = !this.loading;
  183 |         router.push({
  184 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:19:57 PM

 WARNING  Compiled with 3 warnings1:19:58 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:20:11 PM

 WARNING  Compiled with 3 warnings1:20:11 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:22:32 PM

 WARNING  Compiled with 4 warnings1:22:32 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:22:54 PM

 WARNING  Compiled with 5 warnings1:22:55 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:28:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default() { return [] },
     |                            ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:61:6:
  59 |       patternAPIMessageLog: [],
  60 |       buildPatternResultsReceived: false,
> 61 |     }
     |      ^
  62 |   },
  63 |   mounted() {
  64 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:64:26:
  62 |   },
  63 |   mounted() {
> 64 |     this.loadPosMatches()
     |                          ^
  65 |     this.loadNegMatches()
  66 |     this.setPatternAPICallbacks()
  67 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   mounted() {
  64 |     this.loadPosMatches()
> 65 |     this.loadNegMatches()
     |                          ^
  66 |     this.setPatternAPICallbacks()
  67 |   },
  68 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:34:
  64 |     this.loadPosMatches()
  65 |     this.loadNegMatches()
> 66 |     this.setPatternAPICallbacks()
     |                                  ^
  67 |   },
  68 |   methods: {
  69 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:70:58:
  68 |   methods: {
  69 |     isLoaded() {
> 70 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:71:55:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:81:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:60:
  70 |       const posMatchesLoaded = this.posMatches.length > 0
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  73 |       return isLoaded
  74 |     },
  75 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:22:
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 73 |       return isLoaded
     |                      ^
  74 |     },
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:76:44:
  74 |     },
  75 |     loadPosMatches() {
> 76 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:28:
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]
> 77 |       const loadOnto = this
     |                            ^
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:43:
  76 |       const posMatchIds = [this.posMatchId]
  77 |       const loadOnto = this
> 78 |       const targetAttribute = 'posMatches'
     |                                           ^
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },
  81 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:81:
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
> 79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  80 |     },
  81 |     loadNegMatches() {
  82 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:82:28:
  80 |     },
  81 |     loadNegMatches() {
> 82 |       const loadOnto = this
     |                            ^
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:43:
  81 |     loadNegMatches() {
  82 |       const loadOnto = this
> 83 |       const targetAttribute = 'negMatches'
     |                                           ^
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:84:13:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |             ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |                                           ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:81:
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
> 85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  86 |     },
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:88:13:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:88:61:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:90:43:
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
  89 |       patternAPI.on('message', function (message) {
> 90 |         patternAPIMessageLog.push(message)
     |                                           ^
  91 |       })
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:9:
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
> 91 |       })
     |         ^
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
  94 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:93:43:
  91 |       })
  92 |       patternAPI.on('error', function (message) {
> 93 |         patternAPIMessageLog.push(message)
     |                                           ^
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:9:
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
> 94 |       })
     |         ^
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:95:13:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |             ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:25:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:97:9:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:97:55:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:99:61:
   97 |         console.log(this_.buildPatternResultsReceived)
   98 |         if (!this_.buildPatternResultsReceived) {
>  99 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:100:11:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |           ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:53:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |                                                     ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:51:
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)
> 101 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:34:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:61:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:62:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:48:
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
> 103 |           patternAPI.emit('find_matches', data)
      |                                                ^
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:105:11:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |           ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:105:78:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:107:9:
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }
> 107 |       })
      |         ^
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:108:55:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:109:58:
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {
> 109 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  110 |       })
  111 |     },
  112 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:9:
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
> 110 |       })
      |         ^
  111 |     },
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:114:28:
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.
> 114 |       this.submitted = true
      |                            ^
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:47:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:115:49:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:116:7:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |       ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:52:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:119:38:
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
> 119 |         pos_match_id: this.posMatchId
      |                                      ^
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:120:8:
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId
> 120 |       }
      |        ^
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
  123 |   }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:57:
  119 |         pos_match_id: this.posMatchId
  120 |       }
> 121 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  122 |     }
  123 |   }
  124 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:122:6:
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
> 122 |     }
      |      ^
  123 |   }
  124 | }
  125 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:123:4:
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
> 123 |   }
      |    ^
  124 | }
  125 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:124:2:
  122 |     }
  123 |   }
> 124 | }
      |  ^
  125 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:125:10:
  123 |   }
  124 | }
> 125 | </script>
      |          ^


57 errors and 8 warnings found.
53 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:23:00 PM

 WARNING  Compiled with 5 warnings1:23:01 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:61:6:
  59 |       patternAPIMessageLog: [],
  60 |       buildPatternResultsReceived: false,
> 61 |     }
     |      ^
  62 |   },
  63 |   mounted() {
  64 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:64:26:
  62 |   },
  63 |   mounted() {
> 64 |     this.loadPosMatches()
     |                          ^
  65 |     this.loadNegMatches()
  66 |     this.setPatternAPICallbacks()
  67 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   mounted() {
  64 |     this.loadPosMatches()
> 65 |     this.loadNegMatches()
     |                          ^
  66 |     this.setPatternAPICallbacks()
  67 |   },
  68 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:34:
  64 |     this.loadPosMatches()
  65 |     this.loadNegMatches()
> 66 |     this.setPatternAPICallbacks()
     |                                  ^
  67 |   },
  68 |   methods: {
  69 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:70:58:
  68 |   methods: {
  69 |     isLoaded() {
> 70 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:71:55:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:81:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:60:
  70 |       const posMatchesLoaded = this.posMatches.length > 0
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  73 |       return isLoaded
  74 |     },
  75 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:22:
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 73 |       return isLoaded
     |                      ^
  74 |     },
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:76:44:
  74 |     },
  75 |     loadPosMatches() {
> 76 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:28:
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]
> 77 |       const loadOnto = this
     |                            ^
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:43:
  76 |       const posMatchIds = [this.posMatchId]
  77 |       const loadOnto = this
> 78 |       const targetAttribute = 'posMatches'
     |                                           ^
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },
  81 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:81:
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
> 79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  80 |     },
  81 |     loadNegMatches() {
  82 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:82:28:
  80 |     },
  81 |     loadNegMatches() {
> 82 |       const loadOnto = this
     |                            ^
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:43:
  81 |     loadNegMatches() {
  82 |       const loadOnto = this
> 83 |       const targetAttribute = 'negMatches'
     |                                           ^
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:84:13:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |             ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |                                           ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:81:
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
> 85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  86 |     },
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:88:13:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:88:61:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:90:43:
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
  89 |       patternAPI.on('message', function (message) {
> 90 |         patternAPIMessageLog.push(message)
     |                                           ^
  91 |       })
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:9:
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
> 91 |       })
     |         ^
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
  94 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:93:43:
  91 |       })
  92 |       patternAPI.on('error', function (message) {
> 93 |         patternAPIMessageLog.push(message)
     |                                           ^
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:9:
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
> 94 |       })
     |         ^
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:95:13:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |             ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:25:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:97:9:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:97:55:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:99:61:
   97 |         console.log(this_.buildPatternResultsReceived)
   98 |         if (!this_.buildPatternResultsReceived) {
>  99 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:100:11:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |           ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:53:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |                                                     ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:51:
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)
> 101 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:34:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:61:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:62:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:48:
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
> 103 |           patternAPI.emit('find_matches', data)
      |                                                ^
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:105:11:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |           ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:105:78:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:107:9:
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }
> 107 |       })
      |         ^
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:108:55:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:109:58:
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {
> 109 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  110 |       })
  111 |     },
  112 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:9:
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
> 110 |       })
      |         ^
  111 |     },
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:114:28:
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.
> 114 |       this.submitted = true
      |                            ^
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:47:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:115:49:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:116:7:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |       ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:52:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:119:38:
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
> 119 |         pos_match_id: this.posMatchId
      |                                      ^
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:120:8:
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId
> 120 |       }
      |        ^
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
  123 |   }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:57:
  119 |         pos_match_id: this.posMatchId
  120 |       }
> 121 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  122 |     }
  123 |   }
  124 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:122:6:
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
> 122 |     }
      |      ^
  123 |   }
  124 | }
  125 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:123:4:
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
> 123 |   }
      |    ^
  124 | }
  125 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:124:2:
  122 |     }
  123 |   }
> 124 | }
      |  ^
  125 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:125:10:
  123 |   }
  124 | }
> 125 | </script>
      |          ^


58 errors and 8 warnings found.
54 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:23:01 PM

 WARNING  Compiled with 5 warnings1:23:01 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:61:6:
  59 |       patternAPIMessageLog: [],
  60 |       buildPatternResultsReceived: false,
> 61 |     }
     |      ^
  62 |   },
  63 |   mounted() {
  64 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:64:26:
  62 |   },
  63 |   mounted() {
> 64 |     this.loadPosMatches()
     |                          ^
  65 |     this.loadNegMatches()
  66 |     this.setPatternAPICallbacks()
  67 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   mounted() {
  64 |     this.loadPosMatches()
> 65 |     this.loadNegMatches()
     |                          ^
  66 |     this.setPatternAPICallbacks()
  67 |   },
  68 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:34:
  64 |     this.loadPosMatches()
  65 |     this.loadNegMatches()
> 66 |     this.setPatternAPICallbacks()
     |                                  ^
  67 |   },
  68 |   methods: {
  69 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:70:58:
  68 |   methods: {
  69 |     isLoaded() {
> 70 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:71:55:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:81:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:60:
  70 |       const posMatchesLoaded = this.posMatches.length > 0
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  73 |       return isLoaded
  74 |     },
  75 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:22:
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 73 |       return isLoaded
     |                      ^
  74 |     },
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:76:44:
  74 |     },
  75 |     loadPosMatches() {
> 76 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:28:
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]
> 77 |       const loadOnto = this
     |                            ^
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:43:
  76 |       const posMatchIds = [this.posMatchId]
  77 |       const loadOnto = this
> 78 |       const targetAttribute = 'posMatches'
     |                                           ^
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },
  81 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:81:
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
> 79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  80 |     },
  81 |     loadNegMatches() {
  82 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:82:28:
  80 |     },
  81 |     loadNegMatches() {
> 82 |       const loadOnto = this
     |                            ^
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:43:
  81 |     loadNegMatches() {
  82 |       const loadOnto = this
> 83 |       const targetAttribute = 'negMatches'
     |                                           ^
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:84:13:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |             ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |                                           ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:81:
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
> 85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  86 |     },
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:88:13:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:88:61:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:90:43:
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
  89 |       patternAPI.on('message', function (message) {
> 90 |         patternAPIMessageLog.push(message)
     |                                           ^
  91 |       })
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:9:
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
> 91 |       })
     |         ^
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
  94 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:93:43:
  91 |       })
  92 |       patternAPI.on('error', function (message) {
> 93 |         patternAPIMessageLog.push(message)
     |                                           ^
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:9:
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
> 94 |       })
     |         ^
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:95:13:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |             ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:25:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:97:9:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:97:55:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:99:61:
   97 |         console.log(this_.buildPatternResultsReceived)
   98 |         if (!this_.buildPatternResultsReceived) {
>  99 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:100:11:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |           ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:53:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |                                                     ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:51:
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)
> 101 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:34:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:61:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:62:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:48:
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
> 103 |           patternAPI.emit('find_matches', data)
      |                                                ^
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:105:11:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |           ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:105:78:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:107:9:
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }
> 107 |       })
      |         ^
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:108:55:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:109:58:
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {
> 109 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  110 |       })
  111 |     },
  112 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:9:
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
> 110 |       })
      |         ^
  111 |     },
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:114:28:
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.
> 114 |       this.submitted = true
      |                            ^
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:47:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:115:49:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:116:7:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |       ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:52:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:119:38:
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
> 119 |         pos_match_id: this.posMatchId
      |                                      ^
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:120:8:
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId
> 120 |       }
      |        ^
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
  123 |   }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:57:
  119 |         pos_match_id: this.posMatchId
  120 |       }
> 121 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  122 |     }
  123 |   }
  124 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:122:6:
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
> 122 |     }
      |      ^
  123 |   }
  124 | }
  125 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:123:4:
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
> 123 |   }
      |    ^
  124 | }
  125 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:124:2:
  122 |     }
  123 |   }
> 124 | }
      |  ^
  125 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:125:10:
  123 |   }
  124 | }
> 125 | </script>
      |          ^


58 errors and 8 warnings found.
54 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:23:01 PM

 WARNING  Compiled with 5 warnings1:23:02 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:61:6:
  59 |       patternAPIMessageLog: [],
  60 |       buildPatternResultsReceived: false,
> 61 |     }
     |      ^
  62 |   },
  63 |   mounted() {
  64 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:64:26:
  62 |   },
  63 |   mounted() {
> 64 |     this.loadPosMatches()
     |                          ^
  65 |     this.loadNegMatches()
  66 |     this.setPatternAPICallbacks()
  67 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   mounted() {
  64 |     this.loadPosMatches()
> 65 |     this.loadNegMatches()
     |                          ^
  66 |     this.setPatternAPICallbacks()
  67 |   },
  68 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:34:
  64 |     this.loadPosMatches()
  65 |     this.loadNegMatches()
> 66 |     this.setPatternAPICallbacks()
     |                                  ^
  67 |   },
  68 |   methods: {
  69 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:70:58:
  68 |   methods: {
  69 |     isLoaded() {
> 70 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:71:55:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:81:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:60:
  70 |       const posMatchesLoaded = this.posMatches.length > 0
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  73 |       return isLoaded
  74 |     },
  75 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:22:
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 73 |       return isLoaded
     |                      ^
  74 |     },
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:76:44:
  74 |     },
  75 |     loadPosMatches() {
> 76 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:28:
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]
> 77 |       const loadOnto = this
     |                            ^
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:43:
  76 |       const posMatchIds = [this.posMatchId]
  77 |       const loadOnto = this
> 78 |       const targetAttribute = 'posMatches'
     |                                           ^
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },
  81 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:81:
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
> 79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  80 |     },
  81 |     loadNegMatches() {
  82 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:82:28:
  80 |     },
  81 |     loadNegMatches() {
> 82 |       const loadOnto = this
     |                            ^
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:43:
  81 |     loadNegMatches() {
  82 |       const loadOnto = this
> 83 |       const targetAttribute = 'negMatches'
     |                                           ^
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:84:13:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |             ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |                                           ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:81:
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
> 85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  86 |     },
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:88:13:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:88:61:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:90:43:
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
  89 |       patternAPI.on('message', function (message) {
> 90 |         patternAPIMessageLog.push(message)
     |                                           ^
  91 |       })
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:9:
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
> 91 |       })
     |         ^
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
  94 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:93:43:
  91 |       })
  92 |       patternAPI.on('error', function (message) {
> 93 |         patternAPIMessageLog.push(message)
     |                                           ^
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:9:
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
> 94 |       })
     |         ^
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:95:13:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |             ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:25:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:97:9:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:97:55:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:99:61:
   97 |         console.log(this_.buildPatternResultsReceived)
   98 |         if (!this_.buildPatternResultsReceived) {
>  99 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:100:11:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |           ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:53:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |                                                     ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:51:
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)
> 101 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:34:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:61:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:62:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:48:
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
> 103 |           patternAPI.emit('find_matches', data)
      |                                                ^
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:105:11:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |           ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:105:78:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:107:9:
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }
> 107 |       })
      |         ^
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:108:55:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:109:58:
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {
> 109 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  110 |       })
  111 |     },
  112 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:9:
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
> 110 |       })
      |         ^
  111 |     },
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:114:28:
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.
> 114 |       this.submitted = true
      |                            ^
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:47:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:115:49:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:116:7:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |       ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:52:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:119:38:
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
> 119 |         pos_match_id: this.posMatchId
      |                                      ^
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:120:8:
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId
> 120 |       }
      |        ^
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
  123 |   }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:57:
  119 |         pos_match_id: this.posMatchId
  120 |       }
> 121 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  122 |     }
  123 |   }
  124 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:122:6:
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
> 122 |     }
      |      ^
  123 |   }
  124 | }
  125 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:123:4:
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
> 123 |   }
      |    ^
  124 | }
  125 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:124:2:
  122 |     }
  123 |   }
> 124 | }
      |  ^
  125 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:125:10:
  123 |   }
  124 | }
> 125 | </script>
      |          ^


58 errors and 8 warnings found.
54 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:23:02 PM

 WARNING  Compiled with 5 warnings1:23:03 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:61:6:
  59 |       patternAPIMessageLog: [],
  60 |       buildPatternResultsReceived: false,
> 61 |     }
     |      ^
  62 |   },
  63 |   mounted() {
  64 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:64:26:
  62 |   },
  63 |   mounted() {
> 64 |     this.loadPosMatches()
     |                          ^
  65 |     this.loadNegMatches()
  66 |     this.setPatternAPICallbacks()
  67 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   mounted() {
  64 |     this.loadPosMatches()
> 65 |     this.loadNegMatches()
     |                          ^
  66 |     this.setPatternAPICallbacks()
  67 |   },
  68 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:34:
  64 |     this.loadPosMatches()
  65 |     this.loadNegMatches()
> 66 |     this.setPatternAPICallbacks()
     |                                  ^
  67 |   },
  68 |   methods: {
  69 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:70:58:
  68 |   methods: {
  69 |     isLoaded() {
> 70 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:71:55:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:81:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:60:
  70 |       const posMatchesLoaded = this.posMatches.length > 0
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  73 |       return isLoaded
  74 |     },
  75 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:22:
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 73 |       return isLoaded
     |                      ^
  74 |     },
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:76:44:
  74 |     },
  75 |     loadPosMatches() {
> 76 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:28:
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]
> 77 |       const loadOnto = this
     |                            ^
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:43:
  76 |       const posMatchIds = [this.posMatchId]
  77 |       const loadOnto = this
> 78 |       const targetAttribute = 'posMatches'
     |                                           ^
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },
  81 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:81:
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
> 79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  80 |     },
  81 |     loadNegMatches() {
  82 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:82:28:
  80 |     },
  81 |     loadNegMatches() {
> 82 |       const loadOnto = this
     |                            ^
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:43:
  81 |     loadNegMatches() {
  82 |       const loadOnto = this
> 83 |       const targetAttribute = 'negMatches'
     |                                           ^
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:84:13:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |             ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |                                           ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:81:
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
> 85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  86 |     },
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:88:13:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:88:61:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:90:43:
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
  89 |       patternAPI.on('message', function (message) {
> 90 |         patternAPIMessageLog.push(message)
     |                                           ^
  91 |       })
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:9:
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
> 91 |       })
     |         ^
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
  94 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:93:43:
  91 |       })
  92 |       patternAPI.on('error', function (message) {
> 93 |         patternAPIMessageLog.push(message)
     |                                           ^
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:9:
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
> 94 |       })
     |         ^
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:95:13:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |             ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:25:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:97:9:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:97:55:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:99:61:
   97 |         console.log(this_.buildPatternResultsReceived)
   98 |         if (!this_.buildPatternResultsReceived) {
>  99 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:100:11:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |           ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:53:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |                                                     ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:51:
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)
> 101 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:34:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:61:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:62:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:48:
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
> 103 |           patternAPI.emit('find_matches', data)
      |                                                ^
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:105:11:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |           ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:105:78:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:107:9:
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }
> 107 |       })
      |         ^
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:108:55:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:109:58:
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {
> 109 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  110 |       })
  111 |     },
  112 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:9:
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
> 110 |       })
      |         ^
  111 |     },
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:114:28:
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.
> 114 |       this.submitted = true
      |                            ^
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:47:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:115:49:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:116:7:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |       ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:52:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:119:38:
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
> 119 |         pos_match_id: this.posMatchId
      |                                      ^
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:120:8:
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId
> 120 |       }
      |        ^
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
  123 |   }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:57:
  119 |         pos_match_id: this.posMatchId
  120 |       }
> 121 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  122 |     }
  123 |   }
  124 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:122:6:
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
> 122 |     }
      |      ^
  123 |   }
  124 | }
  125 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:123:4:
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
> 123 |   }
      |    ^
  124 | }
  125 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:124:2:
  122 |     }
  123 |   }
> 124 | }
      |  ^
  125 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:125:10:
  123 |   }
  124 | }
> 125 | </script>
      |          ^


58 errors and 8 warnings found.
54 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:23:03 PM

 WARNING  Compiled with 5 warnings1:23:03 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:61:6:
  59 |       patternAPIMessageLog: [],
  60 |       buildPatternResultsReceived: false,
> 61 |     }
     |      ^
  62 |   },
  63 |   mounted() {
  64 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:64:26:
  62 |   },
  63 |   mounted() {
> 64 |     this.loadPosMatches()
     |                          ^
  65 |     this.loadNegMatches()
  66 |     this.setPatternAPICallbacks()
  67 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   mounted() {
  64 |     this.loadPosMatches()
> 65 |     this.loadNegMatches()
     |                          ^
  66 |     this.setPatternAPICallbacks()
  67 |   },
  68 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:34:
  64 |     this.loadPosMatches()
  65 |     this.loadNegMatches()
> 66 |     this.setPatternAPICallbacks()
     |                                  ^
  67 |   },
  68 |   methods: {
  69 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:70:58:
  68 |   methods: {
  69 |     isLoaded() {
> 70 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:71:55:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:81:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:60:
  70 |       const posMatchesLoaded = this.posMatches.length > 0
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  73 |       return isLoaded
  74 |     },
  75 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:22:
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 73 |       return isLoaded
     |                      ^
  74 |     },
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:76:44:
  74 |     },
  75 |     loadPosMatches() {
> 76 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:28:
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]
> 77 |       const loadOnto = this
     |                            ^
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:43:
  76 |       const posMatchIds = [this.posMatchId]
  77 |       const loadOnto = this
> 78 |       const targetAttribute = 'posMatches'
     |                                           ^
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },
  81 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:81:
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
> 79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  80 |     },
  81 |     loadNegMatches() {
  82 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:82:28:
  80 |     },
  81 |     loadNegMatches() {
> 82 |       const loadOnto = this
     |                            ^
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:43:
  81 |     loadNegMatches() {
  82 |       const loadOnto = this
> 83 |       const targetAttribute = 'negMatches'
     |                                           ^
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:84:13:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |             ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |                                           ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:81:
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
> 85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  86 |     },
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:88:13:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:88:61:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:90:43:
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
  89 |       patternAPI.on('message', function (message) {
> 90 |         patternAPIMessageLog.push(message)
     |                                           ^
  91 |       })
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:9:
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
> 91 |       })
     |         ^
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
  94 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:93:43:
  91 |       })
  92 |       patternAPI.on('error', function (message) {
> 93 |         patternAPIMessageLog.push(message)
     |                                           ^
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:9:
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
> 94 |       })
     |         ^
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:95:13:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |             ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:25:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:97:9:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:97:55:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:99:61:
   97 |         console.log(this_.buildPatternResultsReceived)
   98 |         if (!this_.buildPatternResultsReceived) {
>  99 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:100:11:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |           ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:53:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |                                                     ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:51:
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)
> 101 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:34:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:61:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:62:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:48:
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
> 103 |           patternAPI.emit('find_matches', data)
      |                                                ^
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:105:11:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |           ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:105:78:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:107:9:
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }
> 107 |       })
      |         ^
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:108:55:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:109:58:
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {
> 109 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  110 |       })
  111 |     },
  112 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:9:
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
> 110 |       })
      |         ^
  111 |     },
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:114:28:
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.
> 114 |       this.submitted = true
      |                            ^
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:47:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:115:49:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:116:7:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |       ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:52:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:119:38:
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
> 119 |         pos_match_id: this.posMatchId
      |                                      ^
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:120:8:
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId
> 120 |       }
      |        ^
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
  123 |   }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:57:
  119 |         pos_match_id: this.posMatchId
  120 |       }
> 121 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  122 |     }
  123 |   }
  124 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:122:6:
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
> 122 |     }
      |      ^
  123 |   }
  124 | }
  125 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:123:4:
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
> 123 |   }
      |    ^
  124 | }
  125 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:124:2:
  122 |     }
  123 |   }
> 124 | }
      |  ^
  125 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:125:10:
  123 |   }
  124 | }
> 125 | </script>
      |          ^


58 errors and 8 warnings found.
54 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:23:09 PM

 WARNING  Compiled with 5 warnings1:23:10 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:61:6:
  59 |       patternAPIMessageLog: [],
  60 |       buildPatternResultsReceived: false,
> 61 |     }
     |      ^
  62 |   },
  63 |   mounted() {
  64 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:64:26:
  62 |   },
  63 |   mounted() {
> 64 |     this.loadPosMatches()
     |                          ^
  65 |     this.loadNegMatches()
  66 |     this.setPatternAPICallbacks()
  67 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   mounted() {
  64 |     this.loadPosMatches()
> 65 |     this.loadNegMatches()
     |                          ^
  66 |     this.setPatternAPICallbacks()
  67 |   },
  68 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:34:
  64 |     this.loadPosMatches()
  65 |     this.loadNegMatches()
> 66 |     this.setPatternAPICallbacks()
     |                                  ^
  67 |   },
  68 |   methods: {
  69 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:70:58:
  68 |   methods: {
  69 |     isLoaded() {
> 70 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:71:55:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:81:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:60:
  70 |       const posMatchesLoaded = this.posMatches.length > 0
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  73 |       return isLoaded
  74 |     },
  75 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:22:
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 73 |       return isLoaded
     |                      ^
  74 |     },
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:76:44:
  74 |     },
  75 |     loadPosMatches() {
> 76 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:28:
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]
> 77 |       const loadOnto = this
     |                            ^
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:43:
  76 |       const posMatchIds = [this.posMatchId]
  77 |       const loadOnto = this
> 78 |       const targetAttribute = 'posMatches'
     |                                           ^
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },
  81 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:81:
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
> 79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  80 |     },
  81 |     loadNegMatches() {
  82 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:82:28:
  80 |     },
  81 |     loadNegMatches() {
> 82 |       const loadOnto = this
     |                            ^
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:43:
  81 |     loadNegMatches() {
  82 |       const loadOnto = this
> 83 |       const targetAttribute = 'negMatches'
     |                                           ^
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:84:13:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |             ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |                                           ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:81:
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
> 85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  86 |     },
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:88:13:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:88:61:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:90:43:
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
  89 |       patternAPI.on('message', function (message) {
> 90 |         patternAPIMessageLog.push(message)
     |                                           ^
  91 |       })
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:9:
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
> 91 |       })
     |         ^
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
  94 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:93:43:
  91 |       })
  92 |       patternAPI.on('error', function (message) {
> 93 |         patternAPIMessageLog.push(message)
     |                                           ^
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:9:
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
> 94 |       })
     |         ^
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:95:13:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |             ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:25:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:97:9:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:97:55:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:99:61:
   97 |         console.log(this_.buildPatternResultsReceived)
   98 |         if (!this_.buildPatternResultsReceived) {
>  99 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:100:11:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |           ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:53:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |                                                     ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:51:
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)
> 101 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:34:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:61:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:62:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:48:
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
> 103 |           patternAPI.emit('find_matches', data)
      |                                                ^
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:105:11:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |           ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:105:78:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:107:9:
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }
> 107 |       })
      |         ^
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:108:55:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:109:58:
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {
> 109 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  110 |       })
  111 |     },
  112 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:9:
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
> 110 |       })
      |         ^
  111 |     },
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:114:28:
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.
> 114 |       this.submitted = true
      |                            ^
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:47:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:115:49:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:116:7:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |       ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:52:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:119:38:
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
> 119 |         pos_match_id: this.posMatchId
      |                                      ^
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:120:8:
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId
> 120 |       }
      |        ^
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
  123 |   }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:57:
  119 |         pos_match_id: this.posMatchId
  120 |       }
> 121 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  122 |     }
  123 |   }
  124 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:122:6:
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
> 122 |     }
      |      ^
  123 |   }
  124 | }
  125 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:123:4:
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
> 123 |   }
      |    ^
  124 | }
  125 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:124:2:
  122 |     }
  123 |   }
> 124 | }
      |  ^
  125 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:125:10:
  123 |   }
  124 | }
> 125 | </script>
      |          ^


58 errors and 8 warnings found.
54 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:23:10 PM

 WARNING  Compiled with 5 warnings1:23:10 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:61:6:
  59 |       patternAPIMessageLog: [],
  60 |       buildPatternResultsReceived: false,
> 61 |     }
     |      ^
  62 |   },
  63 |   mounted() {
  64 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:64:26:
  62 |   },
  63 |   mounted() {
> 64 |     this.loadPosMatches()
     |                          ^
  65 |     this.loadNegMatches()
  66 |     this.setPatternAPICallbacks()
  67 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   mounted() {
  64 |     this.loadPosMatches()
> 65 |     this.loadNegMatches()
     |                          ^
  66 |     this.setPatternAPICallbacks()
  67 |   },
  68 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:34:
  64 |     this.loadPosMatches()
  65 |     this.loadNegMatches()
> 66 |     this.setPatternAPICallbacks()
     |                                  ^
  67 |   },
  68 |   methods: {
  69 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:70:58:
  68 |   methods: {
  69 |     isLoaded() {
> 70 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:71:55:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:81:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:60:
  70 |       const posMatchesLoaded = this.posMatches.length > 0
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  73 |       return isLoaded
  74 |     },
  75 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:22:
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 73 |       return isLoaded
     |                      ^
  74 |     },
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:76:44:
  74 |     },
  75 |     loadPosMatches() {
> 76 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:28:
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]
> 77 |       const loadOnto = this
     |                            ^
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:43:
  76 |       const posMatchIds = [this.posMatchId]
  77 |       const loadOnto = this
> 78 |       const targetAttribute = 'posMatches'
     |                                           ^
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },
  81 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:81:
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
> 79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  80 |     },
  81 |     loadNegMatches() {
  82 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:82:28:
  80 |     },
  81 |     loadNegMatches() {
> 82 |       const loadOnto = this
     |                            ^
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:43:
  81 |     loadNegMatches() {
  82 |       const loadOnto = this
> 83 |       const targetAttribute = 'negMatches'
     |                                           ^
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:84:13:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |             ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |                                           ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:81:
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
> 85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  86 |     },
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:88:13:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:88:61:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:90:43:
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
  89 |       patternAPI.on('message', function (message) {
> 90 |         patternAPIMessageLog.push(message)
     |                                           ^
  91 |       })
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:9:
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
> 91 |       })
     |         ^
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
  94 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:93:43:
  91 |       })
  92 |       patternAPI.on('error', function (message) {
> 93 |         patternAPIMessageLog.push(message)
     |                                           ^
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:9:
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
> 94 |       })
     |         ^
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:95:13:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |             ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:25:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:97:9:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:97:55:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:99:61:
   97 |         console.log(this_.buildPatternResultsReceived)
   98 |         if (!this_.buildPatternResultsReceived) {
>  99 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:100:11:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |           ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:53:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |                                                     ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:51:
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)
> 101 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:34:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:61:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:62:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:48:
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
> 103 |           patternAPI.emit('find_matches', data)
      |                                                ^
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:105:11:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |           ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:105:78:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:107:9:
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }
> 107 |       })
      |         ^
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:108:55:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:109:58:
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {
> 109 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  110 |       })
  111 |     },
  112 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:9:
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
> 110 |       })
      |         ^
  111 |     },
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:114:28:
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.
> 114 |       this.submitted = true
      |                            ^
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:47:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:115:49:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:116:7:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |       ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:52:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:119:38:
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
> 119 |         pos_match_id: this.posMatchId
      |                                      ^
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:120:8:
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId
> 120 |       }
      |        ^
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
  123 |   }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:57:
  119 |         pos_match_id: this.posMatchId
  120 |       }
> 121 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  122 |     }
  123 |   }
  124 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:122:6:
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
> 122 |     }
      |      ^
  123 |   }
  124 | }
  125 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:123:4:
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
> 123 |   }
      |    ^
  124 | }
  125 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:124:2:
  122 |     }
  123 |   }
> 124 | }
      |  ^
  125 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:125:10:
  123 |   }
  124 | }
> 125 | </script>
      |          ^


58 errors and 8 warnings found.
54 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:23:14 PM

 WARNING  Compiled with 5 warnings1:23:14 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:61:6:
  59 |       patternAPIMessageLog: [],
  60 |       buildPatternResultsReceived: false,
> 61 |     }
     |      ^
  62 |   },
  63 |   mounted() {
  64 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:64:26:
  62 |   },
  63 |   mounted() {
> 64 |     this.loadPosMatches()
     |                          ^
  65 |     this.loadNegMatches()
  66 |     this.setPatternAPICallbacks()
  67 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   mounted() {
  64 |     this.loadPosMatches()
> 65 |     this.loadNegMatches()
     |                          ^
  66 |     this.setPatternAPICallbacks()
  67 |   },
  68 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:34:
  64 |     this.loadPosMatches()
  65 |     this.loadNegMatches()
> 66 |     this.setPatternAPICallbacks()
     |                                  ^
  67 |   },
  68 |   methods: {
  69 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:70:58:
  68 |   methods: {
  69 |     isLoaded() {
> 70 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:71:55:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:81:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:60:
  70 |       const posMatchesLoaded = this.posMatches.length > 0
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  73 |       return isLoaded
  74 |     },
  75 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:22:
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 73 |       return isLoaded
     |                      ^
  74 |     },
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:76:44:
  74 |     },
  75 |     loadPosMatches() {
> 76 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:28:
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]
> 77 |       const loadOnto = this
     |                            ^
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:43:
  76 |       const posMatchIds = [this.posMatchId]
  77 |       const loadOnto = this
> 78 |       const targetAttribute = 'posMatches'
     |                                           ^
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },
  81 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:81:
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
> 79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  80 |     },
  81 |     loadNegMatches() {
  82 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:82:28:
  80 |     },
  81 |     loadNegMatches() {
> 82 |       const loadOnto = this
     |                            ^
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:43:
  81 |     loadNegMatches() {
  82 |       const loadOnto = this
> 83 |       const targetAttribute = 'negMatches'
     |                                           ^
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:84:13:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |             ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |                                           ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:81:
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
> 85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  86 |     },
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:88:13:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:88:61:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:90:43:
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
  89 |       patternAPI.on('message', function (message) {
> 90 |         patternAPIMessageLog.push(message)
     |                                           ^
  91 |       })
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:9:
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
> 91 |       })
     |         ^
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
  94 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:93:43:
  91 |       })
  92 |       patternAPI.on('error', function (message) {
> 93 |         patternAPIMessageLog.push(message)
     |                                           ^
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:9:
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
> 94 |       })
     |         ^
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:95:13:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |             ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:25:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:97:9:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:97:55:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:99:61:
   97 |         console.log(this_.buildPatternResultsReceived)
   98 |         if (!this_.buildPatternResultsReceived) {
>  99 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:100:11:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |           ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:53:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |                                                     ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:51:
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)
> 101 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:34:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:61:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:62:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:48:
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
> 103 |           patternAPI.emit('find_matches', data)
      |                                                ^
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:105:11:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |           ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:105:78:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:107:9:
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }
> 107 |       })
      |         ^
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:108:55:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:109:58:
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {
> 109 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  110 |       })
  111 |     },
  112 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:9:
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
> 110 |       })
      |         ^
  111 |     },
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:114:28:
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.
> 114 |       this.submitted = true
      |                            ^
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:47:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:115:49:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:116:7:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |       ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:52:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:119:38:
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
> 119 |         pos_match_id: this.posMatchId
      |                                      ^
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:120:8:
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId
> 120 |       }
      |        ^
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
  123 |   }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:57:
  119 |         pos_match_id: this.posMatchId
  120 |       }
> 121 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  122 |     }
  123 |   }
  124 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:122:6:
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
> 122 |     }
      |      ^
  123 |   }
  124 | }
  125 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:123:4:
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
> 123 |   }
      |    ^
  124 | }
  125 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:124:2:
  122 |     }
  123 |   }
> 124 | }
      |  ^
  125 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:125:10:
  123 |   }
  124 | }
> 125 | </script>
      |          ^


58 errors and 8 warnings found.
54 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:23:21 PM

 WARNING  Compiled with 5 warnings1:23:21 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:61:6:
  59 |       patternAPIMessageLog: [],
  60 |       buildPatternResultsReceived: false,
> 61 |     }
     |      ^
  62 |   },
  63 |   mounted() {
  64 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:64:26:
  62 |   },
  63 |   mounted() {
> 64 |     this.loadPosMatches()
     |                          ^
  65 |     this.loadNegMatches()
  66 |     this.setPatternAPICallbacks()
  67 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   mounted() {
  64 |     this.loadPosMatches()
> 65 |     this.loadNegMatches()
     |                          ^
  66 |     this.setPatternAPICallbacks()
  67 |   },
  68 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:34:
  64 |     this.loadPosMatches()
  65 |     this.loadNegMatches()
> 66 |     this.setPatternAPICallbacks()
     |                                  ^
  67 |   },
  68 |   methods: {
  69 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:70:58:
  68 |   methods: {
  69 |     isLoaded() {
> 70 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:71:55:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:81:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:60:
  70 |       const posMatchesLoaded = this.posMatches.length > 0
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  73 |       return isLoaded
  74 |     },
  75 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:22:
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 73 |       return isLoaded
     |                      ^
  74 |     },
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:76:44:
  74 |     },
  75 |     loadPosMatches() {
> 76 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:28:
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]
> 77 |       const loadOnto = this
     |                            ^
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:43:
  76 |       const posMatchIds = [this.posMatchId]
  77 |       const loadOnto = this
> 78 |       const targetAttribute = 'posMatches'
     |                                           ^
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },
  81 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:81:
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
> 79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  80 |     },
  81 |     loadNegMatches() {
  82 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:82:28:
  80 |     },
  81 |     loadNegMatches() {
> 82 |       const loadOnto = this
     |                            ^
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:43:
  81 |     loadNegMatches() {
  82 |       const loadOnto = this
> 83 |       const targetAttribute = 'negMatches'
     |                                           ^
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:84:13:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |             ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |                                           ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:81:
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
> 85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  86 |     },
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:88:13:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:88:61:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:90:43:
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
  89 |       patternAPI.on('message', function (message) {
> 90 |         patternAPIMessageLog.push(message)
     |                                           ^
  91 |       })
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:9:
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
> 91 |       })
     |         ^
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
  94 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:93:43:
  91 |       })
  92 |       patternAPI.on('error', function (message) {
> 93 |         patternAPIMessageLog.push(message)
     |                                           ^
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:9:
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
> 94 |       })
     |         ^
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:95:13:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |             ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:25:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:97:9:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:97:55:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:99:61:
   97 |         console.log(this_.buildPatternResultsReceived)
   98 |         if (!this_.buildPatternResultsReceived) {
>  99 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:100:11:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |           ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:53:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |                                                     ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:51:
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)
> 101 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:34:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:61:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:62:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:48:
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
> 103 |           patternAPI.emit('find_matches', data)
      |                                                ^
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:105:11:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |           ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:105:78:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:107:9:
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }
> 107 |       })
      |         ^
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:108:55:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:109:58:
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {
> 109 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  110 |       })
  111 |     },
  112 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:9:
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
> 110 |       })
      |         ^
  111 |     },
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:114:28:
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.
> 114 |       this.submitted = true
      |                            ^
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:47:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:115:49:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:116:7:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |       ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:52:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:119:38:
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
> 119 |         pos_match_id: this.posMatchId
      |                                      ^
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:120:8:
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId
> 120 |       }
      |        ^
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
  123 |   }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:57:
  119 |         pos_match_id: this.posMatchId
  120 |       }
> 121 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  122 |     }
  123 |   }
  124 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:122:6:
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
> 122 |     }
      |      ^
  123 |   }
  124 | }
  125 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:123:4:
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
> 123 |   }
      |    ^
  124 | }
  125 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:124:2:
  122 |     }
  123 |   }
> 124 | }
      |  ^
  125 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:125:10:
  123 |   }
  124 | }
> 125 | </script>
      |          ^


58 errors and 8 warnings found.
54 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:23:25 PM

 WARNING  Compiled with 5 warnings1:23:25 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:61:6:
  59 |       patternAPIMessageLog: [],
  60 |       buildPatternResultsReceived: false,
> 61 |     }
     |      ^
  62 |   },
  63 |   mounted() {
  64 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:64:26:
  62 |   },
  63 |   mounted() {
> 64 |     this.loadPosMatches()
     |                          ^
  65 |     this.loadNegMatches()
  66 |     this.setPatternAPICallbacks()
  67 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   mounted() {
  64 |     this.loadPosMatches()
> 65 |     this.loadNegMatches()
     |                          ^
  66 |     this.setPatternAPICallbacks()
  67 |   },
  68 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:34:
  64 |     this.loadPosMatches()
  65 |     this.loadNegMatches()
> 66 |     this.setPatternAPICallbacks()
     |                                  ^
  67 |   },
  68 |   methods: {
  69 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:70:58:
  68 |   methods: {
  69 |     isLoaded() {
> 70 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:71:55:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:81:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:60:
  70 |       const posMatchesLoaded = this.posMatches.length > 0
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  73 |       return isLoaded
  74 |     },
  75 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:22:
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 73 |       return isLoaded
     |                      ^
  74 |     },
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:76:44:
  74 |     },
  75 |     loadPosMatches() {
> 76 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:28:
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]
> 77 |       const loadOnto = this
     |                            ^
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:43:
  76 |       const posMatchIds = [this.posMatchId]
  77 |       const loadOnto = this
> 78 |       const targetAttribute = 'posMatches'
     |                                           ^
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },
  81 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:81:
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
> 79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  80 |     },
  81 |     loadNegMatches() {
  82 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:82:28:
  80 |     },
  81 |     loadNegMatches() {
> 82 |       const loadOnto = this
     |                            ^
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:43:
  81 |     loadNegMatches() {
  82 |       const loadOnto = this
> 83 |       const targetAttribute = 'negMatches'
     |                                           ^
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:84:13:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |             ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |                                           ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:81:
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
> 85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  86 |     },
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:88:13:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:88:61:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:90:43:
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
  89 |       patternAPI.on('message', function (message) {
> 90 |         patternAPIMessageLog.push(message)
     |                                           ^
  91 |       })
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:9:
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
> 91 |       })
     |         ^
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
  94 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:93:43:
  91 |       })
  92 |       patternAPI.on('error', function (message) {
> 93 |         patternAPIMessageLog.push(message)
     |                                           ^
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:9:
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
> 94 |       })
     |         ^
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:95:13:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |             ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:25:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:97:9:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:97:55:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:99:61:
   97 |         console.log(this_.buildPatternResultsReceived)
   98 |         if (!this_.buildPatternResultsReceived) {
>  99 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:100:11:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |           ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:53:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |                                                     ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:51:
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)
> 101 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:34:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:61:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:62:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:48:
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
> 103 |           patternAPI.emit('find_matches', data)
      |                                                ^
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:105:11:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |           ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:105:78:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:107:9:
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }
> 107 |       })
      |         ^
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:108:55:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:109:58:
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {
> 109 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  110 |       })
  111 |     },
  112 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:9:
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
> 110 |       })
      |         ^
  111 |     },
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:114:28:
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.
> 114 |       this.submitted = true
      |                            ^
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:47:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:115:49:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:116:7:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |       ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:52:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:119:38:
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
> 119 |         pos_match_id: this.posMatchId
      |                                      ^
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:120:8:
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId
> 120 |       }
      |        ^
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
  123 |   }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:57:
  119 |         pos_match_id: this.posMatchId
  120 |       }
> 121 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  122 |     }
  123 |   }
  124 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:122:6:
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
> 122 |     }
      |      ^
  123 |   }
  124 | }
  125 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:123:4:
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
> 123 |   }
      |    ^
  124 | }
  125 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:124:2:
  122 |     }
  123 |   }
> 124 | }
      |  ^
  125 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:125:10:
  123 |   }
  124 | }
> 125 | </script>
      |          ^


58 errors and 8 warnings found.
54 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:23:28 PM

 WARNING  Compiled with 5 warnings1:23:29 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:61:6:
  59 |       patternAPIMessageLog: [],
  60 |       buildPatternResultsReceived: false,
> 61 |     }
     |      ^
  62 |   },
  63 |   mounted() {
  64 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:64:26:
  62 |   },
  63 |   mounted() {
> 64 |     this.loadPosMatches()
     |                          ^
  65 |     this.loadNegMatches()
  66 |     this.setPatternAPICallbacks()
  67 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   mounted() {
  64 |     this.loadPosMatches()
> 65 |     this.loadNegMatches()
     |                          ^
  66 |     this.setPatternAPICallbacks()
  67 |   },
  68 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:34:
  64 |     this.loadPosMatches()
  65 |     this.loadNegMatches()
> 66 |     this.setPatternAPICallbacks()
     |                                  ^
  67 |   },
  68 |   methods: {
  69 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:70:58:
  68 |   methods: {
  69 |     isLoaded() {
> 70 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:71:55:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:81:
  69 |     isLoaded() {
  70 |       const posMatchesLoaded = this.posMatches.length > 0
> 71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  73 |       return isLoaded
  74 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:60:
  70 |       const posMatchesLoaded = this.posMatches.length > 0
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  73 |       return isLoaded
  74 |     },
  75 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:22:
  71 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  72 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 73 |       return isLoaded
     |                      ^
  74 |     },
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:76:44:
  74 |     },
  75 |     loadPosMatches() {
> 76 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:28:
  75 |     loadPosMatches() {
  76 |       const posMatchIds = [this.posMatchId]
> 77 |       const loadOnto = this
     |                            ^
  78 |       const targetAttribute = 'posMatches'
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:43:
  76 |       const posMatchIds = [this.posMatchId]
  77 |       const loadOnto = this
> 78 |       const targetAttribute = 'posMatches'
     |                                           ^
  79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  80 |     },
  81 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:81:
  77 |       const loadOnto = this
  78 |       const targetAttribute = 'posMatches'
> 79 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  80 |     },
  81 |     loadNegMatches() {
  82 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:82:28:
  80 |     },
  81 |     loadNegMatches() {
> 82 |       const loadOnto = this
     |                            ^
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:43:
  81 |     loadNegMatches() {
  82 |       const loadOnto = this
> 83 |       const targetAttribute = 'negMatches'
     |                                           ^
  84 |       const negMatchIds = this.negMatchIds
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:84:13:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |             ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |       const loadOnto = this
  83 |       const targetAttribute = 'negMatches'
> 84 |       const negMatchIds = this.negMatchIds
     |                                           ^
  85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  86 |     },
  87 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:81:
  83 |       const targetAttribute = 'negMatches'
  84 |       const negMatchIds = this.negMatchIds
> 85 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  86 |     },
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:88:13:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:88:61:
  86 |     },
  87 |     setPatternAPICallbacks() {
> 88 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
  91 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:89:32:
  87 |     setPatternAPICallbacks() {
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 89 |       patternAPI.on('message', function (message) {
     |                                ^
  90 |         patternAPIMessageLog.push(message)
  91 |       })
  92 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:90:43:
  88 |       const patternAPIMessageLog = this.patternAPIMessageLog
  89 |       patternAPI.on('message', function (message) {
> 90 |         patternAPIMessageLog.push(message)
     |                                           ^
  91 |       })
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:9:
  89 |       patternAPI.on('message', function (message) {
  90 |         patternAPIMessageLog.push(message)
> 91 |       })
     |         ^
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
  94 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:92:30:
  90 |         patternAPIMessageLog.push(message)
  91 |       })
> 92 |       patternAPI.on('error', function (message) {
     |                              ^
  93 |         patternAPIMessageLog.push(message)
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:93:43:
  91 |       })
  92 |       patternAPI.on('error', function (message) {
> 93 |         patternAPIMessageLog.push(message)
     |                                           ^
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:9:
  92 |       patternAPI.on('error', function (message) {
  93 |         patternAPIMessageLog.push(message)
> 94 |       })
     |         ^
  95 |       const this_ = this // To provide this context in the socket listner
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:95:13:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |             ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:25:
  93 |         patternAPIMessageLog.push(message)
  94 |       })
> 95 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  96 |       patternAPI.on('build_pattern_success', function (data) {
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:96:46:
  94 |       })
  95 |       const this_ = this // To provide this context in the socket listner
> 96 |       patternAPI.on('build_pattern_success', function (data) {
     |                                              ^
  97 |         console.log(this_.buildPatternResultsReceived)
  98 |         if (!this_.buildPatternResultsReceived) {
  99 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:97:9:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:97:55:
   95 |       const this_ = this // To provide this context in the socket listner
   96 |       patternAPI.on('build_pattern_success', function (data) {
>  97 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:99:61:
   97 |         console.log(this_.buildPatternResultsReceived)
   98 |         if (!this_.buildPatternResultsReceived) {
>  99 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:100:11:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |           ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:53:
   98 |         if (!this_.buildPatternResultsReceived) {
   99 |           patternAPIMessageLog.push('Build pattern success')
> 100 |           console.log('build pattern success', data)
      |                                                     ^
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:51:
   99 |           patternAPIMessageLog.push('Build pattern success')
  100 |           console.log('build pattern success', data)
> 101 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  102 |           this_.patternResults = {patternId: data.pattern_id}
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:34:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:102:61:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:62:
  100 |           console.log('build pattern success', data)
  101 |           this_.buildPatternResultsReceived = true
> 102 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:48:
  101 |           this_.buildPatternResultsReceived = true
  102 |           this_.patternResults = {patternId: data.pattern_id}
> 103 |           patternAPI.emit('find_matches', data)
      |                                                ^
  104 |         } else {
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:105:11:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |           ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:105:78:
  103 |           patternAPI.emit('find_matches', data)
  104 |         } else {
> 105 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  106 |         }
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:107:9:
  105 |           console.log('UI tried to call API again, but already have results')
  106 |         }
> 107 |       })
      |         ^
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:108:45:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:108:55:
  106 |         }
  107 |       })
> 108 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  109 |         patternAPIMessageLog.push('Find matches success')
  110 |       })
  111 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:109:58:
  107 |       })
  108 |       patternAPI.on('find_matches_success', function (data) {
> 109 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  110 |       })
  111 |     },
  112 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:9:
  108 |       patternAPI.on('find_matches_success', function (data) {
  109 |         patternAPIMessageLog.push('Find matches success')
> 110 |       })
      |         ^
  111 |     },
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:114:28:
  112 |     calculatePattern() {
  113 |       // Hit API, listen to status.
> 114 |       this.submitted = true
      |                            ^
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:47:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:115:49:
  113 |       // Hit API, listen to status.
  114 |       this.submitted = true
> 115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  116 |       console.log(this.buildPatternResultsReceived)
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:116:7:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |       ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:52:
  114 |       this.submitted = true
  115 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 116 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:119:38:
  117 |       // If just pos match, build pattern. else refine
  118 |       const buildPatternData = {
> 119 |         pos_match_id: this.posMatchId
      |                                      ^
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:120:8:
  118 |       const buildPatternData = {
  119 |         pos_match_id: this.posMatchId
> 120 |       }
      |        ^
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
  123 |   }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:57:
  119 |         pos_match_id: this.posMatchId
  120 |       }
> 121 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  122 |     }
  123 |   }
  124 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:122:6:
  120 |       }
  121 |       patternAPI.emit('build_pattern', buildPatternData)
> 122 |     }
      |      ^
  123 |   }
  124 | }
  125 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:123:4:
  121 |       patternAPI.emit('build_pattern', buildPatternData)
  122 |     }
> 123 |   }
      |    ^
  124 | }
  125 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:124:2:
  122 |     }
  123 |   }
> 124 | }
      |  ^
  125 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:125:10:
  123 |   }
  124 | }
> 125 | </script>
      |          ^


58 errors and 8 warnings found.
54 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:39:04 PM

 WARNING  Compiled with 5 warnings1:39:04 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:62:6:
  60 |       patternAPIMessageLog: [],
  61 |       buildPatternResultsReceived: false,
> 62 |     }
     |      ^
  63 |   },
  64 |   mounted() {
  65 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   },
  64 |   mounted() {
> 65 |     this.loadPosMatches()
     |                          ^
  66 |     this.loadNegMatches()
  67 |     this.setPatternAPICallbacks()
  68 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:26:
  64 |   mounted() {
  65 |     this.loadPosMatches()
> 66 |     this.loadNegMatches()
     |                          ^
  67 |     this.setPatternAPICallbacks()
  68 |   },
  69 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:67:34:
  65 |     this.loadPosMatches()
  66 |     this.loadNegMatches()
> 67 |     this.setPatternAPICallbacks()
     |                                  ^
  68 |   },
  69 |   methods: {
  70 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:58:
  69 |   methods: {
  70 |     isLoaded() {
> 71 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:72:55:
  70 |     isLoaded() {
  71 |       const posMatchesLoaded = this.posMatches.length > 0
> 72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded
  75 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:81:
  70 |     isLoaded() {
  71 |       const posMatchesLoaded = this.posMatches.length > 0
> 72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded
  75 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:60:
  71 |       const posMatchesLoaded = this.posMatches.length > 0
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  74 |       return isLoaded
  75 |     },
  76 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:74:22:
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 74 |       return isLoaded
     |                      ^
  75 |     },
  76 |     loadPosMatches() {
  77 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:44:
  75 |     },
  76 |     loadPosMatches() {
> 77 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  78 |       const loadOnto = this
  79 |       const targetAttribute = 'posMatches'
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:28:
  76 |     loadPosMatches() {
  77 |       const posMatchIds = [this.posMatchId]
> 78 |       const loadOnto = this
     |                            ^
  79 |       const targetAttribute = 'posMatches'
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  81 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:43:
  77 |       const posMatchIds = [this.posMatchId]
  78 |       const loadOnto = this
> 79 |       const targetAttribute = 'posMatches'
     |                                           ^
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  81 |     },
  82 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:80:81:
  78 |       const loadOnto = this
  79 |       const targetAttribute = 'posMatches'
> 80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  81 |     },
  82 |     loadNegMatches() {
  83 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:28:
  81 |     },
  82 |     loadNegMatches() {
> 83 |       const loadOnto = this
     |                            ^
  84 |       const targetAttribute = 'negMatches'
  85 |       const negMatchIds = this.negMatchIds
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |     loadNegMatches() {
  83 |       const loadOnto = this
> 84 |       const targetAttribute = 'negMatches'
     |                                           ^
  85 |       const negMatchIds = this.negMatchIds
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:85:13:
  83 |       const loadOnto = this
  84 |       const targetAttribute = 'negMatches'
> 85 |       const negMatchIds = this.negMatchIds
     |             ^
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },
  88 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:43:
  83 |       const loadOnto = this
  84 |       const targetAttribute = 'negMatches'
> 85 |       const negMatchIds = this.negMatchIds
     |                                           ^
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },
  88 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:86:81:
  84 |       const targetAttribute = 'negMatches'
  85 |       const negMatchIds = this.negMatchIds
> 86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  87 |     },
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:89:13:
  87 |     },
  88 |     setPatternAPICallbacks() {
> 89 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
  92 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:89:61:
  87 |     },
  88 |     setPatternAPICallbacks() {
> 89 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
  92 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:90:32:
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 90 |       patternAPI.on('message', function (message) {
     |                                ^
  91 |         patternAPIMessageLog.push(message)
  92 |       })
  93 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:90:32:
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 90 |       patternAPI.on('message', function (message) {
     |                                ^
  91 |         patternAPIMessageLog.push(message)
  92 |       })
  93 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:43:
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
  90 |       patternAPI.on('message', function (message) {
> 91 |         patternAPIMessageLog.push(message)
     |                                           ^
  92 |       })
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:92:9:
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
> 92 |       })
     |         ^
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)
  95 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:93:30:
  91 |         patternAPIMessageLog.push(message)
  92 |       })
> 93 |       patternAPI.on('error', function (message) {
     |                              ^
  94 |         patternAPIMessageLog.push(message)
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:93:30:
  91 |         patternAPIMessageLog.push(message)
  92 |       })
> 93 |       patternAPI.on('error', function (message) {
     |                              ^
  94 |         patternAPIMessageLog.push(message)
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:43:
  92 |       })
  93 |       patternAPI.on('error', function (message) {
> 94 |         patternAPIMessageLog.push(message)
     |                                           ^
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner
  97 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:9:
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)
> 95 |       })
     |         ^
  96 |       const this_ = this // To provide this context in the socket listner
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:96:13:
  94 |         patternAPIMessageLog.push(message)
  95 |       })
> 96 |       const this_ = this // To provide this context in the socket listner
     |             ^
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)
  99 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:96:25:
  94 |         patternAPIMessageLog.push(message)
  95 |       })
> 96 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)
  99 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:97:46:
   95 |       })
   96 |       const this_ = this // To provide this context in the socket listner
>  97 |       patternAPI.on('build_pattern_success', function (data) {
      |                                              ^
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:97:46:
   95 |       })
   96 |       const this_ = this // To provide this context in the socket listner
>  97 |       patternAPI.on('build_pattern_success', function (data) {
      |                                              ^
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:98:9:
   96 |       const this_ = this // To provide this context in the socket listner
   97 |       patternAPI.on('build_pattern_success', function (data) {
>  98 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:98:55:
   96 |       const this_ = this // To provide this context in the socket listner
   97 |       patternAPI.on('build_pattern_success', function (data) {
>  98 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:61:
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
> 100 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:101:11:
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
> 101 |           console.log('build pattern success', data)
      |           ^
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:53:
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
> 101 |           console.log('build pattern success', data)
      |                                                     ^
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:51:
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)
> 102 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:103:34:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:103:61:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:62:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:104:48:
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
> 104 |           patternAPI.emit('find_matches', data)
      |                                                ^
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')
  107 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:106:11:
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
> 106 |           console.log('UI tried to call API again, but already have results')
      |           ^
  107 |         }
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:106:78:
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
> 106 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  107 |         }
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:108:9:
  106 |           console.log('UI tried to call API again, but already have results')
  107 |         }
> 108 |       })
      |         ^
  109 |       patternAPI.on('find_matches_success', function (data) {
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:109:45:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:109:45:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:109:55:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:58:
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {
> 110 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  111 |       })
  112 |     },
  113 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:111:9:
  109 |       patternAPI.on('find_matches_success', function (data) {
  110 |         patternAPIMessageLog.push('Find matches success')
> 111 |       })
      |         ^
  112 |     },
  113 |     calculatePattern() {
  114 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:28:
  113 |     calculatePattern() {
  114 |       // Hit API, listen to status.
> 115 |       this.submitted = true
      |                            ^
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:47:
  114 |       // Hit API, listen to status.
  115 |       this.submitted = true
> 116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:116:49:
  114 |       // Hit API, listen to status.
  115 |       this.submitted = true
> 116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:117:7:
  115 |       this.submitted = true
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 117 |       console.log(this.buildPatternResultsReceived)
      |       ^
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:117:52:
  115 |       this.submitted = true
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 117 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:120:38:
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
> 120 |         pos_match_id: this.posMatchId
      |                                      ^
  121 |       }
  122 |       patternAPI.emit('build_pattern', buildPatternData)
  123 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:8:
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId
> 121 |       }
      |        ^
  122 |       patternAPI.emit('build_pattern', buildPatternData)
  123 |     }
  124 |   }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:122:57:
  120 |         pos_match_id: this.posMatchId
  121 |       }
> 122 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  123 |     }
  124 |   }
  125 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:123:6:
  121 |       }
  122 |       patternAPI.emit('build_pattern', buildPatternData)
> 123 |     }
      |      ^
  124 |   }
  125 | }
  126 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:124:4:
  122 |       patternAPI.emit('build_pattern', buildPatternData)
  123 |     }
> 124 |   }
      |    ^
  125 | }
  126 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:125:2:
  123 |     }
  124 |   }
> 125 | }
      |  ^
  126 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:126:10:
  124 |   }
  125 | }
> 126 | </script>
      |          ^


58 errors and 8 warnings found.
54 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:39:04 PM

 WARNING  Compiled with 5 warnings1:39:05 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:62:6:
  60 |       patternAPIMessageLog: [],
  61 |       buildPatternResultsReceived: false,
> 62 |     }
     |      ^
  63 |   },
  64 |   mounted() {
  65 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   },
  64 |   mounted() {
> 65 |     this.loadPosMatches()
     |                          ^
  66 |     this.loadNegMatches()
  67 |     this.setPatternAPICallbacks()
  68 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:26:
  64 |   mounted() {
  65 |     this.loadPosMatches()
> 66 |     this.loadNegMatches()
     |                          ^
  67 |     this.setPatternAPICallbacks()
  68 |   },
  69 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:67:34:
  65 |     this.loadPosMatches()
  66 |     this.loadNegMatches()
> 67 |     this.setPatternAPICallbacks()
     |                                  ^
  68 |   },
  69 |   methods: {
  70 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:58:
  69 |   methods: {
  70 |     isLoaded() {
> 71 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:72:55:
  70 |     isLoaded() {
  71 |       const posMatchesLoaded = this.posMatches.length > 0
> 72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded
  75 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:81:
  70 |     isLoaded() {
  71 |       const posMatchesLoaded = this.posMatches.length > 0
> 72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded
  75 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:60:
  71 |       const posMatchesLoaded = this.posMatches.length > 0
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  74 |       return isLoaded
  75 |     },
  76 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:74:22:
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 74 |       return isLoaded
     |                      ^
  75 |     },
  76 |     loadPosMatches() {
  77 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:44:
  75 |     },
  76 |     loadPosMatches() {
> 77 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  78 |       const loadOnto = this
  79 |       const targetAttribute = 'posMatches'
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:28:
  76 |     loadPosMatches() {
  77 |       const posMatchIds = [this.posMatchId]
> 78 |       const loadOnto = this
     |                            ^
  79 |       const targetAttribute = 'posMatches'
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  81 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:43:
  77 |       const posMatchIds = [this.posMatchId]
  78 |       const loadOnto = this
> 79 |       const targetAttribute = 'posMatches'
     |                                           ^
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  81 |     },
  82 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:80:81:
  78 |       const loadOnto = this
  79 |       const targetAttribute = 'posMatches'
> 80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  81 |     },
  82 |     loadNegMatches() {
  83 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:28:
  81 |     },
  82 |     loadNegMatches() {
> 83 |       const loadOnto = this
     |                            ^
  84 |       const targetAttribute = 'negMatches'
  85 |       const negMatchIds = this.negMatchIds
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |     loadNegMatches() {
  83 |       const loadOnto = this
> 84 |       const targetAttribute = 'negMatches'
     |                                           ^
  85 |       const negMatchIds = this.negMatchIds
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:85:13:
  83 |       const loadOnto = this
  84 |       const targetAttribute = 'negMatches'
> 85 |       const negMatchIds = this.negMatchIds
     |             ^
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },
  88 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:43:
  83 |       const loadOnto = this
  84 |       const targetAttribute = 'negMatches'
> 85 |       const negMatchIds = this.negMatchIds
     |                                           ^
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },
  88 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:86:81:
  84 |       const targetAttribute = 'negMatches'
  85 |       const negMatchIds = this.negMatchIds
> 86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  87 |     },
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:89:13:
  87 |     },
  88 |     setPatternAPICallbacks() {
> 89 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
  92 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:89:61:
  87 |     },
  88 |     setPatternAPICallbacks() {
> 89 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
  92 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:90:32:
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 90 |       patternAPI.on('message', function (message) {
     |                                ^
  91 |         patternAPIMessageLog.push(message)
  92 |       })
  93 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:90:32:
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 90 |       patternAPI.on('message', function (message) {
     |                                ^
  91 |         patternAPIMessageLog.push(message)
  92 |       })
  93 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:43:
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
  90 |       patternAPI.on('message', function (message) {
> 91 |         patternAPIMessageLog.push(message)
     |                                           ^
  92 |       })
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:92:9:
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
> 92 |       })
     |         ^
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)
  95 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:93:30:
  91 |         patternAPIMessageLog.push(message)
  92 |       })
> 93 |       patternAPI.on('error', function (message) {
     |                              ^
  94 |         patternAPIMessageLog.push(message)
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:93:30:
  91 |         patternAPIMessageLog.push(message)
  92 |       })
> 93 |       patternAPI.on('error', function (message) {
     |                              ^
  94 |         patternAPIMessageLog.push(message)
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:43:
  92 |       })
  93 |       patternAPI.on('error', function (message) {
> 94 |         patternAPIMessageLog.push(message)
     |                                           ^
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner
  97 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:9:
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)
> 95 |       })
     |         ^
  96 |       const this_ = this // To provide this context in the socket listner
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:96:13:
  94 |         patternAPIMessageLog.push(message)
  95 |       })
> 96 |       const this_ = this // To provide this context in the socket listner
     |             ^
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)
  99 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:96:25:
  94 |         patternAPIMessageLog.push(message)
  95 |       })
> 96 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)
  99 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:97:46:
   95 |       })
   96 |       const this_ = this // To provide this context in the socket listner
>  97 |       patternAPI.on('build_pattern_success', function (data) {
      |                                              ^
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:97:46:
   95 |       })
   96 |       const this_ = this // To provide this context in the socket listner
>  97 |       patternAPI.on('build_pattern_success', function (data) {
      |                                              ^
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:98:9:
   96 |       const this_ = this // To provide this context in the socket listner
   97 |       patternAPI.on('build_pattern_success', function (data) {
>  98 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:98:55:
   96 |       const this_ = this // To provide this context in the socket listner
   97 |       patternAPI.on('build_pattern_success', function (data) {
>  98 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:61:
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
> 100 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:101:11:
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
> 101 |           console.log('build pattern success', data)
      |           ^
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:53:
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
> 101 |           console.log('build pattern success', data)
      |                                                     ^
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:51:
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)
> 102 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:103:34:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:103:61:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:62:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:104:48:
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
> 104 |           patternAPI.emit('find_matches', data)
      |                                                ^
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')
  107 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:106:11:
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
> 106 |           console.log('UI tried to call API again, but already have results')
      |           ^
  107 |         }
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:106:78:
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
> 106 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  107 |         }
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:108:9:
  106 |           console.log('UI tried to call API again, but already have results')
  107 |         }
> 108 |       })
      |         ^
  109 |       patternAPI.on('find_matches_success', function (data) {
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:109:45:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:109:45:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:109:55:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:58:
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {
> 110 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  111 |       })
  112 |     },
  113 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:111:9:
  109 |       patternAPI.on('find_matches_success', function (data) {
  110 |         patternAPIMessageLog.push('Find matches success')
> 111 |       })
      |         ^
  112 |     },
  113 |     calculatePattern() {
  114 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:28:
  113 |     calculatePattern() {
  114 |       // Hit API, listen to status.
> 115 |       this.submitted = true
      |                            ^
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:47:
  114 |       // Hit API, listen to status.
  115 |       this.submitted = true
> 116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:116:49:
  114 |       // Hit API, listen to status.
  115 |       this.submitted = true
> 116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:117:7:
  115 |       this.submitted = true
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 117 |       console.log(this.buildPatternResultsReceived)
      |       ^
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:117:52:
  115 |       this.submitted = true
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 117 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:120:38:
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
> 120 |         pos_match_id: this.posMatchId
      |                                      ^
  121 |       }
  122 |       patternAPI.emit('build_pattern', buildPatternData)
  123 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:8:
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId
> 121 |       }
      |        ^
  122 |       patternAPI.emit('build_pattern', buildPatternData)
  123 |     }
  124 |   }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:122:57:
  120 |         pos_match_id: this.posMatchId
  121 |       }
> 122 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  123 |     }
  124 |   }
  125 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:123:6:
  121 |       }
  122 |       patternAPI.emit('build_pattern', buildPatternData)
> 123 |     }
      |      ^
  124 |   }
  125 | }
  126 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:124:4:
  122 |       patternAPI.emit('build_pattern', buildPatternData)
  123 |     }
> 124 |   }
      |    ^
  125 | }
  126 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:125:2:
  123 |     }
  124 |   }
> 125 | }
      |  ^
  126 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:126:10:
  124 |   }
  125 | }
> 126 | </script>
      |          ^


58 errors and 8 warnings found.
54 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:39:55 PM

 WARNING  Compiled with 5 warnings1:39:56 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:62:6:
  60 |       patternAPIMessageLog: [],
  61 |       buildPatternResultsReceived: false,
> 62 |     }
     |      ^
  63 |   },
  64 |   mounted() {
  65 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   },
  64 |   mounted() {
> 65 |     this.loadPosMatches()
     |                          ^
  66 |     this.loadNegMatches()
  67 |     this.setPatternAPICallbacks()
  68 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:26:
  64 |   mounted() {
  65 |     this.loadPosMatches()
> 66 |     this.loadNegMatches()
     |                          ^
  67 |     this.setPatternAPICallbacks()
  68 |   },
  69 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:67:34:
  65 |     this.loadPosMatches()
  66 |     this.loadNegMatches()
> 67 |     this.setPatternAPICallbacks()
     |                                  ^
  68 |   },
  69 |   methods: {
  70 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:58:
  69 |   methods: {
  70 |     isLoaded() {
> 71 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:72:55:
  70 |     isLoaded() {
  71 |       const posMatchesLoaded = this.posMatches.length > 0
> 72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded
  75 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:81:
  70 |     isLoaded() {
  71 |       const posMatchesLoaded = this.posMatches.length > 0
> 72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded
  75 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:60:
  71 |       const posMatchesLoaded = this.posMatches.length > 0
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  74 |       return isLoaded
  75 |     },
  76 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:74:22:
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 74 |       return isLoaded
     |                      ^
  75 |     },
  76 |     loadPosMatches() {
  77 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:44:
  75 |     },
  76 |     loadPosMatches() {
> 77 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  78 |       const loadOnto = this
  79 |       const targetAttribute = 'posMatches'
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:28:
  76 |     loadPosMatches() {
  77 |       const posMatchIds = [this.posMatchId]
> 78 |       const loadOnto = this
     |                            ^
  79 |       const targetAttribute = 'posMatches'
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  81 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:43:
  77 |       const posMatchIds = [this.posMatchId]
  78 |       const loadOnto = this
> 79 |       const targetAttribute = 'posMatches'
     |                                           ^
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  81 |     },
  82 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:80:81:
  78 |       const loadOnto = this
  79 |       const targetAttribute = 'posMatches'
> 80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  81 |     },
  82 |     loadNegMatches() {
  83 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:28:
  81 |     },
  82 |     loadNegMatches() {
> 83 |       const loadOnto = this
     |                            ^
  84 |       const targetAttribute = 'negMatches'
  85 |       const negMatchIds = this.negMatchIds
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |     loadNegMatches() {
  83 |       const loadOnto = this
> 84 |       const targetAttribute = 'negMatches'
     |                                           ^
  85 |       const negMatchIds = this.negMatchIds
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:85:13:
  83 |       const loadOnto = this
  84 |       const targetAttribute = 'negMatches'
> 85 |       const negMatchIds = this.negMatchIds
     |             ^
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },
  88 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:43:
  83 |       const loadOnto = this
  84 |       const targetAttribute = 'negMatches'
> 85 |       const negMatchIds = this.negMatchIds
     |                                           ^
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },
  88 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:86:81:
  84 |       const targetAttribute = 'negMatches'
  85 |       const negMatchIds = this.negMatchIds
> 86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  87 |     },
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:89:13:
  87 |     },
  88 |     setPatternAPICallbacks() {
> 89 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
  92 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:89:61:
  87 |     },
  88 |     setPatternAPICallbacks() {
> 89 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
  92 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:90:32:
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 90 |       patternAPI.on('message', function (message) {
     |                                ^
  91 |         patternAPIMessageLog.push(message)
  92 |       })
  93 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:90:32:
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 90 |       patternAPI.on('message', function (message) {
     |                                ^
  91 |         patternAPIMessageLog.push(message)
  92 |       })
  93 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:43:
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
  90 |       patternAPI.on('message', function (message) {
> 91 |         patternAPIMessageLog.push(message)
     |                                           ^
  92 |       })
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:92:9:
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
> 92 |       })
     |         ^
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)
  95 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:93:30:
  91 |         patternAPIMessageLog.push(message)
  92 |       })
> 93 |       patternAPI.on('error', function (message) {
     |                              ^
  94 |         patternAPIMessageLog.push(message)
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:93:30:
  91 |         patternAPIMessageLog.push(message)
  92 |       })
> 93 |       patternAPI.on('error', function (message) {
     |                              ^
  94 |         patternAPIMessageLog.push(message)
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:43:
  92 |       })
  93 |       patternAPI.on('error', function (message) {
> 94 |         patternAPIMessageLog.push(message)
     |                                           ^
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner
  97 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:9:
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)
> 95 |       })
     |         ^
  96 |       const this_ = this // To provide this context in the socket listner
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:96:13:
  94 |         patternAPIMessageLog.push(message)
  95 |       })
> 96 |       const this_ = this // To provide this context in the socket listner
     |             ^
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)
  99 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:96:25:
  94 |         patternAPIMessageLog.push(message)
  95 |       })
> 96 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)
  99 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:97:46:
   95 |       })
   96 |       const this_ = this // To provide this context in the socket listner
>  97 |       patternAPI.on('build_pattern_success', function (data) {
      |                                              ^
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:97:46:
   95 |       })
   96 |       const this_ = this // To provide this context in the socket listner
>  97 |       patternAPI.on('build_pattern_success', function (data) {
      |                                              ^
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:98:9:
   96 |       const this_ = this // To provide this context in the socket listner
   97 |       patternAPI.on('build_pattern_success', function (data) {
>  98 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:98:55:
   96 |       const this_ = this // To provide this context in the socket listner
   97 |       patternAPI.on('build_pattern_success', function (data) {
>  98 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:61:
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
> 100 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:101:11:
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
> 101 |           console.log('build pattern success', data)
      |           ^
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:53:
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
> 101 |           console.log('build pattern success', data)
      |                                                     ^
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:51:
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)
> 102 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:103:34:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:103:61:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:62:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:104:48:
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
> 104 |           patternAPI.emit('find_matches', data)
      |                                                ^
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')
  107 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:106:11:
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
> 106 |           console.log('UI tried to call API again, but already have results')
      |           ^
  107 |         }
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:106:78:
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
> 106 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  107 |         }
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:108:9:
  106 |           console.log('UI tried to call API again, but already have results')
  107 |         }
> 108 |       })
      |         ^
  109 |       patternAPI.on('find_matches_success', function (data) {
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:109:45:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:109:45:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:109:55:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:58:
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {
> 110 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  111 |       })
  112 |     },
  113 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:111:9:
  109 |       patternAPI.on('find_matches_success', function (data) {
  110 |         patternAPIMessageLog.push('Find matches success')
> 111 |       })
      |         ^
  112 |     },
  113 |     calculatePattern() {
  114 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:28:
  113 |     calculatePattern() {
  114 |       // Hit API, listen to status.
> 115 |       this.submitted = true
      |                            ^
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:47:
  114 |       // Hit API, listen to status.
  115 |       this.submitted = true
> 116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:116:49:
  114 |       // Hit API, listen to status.
  115 |       this.submitted = true
> 116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:117:7:
  115 |       this.submitted = true
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 117 |       console.log(this.buildPatternResultsReceived)
      |       ^
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:117:52:
  115 |       this.submitted = true
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 117 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:120:38:
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
> 120 |         pos_match_id: this.posMatchId
      |                                      ^
  121 |       }
  122 |       patternAPI.emit('build_pattern', buildPatternData)
  123 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:8:
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId
> 121 |       }
      |        ^
  122 |       patternAPI.emit('build_pattern', buildPatternData)
  123 |     }
  124 |   }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:122:57:
  120 |         pos_match_id: this.posMatchId
  121 |       }
> 122 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  123 |     }
  124 |   }
  125 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:123:6:
  121 |       }
  122 |       patternAPI.emit('build_pattern', buildPatternData)
> 123 |     }
      |      ^
  124 |   }
  125 | }
  126 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:124:4:
  122 |       patternAPI.emit('build_pattern', buildPatternData)
  123 |     }
> 124 |   }
      |    ^
  125 | }
  126 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:125:2:
  123 |     }
  124 |   }
> 125 | }
      |  ^
  126 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:126:10:
  124 |   }
  125 | }
> 126 | </script>
      |          ^


58 errors and 8 warnings found.
54 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:39:56 PM

 WARNING  Compiled with 5 warnings1:39:57 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:62:6:
  60 |       patternAPIMessageLog: [],
  61 |       buildPatternResultsReceived: false,
> 62 |     }
     |      ^
  63 |   },
  64 |   mounted() {
  65 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   },
  64 |   mounted() {
> 65 |     this.loadPosMatches()
     |                          ^
  66 |     this.loadNegMatches()
  67 |     this.setPatternAPICallbacks()
  68 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:26:
  64 |   mounted() {
  65 |     this.loadPosMatches()
> 66 |     this.loadNegMatches()
     |                          ^
  67 |     this.setPatternAPICallbacks()
  68 |   },
  69 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:67:34:
  65 |     this.loadPosMatches()
  66 |     this.loadNegMatches()
> 67 |     this.setPatternAPICallbacks()
     |                                  ^
  68 |   },
  69 |   methods: {
  70 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:58:
  69 |   methods: {
  70 |     isLoaded() {
> 71 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:72:55:
  70 |     isLoaded() {
  71 |       const posMatchesLoaded = this.posMatches.length > 0
> 72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded
  75 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:81:
  70 |     isLoaded() {
  71 |       const posMatchesLoaded = this.posMatches.length > 0
> 72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded
  75 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:60:
  71 |       const posMatchesLoaded = this.posMatches.length > 0
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  74 |       return isLoaded
  75 |     },
  76 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:74:22:
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 74 |       return isLoaded
     |                      ^
  75 |     },
  76 |     loadPosMatches() {
  77 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:44:
  75 |     },
  76 |     loadPosMatches() {
> 77 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  78 |       const loadOnto = this
  79 |       const targetAttribute = 'posMatches'
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:28:
  76 |     loadPosMatches() {
  77 |       const posMatchIds = [this.posMatchId]
> 78 |       const loadOnto = this
     |                            ^
  79 |       const targetAttribute = 'posMatches'
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  81 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:43:
  77 |       const posMatchIds = [this.posMatchId]
  78 |       const loadOnto = this
> 79 |       const targetAttribute = 'posMatches'
     |                                           ^
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  81 |     },
  82 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:80:81:
  78 |       const loadOnto = this
  79 |       const targetAttribute = 'posMatches'
> 80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  81 |     },
  82 |     loadNegMatches() {
  83 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:28:
  81 |     },
  82 |     loadNegMatches() {
> 83 |       const loadOnto = this
     |                            ^
  84 |       const targetAttribute = 'negMatches'
  85 |       const negMatchIds = this.negMatchIds
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |     loadNegMatches() {
  83 |       const loadOnto = this
> 84 |       const targetAttribute = 'negMatches'
     |                                           ^
  85 |       const negMatchIds = this.negMatchIds
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:85:13:
  83 |       const loadOnto = this
  84 |       const targetAttribute = 'negMatches'
> 85 |       const negMatchIds = this.negMatchIds
     |             ^
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },
  88 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:43:
  83 |       const loadOnto = this
  84 |       const targetAttribute = 'negMatches'
> 85 |       const negMatchIds = this.negMatchIds
     |                                           ^
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },
  88 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:86:81:
  84 |       const targetAttribute = 'negMatches'
  85 |       const negMatchIds = this.negMatchIds
> 86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  87 |     },
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:89:13:
  87 |     },
  88 |     setPatternAPICallbacks() {
> 89 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
  92 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:89:61:
  87 |     },
  88 |     setPatternAPICallbacks() {
> 89 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
  92 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:90:32:
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 90 |       patternAPI.on('message', function (message) {
     |                                ^
  91 |         patternAPIMessageLog.push(message)
  92 |       })
  93 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:90:32:
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 90 |       patternAPI.on('message', function (message) {
     |                                ^
  91 |         patternAPIMessageLog.push(message)
  92 |       })
  93 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:43:
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
  90 |       patternAPI.on('message', function (message) {
> 91 |         patternAPIMessageLog.push(message)
     |                                           ^
  92 |       })
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:92:9:
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
> 92 |       })
     |         ^
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)
  95 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:93:30:
  91 |         patternAPIMessageLog.push(message)
  92 |       })
> 93 |       patternAPI.on('error', function (message) {
     |                              ^
  94 |         patternAPIMessageLog.push(message)
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:93:30:
  91 |         patternAPIMessageLog.push(message)
  92 |       })
> 93 |       patternAPI.on('error', function (message) {
     |                              ^
  94 |         patternAPIMessageLog.push(message)
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:43:
  92 |       })
  93 |       patternAPI.on('error', function (message) {
> 94 |         patternAPIMessageLog.push(message)
     |                                           ^
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner
  97 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:9:
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)
> 95 |       })
     |         ^
  96 |       const this_ = this // To provide this context in the socket listner
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:96:13:
  94 |         patternAPIMessageLog.push(message)
  95 |       })
> 96 |       const this_ = this // To provide this context in the socket listner
     |             ^
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)
  99 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:96:25:
  94 |         patternAPIMessageLog.push(message)
  95 |       })
> 96 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)
  99 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:97:46:
   95 |       })
   96 |       const this_ = this // To provide this context in the socket listner
>  97 |       patternAPI.on('build_pattern_success', function (data) {
      |                                              ^
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:97:46:
   95 |       })
   96 |       const this_ = this // To provide this context in the socket listner
>  97 |       patternAPI.on('build_pattern_success', function (data) {
      |                                              ^
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:98:9:
   96 |       const this_ = this // To provide this context in the socket listner
   97 |       patternAPI.on('build_pattern_success', function (data) {
>  98 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:98:55:
   96 |       const this_ = this // To provide this context in the socket listner
   97 |       patternAPI.on('build_pattern_success', function (data) {
>  98 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:61:
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
> 100 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:101:11:
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
> 101 |           console.log('build pattern success', data)
      |           ^
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:53:
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
> 101 |           console.log('build pattern success', data)
      |                                                     ^
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:51:
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)
> 102 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:103:34:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:103:61:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:62:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:104:48:
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
> 104 |           patternAPI.emit('find_matches', data)
      |                                                ^
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')
  107 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:106:11:
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
> 106 |           console.log('UI tried to call API again, but already have results')
      |           ^
  107 |         }
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:106:78:
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
> 106 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  107 |         }
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:108:9:
  106 |           console.log('UI tried to call API again, but already have results')
  107 |         }
> 108 |       })
      |         ^
  109 |       patternAPI.on('find_matches_success', function (data) {
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:109:45:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:109:45:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:109:55:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:58:
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {
> 110 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  111 |       })
  112 |     },
  113 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:111:9:
  109 |       patternAPI.on('find_matches_success', function (data) {
  110 |         patternAPIMessageLog.push('Find matches success')
> 111 |       })
      |         ^
  112 |     },
  113 |     calculatePattern() {
  114 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:28:
  113 |     calculatePattern() {
  114 |       // Hit API, listen to status.
> 115 |       this.submitted = true
      |                            ^
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:47:
  114 |       // Hit API, listen to status.
  115 |       this.submitted = true
> 116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:116:49:
  114 |       // Hit API, listen to status.
  115 |       this.submitted = true
> 116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:117:7:
  115 |       this.submitted = true
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 117 |       console.log(this.buildPatternResultsReceived)
      |       ^
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:117:52:
  115 |       this.submitted = true
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 117 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:120:38:
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
> 120 |         pos_match_id: this.posMatchId
      |                                      ^
  121 |       }
  122 |       patternAPI.emit('build_pattern', buildPatternData)
  123 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:8:
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId
> 121 |       }
      |        ^
  122 |       patternAPI.emit('build_pattern', buildPatternData)
  123 |     }
  124 |   }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:122:57:
  120 |         pos_match_id: this.posMatchId
  121 |       }
> 122 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  123 |     }
  124 |   }
  125 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:123:6:
  121 |       }
  122 |       patternAPI.emit('build_pattern', buildPatternData)
> 123 |     }
      |      ^
  124 |   }
  125 | }
  126 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:124:4:
  122 |       patternAPI.emit('build_pattern', buildPatternData)
  123 |     }
> 124 |   }
      |    ^
  125 | }
  126 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:125:2:
  123 |     }
  124 |   }
> 125 | }
      |  ^
  126 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:126:10:
  124 |   }
  125 | }
> 126 | </script>
      |          ^


58 errors and 8 warnings found.
54 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:40:27 PM

 WARNING  Compiled with 5 warnings1:40:27 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:62:6:
  60 |       patternAPIMessageLog: [],
  61 |       buildPatternResultsReceived: false,
> 62 |     }
     |      ^
  63 |   },
  64 |   mounted() {
  65 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   },
  64 |   mounted() {
> 65 |     this.loadPosMatches()
     |                          ^
  66 |     this.loadNegMatches()
  67 |     this.setPatternAPICallbacks()
  68 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:26:
  64 |   mounted() {
  65 |     this.loadPosMatches()
> 66 |     this.loadNegMatches()
     |                          ^
  67 |     this.setPatternAPICallbacks()
  68 |   },
  69 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:67:34:
  65 |     this.loadPosMatches()
  66 |     this.loadNegMatches()
> 67 |     this.setPatternAPICallbacks()
     |                                  ^
  68 |   },
  69 |   methods: {
  70 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:58:
  69 |   methods: {
  70 |     isLoaded() {
> 71 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:72:55:
  70 |     isLoaded() {
  71 |       const posMatchesLoaded = this.posMatches.length > 0
> 72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded
  75 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:81:
  70 |     isLoaded() {
  71 |       const posMatchesLoaded = this.posMatches.length > 0
> 72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded
  75 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:60:
  71 |       const posMatchesLoaded = this.posMatches.length > 0
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  74 |       return isLoaded
  75 |     },
  76 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:74:22:
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 74 |       return isLoaded
     |                      ^
  75 |     },
  76 |     loadPosMatches() {
  77 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:44:
  75 |     },
  76 |     loadPosMatches() {
> 77 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  78 |       const loadOnto = this
  79 |       const targetAttribute = 'posMatches'
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:28:
  76 |     loadPosMatches() {
  77 |       const posMatchIds = [this.posMatchId]
> 78 |       const loadOnto = this
     |                            ^
  79 |       const targetAttribute = 'posMatches'
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  81 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:43:
  77 |       const posMatchIds = [this.posMatchId]
  78 |       const loadOnto = this
> 79 |       const targetAttribute = 'posMatches'
     |                                           ^
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  81 |     },
  82 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:80:81:
  78 |       const loadOnto = this
  79 |       const targetAttribute = 'posMatches'
> 80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  81 |     },
  82 |     loadNegMatches() {
  83 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:28:
  81 |     },
  82 |     loadNegMatches() {
> 83 |       const loadOnto = this
     |                            ^
  84 |       const targetAttribute = 'negMatches'
  85 |       const negMatchIds = this.negMatchIds
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |     loadNegMatches() {
  83 |       const loadOnto = this
> 84 |       const targetAttribute = 'negMatches'
     |                                           ^
  85 |       const negMatchIds = this.negMatchIds
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:85:13:
  83 |       const loadOnto = this
  84 |       const targetAttribute = 'negMatches'
> 85 |       const negMatchIds = this.negMatchIds
     |             ^
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },
  88 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:43:
  83 |       const loadOnto = this
  84 |       const targetAttribute = 'negMatches'
> 85 |       const negMatchIds = this.negMatchIds
     |                                           ^
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },
  88 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:86:81:
  84 |       const targetAttribute = 'negMatches'
  85 |       const negMatchIds = this.negMatchIds
> 86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  87 |     },
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:89:13:
  87 |     },
  88 |     setPatternAPICallbacks() {
> 89 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
  92 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:89:61:
  87 |     },
  88 |     setPatternAPICallbacks() {
> 89 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
  92 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:90:32:
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 90 |       patternAPI.on('message', function (message) {
     |                                ^
  91 |         patternAPIMessageLog.push(message)
  92 |       })
  93 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:90:32:
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 90 |       patternAPI.on('message', function (message) {
     |                                ^
  91 |         patternAPIMessageLog.push(message)
  92 |       })
  93 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:43:
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
  90 |       patternAPI.on('message', function (message) {
> 91 |         patternAPIMessageLog.push(message)
     |                                           ^
  92 |       })
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:92:9:
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
> 92 |       })
     |         ^
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)
  95 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:93:30:
  91 |         patternAPIMessageLog.push(message)
  92 |       })
> 93 |       patternAPI.on('error', function (message) {
     |                              ^
  94 |         patternAPIMessageLog.push(message)
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:93:30:
  91 |         patternAPIMessageLog.push(message)
  92 |       })
> 93 |       patternAPI.on('error', function (message) {
     |                              ^
  94 |         patternAPIMessageLog.push(message)
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:43:
  92 |       })
  93 |       patternAPI.on('error', function (message) {
> 94 |         patternAPIMessageLog.push(message)
     |                                           ^
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner
  97 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:9:
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)
> 95 |       })
     |         ^
  96 |       const this_ = this // To provide this context in the socket listner
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:96:13:
  94 |         patternAPIMessageLog.push(message)
  95 |       })
> 96 |       const this_ = this // To provide this context in the socket listner
     |             ^
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)
  99 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:96:25:
  94 |         patternAPIMessageLog.push(message)
  95 |       })
> 96 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)
  99 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:97:46:
   95 |       })
   96 |       const this_ = this // To provide this context in the socket listner
>  97 |       patternAPI.on('build_pattern_success', function (data) {
      |                                              ^
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:97:46:
   95 |       })
   96 |       const this_ = this // To provide this context in the socket listner
>  97 |       patternAPI.on('build_pattern_success', function (data) {
      |                                              ^
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:98:9:
   96 |       const this_ = this // To provide this context in the socket listner
   97 |       patternAPI.on('build_pattern_success', function (data) {
>  98 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:98:55:
   96 |       const this_ = this // To provide this context in the socket listner
   97 |       patternAPI.on('build_pattern_success', function (data) {
>  98 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:61:
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
> 100 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:101:11:
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
> 101 |           console.log('build pattern success', data)
      |           ^
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:53:
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
> 101 |           console.log('build pattern success', data)
      |                                                     ^
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:51:
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)
> 102 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:103:34:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:103:61:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:62:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:104:48:
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
> 104 |           patternAPI.emit('find_matches', data)
      |                                                ^
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')
  107 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:106:11:
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
> 106 |           console.log('UI tried to call API again, but already have results')
      |           ^
  107 |         }
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:106:78:
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
> 106 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  107 |         }
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:108:9:
  106 |           console.log('UI tried to call API again, but already have results')
  107 |         }
> 108 |       })
      |         ^
  109 |       patternAPI.on('find_matches_success', function (data) {
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:109:45:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:109:45:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:109:55:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:58:
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {
> 110 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  111 |       })
  112 |     },
  113 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:111:9:
  109 |       patternAPI.on('find_matches_success', function (data) {
  110 |         patternAPIMessageLog.push('Find matches success')
> 111 |       })
      |         ^
  112 |     },
  113 |     calculatePattern() {
  114 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:28:
  113 |     calculatePattern() {
  114 |       // Hit API, listen to status.
> 115 |       this.submitted = true
      |                            ^
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:47:
  114 |       // Hit API, listen to status.
  115 |       this.submitted = true
> 116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:116:49:
  114 |       // Hit API, listen to status.
  115 |       this.submitted = true
> 116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:117:7:
  115 |       this.submitted = true
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 117 |       console.log(this.buildPatternResultsReceived)
      |       ^
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:117:52:
  115 |       this.submitted = true
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 117 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:120:38:
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
> 120 |         pos_match_id: this.posMatchId
      |                                      ^
  121 |       }
  122 |       if (this.featureDict !== null) {
  123 |         buildPatternData.featureDict = this.featureDict


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:8:
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId
> 121 |       }
      |        ^
  122 |       if (this.featureDict !== null) {
  123 |         buildPatternData.featureDict = this.featureDict
  124 |       }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:123:56:
  121 |       }
  122 |       if (this.featureDict !== null) {
> 123 |         buildPatternData.featureDict = this.featureDict
      |                                                        ^
  124 |       }
  125 |       patternAPI.emit('build_pattern', buildPatternData)
  126 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:125:57:
  123 |         buildPatternData.featureDict = this.featureDict
  124 |       }
> 125 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  126 |     }
  127 |   }
  128 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:126:6:
  124 |       }
  125 |       patternAPI.emit('build_pattern', buildPatternData)
> 126 |     }
      |      ^
  127 |   }
  128 | }
  129 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:127:4:
  125 |       patternAPI.emit('build_pattern', buildPatternData)
  126 |     }
> 127 |   }
      |    ^
  128 | }
  129 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:128:2:
  126 |     }
  127 |   }
> 128 | }
      |  ^
  129 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:129:10:
  127 |   }
  128 | }
> 129 | </script>
      |          ^


59 errors and 8 warnings found.
55 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:40:27 PM

 WARNING  Compiled with 5 warnings1:40:28 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:62:6:
  60 |       patternAPIMessageLog: [],
  61 |       buildPatternResultsReceived: false,
> 62 |     }
     |      ^
  63 |   },
  64 |   mounted() {
  65 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   },
  64 |   mounted() {
> 65 |     this.loadPosMatches()
     |                          ^
  66 |     this.loadNegMatches()
  67 |     this.setPatternAPICallbacks()
  68 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:26:
  64 |   mounted() {
  65 |     this.loadPosMatches()
> 66 |     this.loadNegMatches()
     |                          ^
  67 |     this.setPatternAPICallbacks()
  68 |   },
  69 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:67:34:
  65 |     this.loadPosMatches()
  66 |     this.loadNegMatches()
> 67 |     this.setPatternAPICallbacks()
     |                                  ^
  68 |   },
  69 |   methods: {
  70 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:58:
  69 |   methods: {
  70 |     isLoaded() {
> 71 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:72:55:
  70 |     isLoaded() {
  71 |       const posMatchesLoaded = this.posMatches.length > 0
> 72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded
  75 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:81:
  70 |     isLoaded() {
  71 |       const posMatchesLoaded = this.posMatches.length > 0
> 72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded
  75 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:60:
  71 |       const posMatchesLoaded = this.posMatches.length > 0
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  74 |       return isLoaded
  75 |     },
  76 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:74:22:
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 74 |       return isLoaded
     |                      ^
  75 |     },
  76 |     loadPosMatches() {
  77 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:44:
  75 |     },
  76 |     loadPosMatches() {
> 77 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  78 |       const loadOnto = this
  79 |       const targetAttribute = 'posMatches'
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:28:
  76 |     loadPosMatches() {
  77 |       const posMatchIds = [this.posMatchId]
> 78 |       const loadOnto = this
     |                            ^
  79 |       const targetAttribute = 'posMatches'
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  81 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:43:
  77 |       const posMatchIds = [this.posMatchId]
  78 |       const loadOnto = this
> 79 |       const targetAttribute = 'posMatches'
     |                                           ^
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  81 |     },
  82 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:80:81:
  78 |       const loadOnto = this
  79 |       const targetAttribute = 'posMatches'
> 80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  81 |     },
  82 |     loadNegMatches() {
  83 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:28:
  81 |     },
  82 |     loadNegMatches() {
> 83 |       const loadOnto = this
     |                            ^
  84 |       const targetAttribute = 'negMatches'
  85 |       const negMatchIds = this.negMatchIds
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |     loadNegMatches() {
  83 |       const loadOnto = this
> 84 |       const targetAttribute = 'negMatches'
     |                                           ^
  85 |       const negMatchIds = this.negMatchIds
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:85:13:
  83 |       const loadOnto = this
  84 |       const targetAttribute = 'negMatches'
> 85 |       const negMatchIds = this.negMatchIds
     |             ^
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },
  88 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:43:
  83 |       const loadOnto = this
  84 |       const targetAttribute = 'negMatches'
> 85 |       const negMatchIds = this.negMatchIds
     |                                           ^
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },
  88 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:86:81:
  84 |       const targetAttribute = 'negMatches'
  85 |       const negMatchIds = this.negMatchIds
> 86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  87 |     },
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:89:13:
  87 |     },
  88 |     setPatternAPICallbacks() {
> 89 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
  92 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:89:61:
  87 |     },
  88 |     setPatternAPICallbacks() {
> 89 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
  92 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:90:32:
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 90 |       patternAPI.on('message', function (message) {
     |                                ^
  91 |         patternAPIMessageLog.push(message)
  92 |       })
  93 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:90:32:
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 90 |       patternAPI.on('message', function (message) {
     |                                ^
  91 |         patternAPIMessageLog.push(message)
  92 |       })
  93 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:43:
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
  90 |       patternAPI.on('message', function (message) {
> 91 |         patternAPIMessageLog.push(message)
     |                                           ^
  92 |       })
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:92:9:
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
> 92 |       })
     |         ^
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)
  95 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:93:30:
  91 |         patternAPIMessageLog.push(message)
  92 |       })
> 93 |       patternAPI.on('error', function (message) {
     |                              ^
  94 |         patternAPIMessageLog.push(message)
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:93:30:
  91 |         patternAPIMessageLog.push(message)
  92 |       })
> 93 |       patternAPI.on('error', function (message) {
     |                              ^
  94 |         patternAPIMessageLog.push(message)
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:43:
  92 |       })
  93 |       patternAPI.on('error', function (message) {
> 94 |         patternAPIMessageLog.push(message)
     |                                           ^
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner
  97 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:9:
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)
> 95 |       })
     |         ^
  96 |       const this_ = this // To provide this context in the socket listner
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:96:13:
  94 |         patternAPIMessageLog.push(message)
  95 |       })
> 96 |       const this_ = this // To provide this context in the socket listner
     |             ^
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)
  99 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:96:25:
  94 |         patternAPIMessageLog.push(message)
  95 |       })
> 96 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)
  99 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:97:46:
   95 |       })
   96 |       const this_ = this // To provide this context in the socket listner
>  97 |       patternAPI.on('build_pattern_success', function (data) {
      |                                              ^
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:97:46:
   95 |       })
   96 |       const this_ = this // To provide this context in the socket listner
>  97 |       patternAPI.on('build_pattern_success', function (data) {
      |                                              ^
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:98:9:
   96 |       const this_ = this // To provide this context in the socket listner
   97 |       patternAPI.on('build_pattern_success', function (data) {
>  98 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:98:55:
   96 |       const this_ = this // To provide this context in the socket listner
   97 |       patternAPI.on('build_pattern_success', function (data) {
>  98 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:61:
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
> 100 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:101:11:
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
> 101 |           console.log('build pattern success', data)
      |           ^
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:53:
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
> 101 |           console.log('build pattern success', data)
      |                                                     ^
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:51:
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)
> 102 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:103:34:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:103:61:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:62:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:104:48:
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
> 104 |           patternAPI.emit('find_matches', data)
      |                                                ^
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')
  107 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:106:11:
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
> 106 |           console.log('UI tried to call API again, but already have results')
      |           ^
  107 |         }
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:106:78:
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
> 106 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  107 |         }
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:108:9:
  106 |           console.log('UI tried to call API again, but already have results')
  107 |         }
> 108 |       })
      |         ^
  109 |       patternAPI.on('find_matches_success', function (data) {
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:109:45:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:109:45:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:109:55:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:58:
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {
> 110 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  111 |       })
  112 |     },
  113 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:111:9:
  109 |       patternAPI.on('find_matches_success', function (data) {
  110 |         patternAPIMessageLog.push('Find matches success')
> 111 |       })
      |         ^
  112 |     },
  113 |     calculatePattern() {
  114 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:28:
  113 |     calculatePattern() {
  114 |       // Hit API, listen to status.
> 115 |       this.submitted = true
      |                            ^
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:47:
  114 |       // Hit API, listen to status.
  115 |       this.submitted = true
> 116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:116:49:
  114 |       // Hit API, listen to status.
  115 |       this.submitted = true
> 116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:117:7:
  115 |       this.submitted = true
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 117 |       console.log(this.buildPatternResultsReceived)
      |       ^
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:117:52:
  115 |       this.submitted = true
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 117 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:120:38:
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
> 120 |         pos_match_id: this.posMatchId
      |                                      ^
  121 |       }
  122 |       if (this.featureDict !== null) {
  123 |         buildPatternData.featureDict = this.featureDict


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:8:
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId
> 121 |       }
      |        ^
  122 |       if (this.featureDict !== null) {
  123 |         buildPatternData.featureDict = this.featureDict
  124 |       }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:123:56:
  121 |       }
  122 |       if (this.featureDict !== null) {
> 123 |         buildPatternData.featureDict = this.featureDict
      |                                                        ^
  124 |       }
  125 |       patternAPI.emit('build_pattern', buildPatternData)
  126 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:125:57:
  123 |         buildPatternData.featureDict = this.featureDict
  124 |       }
> 125 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  126 |     }
  127 |   }
  128 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:126:6:
  124 |       }
  125 |       patternAPI.emit('build_pattern', buildPatternData)
> 126 |     }
      |      ^
  127 |   }
  128 | }
  129 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:127:4:
  125 |       patternAPI.emit('build_pattern', buildPatternData)
  126 |     }
> 127 |   }
      |    ^
  128 | }
  129 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:128:2:
  126 |     }
  127 |   }
> 128 | }
      |  ^
  129 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:129:10:
  127 |   }
  128 | }
> 129 | </script>
      |          ^


59 errors and 8 warnings found.
55 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:40:28 PM

 WARNING  Compiled with 5 warnings1:40:29 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:62:6:
  60 |       patternAPIMessageLog: [],
  61 |       buildPatternResultsReceived: false,
> 62 |     }
     |      ^
  63 |   },
  64 |   mounted() {
  65 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   },
  64 |   mounted() {
> 65 |     this.loadPosMatches()
     |                          ^
  66 |     this.loadNegMatches()
  67 |     this.setPatternAPICallbacks()
  68 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:26:
  64 |   mounted() {
  65 |     this.loadPosMatches()
> 66 |     this.loadNegMatches()
     |                          ^
  67 |     this.setPatternAPICallbacks()
  68 |   },
  69 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:67:34:
  65 |     this.loadPosMatches()
  66 |     this.loadNegMatches()
> 67 |     this.setPatternAPICallbacks()
     |                                  ^
  68 |   },
  69 |   methods: {
  70 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:58:
  69 |   methods: {
  70 |     isLoaded() {
> 71 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:72:55:
  70 |     isLoaded() {
  71 |       const posMatchesLoaded = this.posMatches.length > 0
> 72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded
  75 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:81:
  70 |     isLoaded() {
  71 |       const posMatchesLoaded = this.posMatches.length > 0
> 72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded
  75 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:60:
  71 |       const posMatchesLoaded = this.posMatches.length > 0
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  74 |       return isLoaded
  75 |     },
  76 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:74:22:
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 74 |       return isLoaded
     |                      ^
  75 |     },
  76 |     loadPosMatches() {
  77 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:44:
  75 |     },
  76 |     loadPosMatches() {
> 77 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  78 |       const loadOnto = this
  79 |       const targetAttribute = 'posMatches'
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:28:
  76 |     loadPosMatches() {
  77 |       const posMatchIds = [this.posMatchId]
> 78 |       const loadOnto = this
     |                            ^
  79 |       const targetAttribute = 'posMatches'
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  81 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:43:
  77 |       const posMatchIds = [this.posMatchId]
  78 |       const loadOnto = this
> 79 |       const targetAttribute = 'posMatches'
     |                                           ^
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  81 |     },
  82 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:80:81:
  78 |       const loadOnto = this
  79 |       const targetAttribute = 'posMatches'
> 80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  81 |     },
  82 |     loadNegMatches() {
  83 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:28:
  81 |     },
  82 |     loadNegMatches() {
> 83 |       const loadOnto = this
     |                            ^
  84 |       const targetAttribute = 'negMatches'
  85 |       const negMatchIds = this.negMatchIds
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |     loadNegMatches() {
  83 |       const loadOnto = this
> 84 |       const targetAttribute = 'negMatches'
     |                                           ^
  85 |       const negMatchIds = this.negMatchIds
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:85:13:
  83 |       const loadOnto = this
  84 |       const targetAttribute = 'negMatches'
> 85 |       const negMatchIds = this.negMatchIds
     |             ^
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },
  88 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:43:
  83 |       const loadOnto = this
  84 |       const targetAttribute = 'negMatches'
> 85 |       const negMatchIds = this.negMatchIds
     |                                           ^
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },
  88 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:86:81:
  84 |       const targetAttribute = 'negMatches'
  85 |       const negMatchIds = this.negMatchIds
> 86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  87 |     },
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:89:13:
  87 |     },
  88 |     setPatternAPICallbacks() {
> 89 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
  92 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:89:61:
  87 |     },
  88 |     setPatternAPICallbacks() {
> 89 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
  92 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:90:32:
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 90 |       patternAPI.on('message', function (message) {
     |                                ^
  91 |         patternAPIMessageLog.push(message)
  92 |       })
  93 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:90:32:
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 90 |       patternAPI.on('message', function (message) {
     |                                ^
  91 |         patternAPIMessageLog.push(message)
  92 |       })
  93 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:43:
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
  90 |       patternAPI.on('message', function (message) {
> 91 |         patternAPIMessageLog.push(message)
     |                                           ^
  92 |       })
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:92:9:
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
> 92 |       })
     |         ^
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)
  95 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:93:30:
  91 |         patternAPIMessageLog.push(message)
  92 |       })
> 93 |       patternAPI.on('error', function (message) {
     |                              ^
  94 |         patternAPIMessageLog.push(message)
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:93:30:
  91 |         patternAPIMessageLog.push(message)
  92 |       })
> 93 |       patternAPI.on('error', function (message) {
     |                              ^
  94 |         patternAPIMessageLog.push(message)
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:43:
  92 |       })
  93 |       patternAPI.on('error', function (message) {
> 94 |         patternAPIMessageLog.push(message)
     |                                           ^
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner
  97 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:9:
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)
> 95 |       })
     |         ^
  96 |       const this_ = this // To provide this context in the socket listner
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:96:13:
  94 |         patternAPIMessageLog.push(message)
  95 |       })
> 96 |       const this_ = this // To provide this context in the socket listner
     |             ^
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)
  99 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:96:25:
  94 |         patternAPIMessageLog.push(message)
  95 |       })
> 96 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)
  99 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:97:46:
   95 |       })
   96 |       const this_ = this // To provide this context in the socket listner
>  97 |       patternAPI.on('build_pattern_success', function (data) {
      |                                              ^
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:97:46:
   95 |       })
   96 |       const this_ = this // To provide this context in the socket listner
>  97 |       patternAPI.on('build_pattern_success', function (data) {
      |                                              ^
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:98:9:
   96 |       const this_ = this // To provide this context in the socket listner
   97 |       patternAPI.on('build_pattern_success', function (data) {
>  98 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:98:55:
   96 |       const this_ = this // To provide this context in the socket listner
   97 |       patternAPI.on('build_pattern_success', function (data) {
>  98 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:61:
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
> 100 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:101:11:
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
> 101 |           console.log('build pattern success', data)
      |           ^
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:53:
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
> 101 |           console.log('build pattern success', data)
      |                                                     ^
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:51:
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)
> 102 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:103:34:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:103:61:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:62:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:104:48:
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
> 104 |           patternAPI.emit('find_matches', data)
      |                                                ^
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')
  107 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:106:11:
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
> 106 |           console.log('UI tried to call API again, but already have results')
      |           ^
  107 |         }
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:106:78:
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
> 106 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  107 |         }
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:108:9:
  106 |           console.log('UI tried to call API again, but already have results')
  107 |         }
> 108 |       })
      |         ^
  109 |       patternAPI.on('find_matches_success', function (data) {
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:109:45:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:109:45:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:109:55:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:58:
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {
> 110 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  111 |       })
  112 |     },
  113 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:111:9:
  109 |       patternAPI.on('find_matches_success', function (data) {
  110 |         patternAPIMessageLog.push('Find matches success')
> 111 |       })
      |         ^
  112 |     },
  113 |     calculatePattern() {
  114 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:28:
  113 |     calculatePattern() {
  114 |       // Hit API, listen to status.
> 115 |       this.submitted = true
      |                            ^
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:47:
  114 |       // Hit API, listen to status.
  115 |       this.submitted = true
> 116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:116:49:
  114 |       // Hit API, listen to status.
  115 |       this.submitted = true
> 116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:117:7:
  115 |       this.submitted = true
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 117 |       console.log(this.buildPatternResultsReceived)
      |       ^
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:117:52:
  115 |       this.submitted = true
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 117 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:120:38:
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
> 120 |         pos_match_id: this.posMatchId
      |                                      ^
  121 |       }
  122 |       if (this.featureDict !== null) {
  123 |         buildPatternData.featureDict = this.featureDict


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:121:8:
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId
> 121 |       }
      |        ^
  122 |       if (this.featureDict !== null) {
  123 |         buildPatternData.featureDict = this.featureDict
  124 |       }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:123:56:
  121 |       }
  122 |       if (this.featureDict !== null) {
> 123 |         buildPatternData.featureDict = this.featureDict
      |                                                        ^
  124 |       }
  125 |       patternAPI.emit('build_pattern', buildPatternData)
  126 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:125:57:
  123 |         buildPatternData.featureDict = this.featureDict
  124 |       }
> 125 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  126 |     }
  127 |   }
  128 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:126:6:
  124 |       }
  125 |       patternAPI.emit('build_pattern', buildPatternData)
> 126 |     }
      |      ^
  127 |   }
  128 | }
  129 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:127:4:
  125 |       patternAPI.emit('build_pattern', buildPatternData)
  126 |     }
> 127 |   }
      |    ^
  128 | }
  129 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:128:2:
  126 |     }
  127 |   }
> 128 | }
      |  ^
  129 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:129:10:
  127 |   }
  128 | }
> 129 | </script>
      |          ^


59 errors and 8 warnings found.
55 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:40:51 PM

 WARNING  Compiled with 5 warnings1:40:52 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:62:6:
  60 |       patternAPIMessageLog: [],
  61 |       buildPatternResultsReceived: false,
> 62 |     }
     |      ^
  63 |   },
  64 |   mounted() {
  65 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   },
  64 |   mounted() {
> 65 |     this.loadPosMatches()
     |                          ^
  66 |     this.loadNegMatches()
  67 |     this.setPatternAPICallbacks()
  68 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:26:
  64 |   mounted() {
  65 |     this.loadPosMatches()
> 66 |     this.loadNegMatches()
     |                          ^
  67 |     this.setPatternAPICallbacks()
  68 |   },
  69 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:67:34:
  65 |     this.loadPosMatches()
  66 |     this.loadNegMatches()
> 67 |     this.setPatternAPICallbacks()
     |                                  ^
  68 |   },
  69 |   methods: {
  70 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:58:
  69 |   methods: {
  70 |     isLoaded() {
> 71 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:72:55:
  70 |     isLoaded() {
  71 |       const posMatchesLoaded = this.posMatches.length > 0
> 72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded
  75 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:81:
  70 |     isLoaded() {
  71 |       const posMatchesLoaded = this.posMatches.length > 0
> 72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded
  75 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:60:
  71 |       const posMatchesLoaded = this.posMatches.length > 0
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  74 |       return isLoaded
  75 |     },
  76 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:74:22:
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 74 |       return isLoaded
     |                      ^
  75 |     },
  76 |     loadPosMatches() {
  77 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:44:
  75 |     },
  76 |     loadPosMatches() {
> 77 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  78 |       const loadOnto = this
  79 |       const targetAttribute = 'posMatches'
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:28:
  76 |     loadPosMatches() {
  77 |       const posMatchIds = [this.posMatchId]
> 78 |       const loadOnto = this
     |                            ^
  79 |       const targetAttribute = 'posMatches'
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  81 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:43:
  77 |       const posMatchIds = [this.posMatchId]
  78 |       const loadOnto = this
> 79 |       const targetAttribute = 'posMatches'
     |                                           ^
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  81 |     },
  82 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:80:81:
  78 |       const loadOnto = this
  79 |       const targetAttribute = 'posMatches'
> 80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  81 |     },
  82 |     loadNegMatches() {
  83 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:28:
  81 |     },
  82 |     loadNegMatches() {
> 83 |       const loadOnto = this
     |                            ^
  84 |       const targetAttribute = 'negMatches'
  85 |       const negMatchIds = this.negMatchIds
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |     loadNegMatches() {
  83 |       const loadOnto = this
> 84 |       const targetAttribute = 'negMatches'
     |                                           ^
  85 |       const negMatchIds = this.negMatchIds
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:85:13:
  83 |       const loadOnto = this
  84 |       const targetAttribute = 'negMatches'
> 85 |       const negMatchIds = this.negMatchIds
     |             ^
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },
  88 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:43:
  83 |       const loadOnto = this
  84 |       const targetAttribute = 'negMatches'
> 85 |       const negMatchIds = this.negMatchIds
     |                                           ^
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },
  88 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:86:81:
  84 |       const targetAttribute = 'negMatches'
  85 |       const negMatchIds = this.negMatchIds
> 86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  87 |     },
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:89:13:
  87 |     },
  88 |     setPatternAPICallbacks() {
> 89 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
  92 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:89:61:
  87 |     },
  88 |     setPatternAPICallbacks() {
> 89 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
  92 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:90:32:
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 90 |       patternAPI.on('message', function (message) {
     |                                ^
  91 |         patternAPIMessageLog.push(message)
  92 |       })
  93 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:90:32:
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 90 |       patternAPI.on('message', function (message) {
     |                                ^
  91 |         patternAPIMessageLog.push(message)
  92 |       })
  93 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:43:
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
  90 |       patternAPI.on('message', function (message) {
> 91 |         patternAPIMessageLog.push(message)
     |                                           ^
  92 |       })
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:92:9:
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
> 92 |       })
     |         ^
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)
  95 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:93:30:
  91 |         patternAPIMessageLog.push(message)
  92 |       })
> 93 |       patternAPI.on('error', function (message) {
     |                              ^
  94 |         patternAPIMessageLog.push(message)
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:93:30:
  91 |         patternAPIMessageLog.push(message)
  92 |       })
> 93 |       patternAPI.on('error', function (message) {
     |                              ^
  94 |         patternAPIMessageLog.push(message)
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:43:
  92 |       })
  93 |       patternAPI.on('error', function (message) {
> 94 |         patternAPIMessageLog.push(message)
     |                                           ^
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner
  97 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:9:
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)
> 95 |       })
     |         ^
  96 |       const this_ = this // To provide this context in the socket listner
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:96:13:
  94 |         patternAPIMessageLog.push(message)
  95 |       })
> 96 |       const this_ = this // To provide this context in the socket listner
     |             ^
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)
  99 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:96:25:
  94 |         patternAPIMessageLog.push(message)
  95 |       })
> 96 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)
  99 |         if (!this_.buildPatternResultsReceived) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:97:46:
   95 |       })
   96 |       const this_ = this // To provide this context in the socket listner
>  97 |       patternAPI.on('build_pattern_success', function (data) {
      |                                              ^
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:97:46:
   95 |       })
   96 |       const this_ = this // To provide this context in the socket listner
>  97 |       patternAPI.on('build_pattern_success', function (data) {
      |                                              ^
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:98:9:
   96 |       const this_ = this // To provide this context in the socket listner
   97 |       patternAPI.on('build_pattern_success', function (data) {
>  98 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:98:55:
   96 |       const this_ = this // To provide this context in the socket listner
   97 |       patternAPI.on('build_pattern_success', function (data) {
>  98 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:61:
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
> 100 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:101:11:
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
> 101 |           console.log('build pattern success', data)
      |           ^
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:53:
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
> 101 |           console.log('build pattern success', data)
      |                                                     ^
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:51:
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)
> 102 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:103:34:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:103:61:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:62:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:104:48:
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
> 104 |           patternAPI.emit('find_matches', data)
      |                                                ^
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')
  107 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:106:11:
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
> 106 |           console.log('UI tried to call API again, but already have results')
      |           ^
  107 |         }
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:106:78:
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
> 106 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  107 |         }
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:108:9:
  106 |           console.log('UI tried to call API again, but already have results')
  107 |         }
> 108 |       })
      |         ^
  109 |       patternAPI.on('find_matches_success', function (data) {
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:109:45:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:109:45:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:109:55:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:58:
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {
> 110 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  111 |       })
  112 |     },
  113 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:111:9:
  109 |       patternAPI.on('find_matches_success', function (data) {
  110 |         patternAPIMessageLog.push('Find matches success')
> 111 |       })
      |         ^
  112 |     },
  113 |     calculatePattern() {
  114 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:28:
  113 |     calculatePattern() {
  114 |       // Hit API, listen to status.
> 115 |       this.submitted = true
      |                            ^
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:47:
  114 |       // Hit API, listen to status.
  115 |       this.submitted = true
> 116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:116:49:
  114 |       // Hit API, listen to status.
  115 |       this.submitted = true
> 116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:117:7:
  115 |       this.submitted = true
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 117 |       console.log(this.buildPatternResultsReceived)
      |       ^
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId,


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:117:52:
  115 |       this.submitted = true
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 117 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId,


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:121:38:
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId,
> 121 |         featureDict: this.featureDict
      |                                      ^
  122 |       }
  123 |       if (this.featureDict !== null) {
  124 |         buildPatternData.featureDict = this.featureDict


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:122:8:
  120 |         pos_match_id: this.posMatchId,
  121 |         featureDict: this.featureDict
> 122 |       }
      |        ^
  123 |       if (this.featureDict !== null) {
  124 |         buildPatternData.featureDict = this.featureDict
  125 |       }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:124:56:
  122 |       }
  123 |       if (this.featureDict !== null) {
> 124 |         buildPatternData.featureDict = this.featureDict
      |                                                        ^
  125 |       }
  126 |       patternAPI.emit('build_pattern', buildPatternData)
  127 |     }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:126:57:
  124 |         buildPatternData.featureDict = this.featureDict
  125 |       }
> 126 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  127 |     }
  128 |   }
  129 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:127:6:
  125 |       }
  126 |       patternAPI.emit('build_pattern', buildPatternData)
> 127 |     }
      |      ^
  128 |   }
  129 | }
  130 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:128:4:
  126 |       patternAPI.emit('build_pattern', buildPatternData)
  127 |     }
> 128 |   }
      |    ^
  129 | }
  130 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:129:2:
  127 |     }
  128 |   }
> 129 | }
      |  ^
  130 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:130:10:
  128 |   }
  129 | }
> 130 | </script>
      |          ^


59 errors and 8 warnings found.
55 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:40:55 PM

 WARNING  Compiled with 5 warnings1:40:55 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:36:54:
  34 | import database from '../database';
  35 | import patternAPI from '../pattern_api';
> 36 | import MatchTable from '../components/MatchTable.vue'
     |                                                      ^
  37 | 
  38 | export default {
  39 |   name: 'calculate-pattern-view',


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                      ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:50:33:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => { return [] },
     |                                 ^
  51 |     },
  52 |   },
  53 |   data() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:62:6:
  60 |       patternAPIMessageLog: [],
  61 |       buildPatternResultsReceived: false,
> 62 |     }
     |      ^
  63 |   },
  64 |   mounted() {
  65 |     this.loadPosMatches()


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:65:26:
  63 |   },
  64 |   mounted() {
> 65 |     this.loadPosMatches()
     |                          ^
  66 |     this.loadNegMatches()
  67 |     this.setPatternAPICallbacks()
  68 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:66:26:
  64 |   mounted() {
  65 |     this.loadPosMatches()
> 66 |     this.loadNegMatches()
     |                          ^
  67 |     this.setPatternAPICallbacks()
  68 |   },
  69 |   methods: {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:67:34:
  65 |     this.loadPosMatches()
  66 |     this.loadNegMatches()
> 67 |     this.setPatternAPICallbacks()
     |                                  ^
  68 |   },
  69 |   methods: {
  70 |     isLoaded() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:71:58:
  69 |   methods: {
  70 |     isLoaded() {
> 71 |       const posMatchesLoaded = this.posMatches.length > 0
     |                                                          ^
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:72:55:
  70 |     isLoaded() {
  71 |       const posMatchesLoaded = this.posMatches.length > 0
> 72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                       ^
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded
  75 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:72:81:
  70 |     isLoaded() {
  71 |       const posMatchesLoaded = this.posMatches.length > 0
> 72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
     |                                                                                 ^
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
  74 |       return isLoaded
  75 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:73:60:
  71 |       const posMatchesLoaded = this.posMatches.length > 0
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
> 73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
     |                                                            ^
  74 |       return isLoaded
  75 |     },
  76 |     loadPosMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:74:22:
  72 |       const negMatchesLoaded = this.negMatches.length == this.negMatchIds.length
  73 |       const isLoaded = posMatchesLoaded && negMatchesLoaded
> 74 |       return isLoaded
     |                      ^
  75 |     },
  76 |     loadPosMatches() {
  77 |       const posMatchIds = [this.posMatchId]


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:77:44:
  75 |     },
  76 |     loadPosMatches() {
> 77 |       const posMatchIds = [this.posMatchId]
     |                                            ^
  78 |       const loadOnto = this
  79 |       const targetAttribute = 'posMatches'
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:78:28:
  76 |     loadPosMatches() {
  77 |       const posMatchIds = [this.posMatchId]
> 78 |       const loadOnto = this
     |                            ^
  79 |       const targetAttribute = 'posMatches'
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  81 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:79:43:
  77 |       const posMatchIds = [this.posMatchId]
  78 |       const loadOnto = this
> 79 |       const targetAttribute = 'posMatches'
     |                                           ^
  80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
  81 |     },
  82 |     loadNegMatches() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:80:81:
  78 |       const loadOnto = this
  79 |       const targetAttribute = 'posMatches'
> 80 |       database.loadByIds('matches_view', posMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  81 |     },
  82 |     loadNegMatches() {
  83 |       const loadOnto = this


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:83:28:
  81 |     },
  82 |     loadNegMatches() {
> 83 |       const loadOnto = this
     |                            ^
  84 |       const targetAttribute = 'negMatches'
  85 |       const negMatchIds = this.negMatchIds
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:84:43:
  82 |     loadNegMatches() {
  83 |       const loadOnto = this
> 84 |       const targetAttribute = 'negMatches'
     |                                           ^
  85 |       const negMatchIds = this.negMatchIds
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:85:13:
  83 |       const loadOnto = this
  84 |       const targetAttribute = 'negMatches'
> 85 |       const negMatchIds = this.negMatchIds
     |             ^
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },
  88 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:85:43:
  83 |       const loadOnto = this
  84 |       const targetAttribute = 'negMatches'
> 85 |       const negMatchIds = this.negMatchIds
     |                                           ^
  86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
  87 |     },
  88 |     setPatternAPICallbacks() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:86:81:
  84 |       const targetAttribute = 'negMatches'
  85 |       const negMatchIds = this.negMatchIds
> 86 |       database.loadByIds('matches_view', negMatchIds, loadOnto, targetAttribute)
     |                                                                                 ^
  87 |     },
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:89:13:
  87 |     },
  88 |     setPatternAPICallbacks() {
> 89 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |             ^
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
  92 |       })


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:89:61:
  87 |     },
  88 |     setPatternAPICallbacks() {
> 89 |       const patternAPIMessageLog = this.patternAPIMessageLog
     |                                                             ^
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
  92 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:90:32:
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 90 |       patternAPI.on('message', function (message) {
     |                                ^
  91 |         patternAPIMessageLog.push(message)
  92 |       })
  93 |       patternAPI.on('error', function (message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:90:32:
  88 |     setPatternAPICallbacks() {
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
> 90 |       patternAPI.on('message', function (message) {
     |                                ^
  91 |         patternAPIMessageLog.push(message)
  92 |       })
  93 |       patternAPI.on('error', function (message) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:91:43:
  89 |       const patternAPIMessageLog = this.patternAPIMessageLog
  90 |       patternAPI.on('message', function (message) {
> 91 |         patternAPIMessageLog.push(message)
     |                                           ^
  92 |       })
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:92:9:
  90 |       patternAPI.on('message', function (message) {
  91 |         patternAPIMessageLog.push(message)
> 92 |       })
     |         ^
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)
  95 |       })


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:93:30:
  91 |         patternAPIMessageLog.push(message)
  92 |       })
> 93 |       patternAPI.on('error', function (message) {
     |                              ^
  94 |         patternAPIMessageLog.push(message)
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:93:30:
  91 |         patternAPIMessageLog.push(message)
  92 |       })
> 93 |       patternAPI.on('error', function (message) {
     |                              ^
  94 |         patternAPIMessageLog.push(message)
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:94:43:
  92 |       })
  93 |       patternAPI.on('error', function (message) {
> 94 |         patternAPIMessageLog.push(message)
     |                                           ^
  95 |       })
  96 |       const this_ = this // To provide this context in the socket listner
  97 |       patternAPI.on('build_pattern_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:95:9:
  93 |       patternAPI.on('error', function (message) {
  94 |         patternAPIMessageLog.push(message)
> 95 |       })
     |         ^
  96 |       const this_ = this // To provide this context in the socket listner
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:96:13:
  94 |         patternAPIMessageLog.push(message)
  95 |       })
> 96 |       const this_ = this // To provide this context in the socket listner
     |             ^
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)
  99 |         if (!this_.buildPatternResultsReceived) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:96:25:
  94 |         patternAPIMessageLog.push(message)
  95 |       })
> 96 |       const this_ = this // To provide this context in the socket listner
     |                         ^
  97 |       patternAPI.on('build_pattern_success', function (data) {
  98 |         console.log(this_.buildPatternResultsReceived)
  99 |         if (!this_.buildPatternResultsReceived) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:97:46:
   95 |       })
   96 |       const this_ = this // To provide this context in the socket listner
>  97 |       patternAPI.on('build_pattern_success', function (data) {
      |                                              ^
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:97:46:
   95 |       })
   96 |       const this_ = this // To provide this context in the socket listner
>  97 |       patternAPI.on('build_pattern_success', function (data) {
      |                                              ^
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:98:9:
   96 |       const this_ = this // To provide this context in the socket listner
   97 |       patternAPI.on('build_pattern_success', function (data) {
>  98 |         console.log(this_.buildPatternResultsReceived)
      |         ^
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:98:55:
   96 |       const this_ = this // To provide this context in the socket listner
   97 |       patternAPI.on('build_pattern_success', function (data) {
>  98 |         console.log(this_.buildPatternResultsReceived)
      |                                                       ^
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:100:61:
   98 |         console.log(this_.buildPatternResultsReceived)
   99 |         if (!this_.buildPatternResultsReceived) {
> 100 |           patternAPIMessageLog.push('Build pattern success')
      |                                                             ^
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:101:11:
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
> 101 |           console.log('build pattern success', data)
      |           ^
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:101:53:
   99 |         if (!this_.buildPatternResultsReceived) {
  100 |           patternAPIMessageLog.push('Build pattern success')
> 101 |           console.log('build pattern success', data)
      |                                                     ^
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:102:51:
  100 |           patternAPIMessageLog.push('Build pattern success')
  101 |           console.log('build pattern success', data)
> 102 |           this_.buildPatternResultsReceived = true
      |                                                   ^
  103 |           this_.patternResults = {patternId: data.pattern_id}
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {


error: A space is required after '{' (object-curly-spacing) at src/views/CalculatePatternView.vue:103:34:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                  ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: A space is required before '}' (object-curly-spacing) at src/views/CalculatePatternView.vue:103:61:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                             ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:103:62:
  101 |           console.log('build pattern success', data)
  102 |           this_.buildPatternResultsReceived = true
> 103 |           this_.patternResults = {patternId: data.pattern_id}
      |                                                              ^
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:104:48:
  102 |           this_.buildPatternResultsReceived = true
  103 |           this_.patternResults = {patternId: data.pattern_id}
> 104 |           patternAPI.emit('find_matches', data)
      |                                                ^
  105 |         } else {
  106 |           console.log('UI tried to call API again, but already have results')
  107 |         }


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:106:11:
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
> 106 |           console.log('UI tried to call API again, but already have results')
      |           ^
  107 |         }
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:106:78:
  104 |           patternAPI.emit('find_matches', data)
  105 |         } else {
> 106 |           console.log('UI tried to call API again, but already have results')
      |                                                                              ^
  107 |         }
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:108:9:
  106 |           console.log('UI tried to call API again, but already have results')
  107 |         }
> 108 |       })
      |         ^
  109 |       patternAPI.on('find_matches_success', function (data) {
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:109:45:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:109:45:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                             ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:109:55:
  107 |         }
  108 |       })
> 109 |       patternAPI.on('find_matches_success', function (data) {
      |                                                       ^
  110 |         patternAPIMessageLog.push('Find matches success')
  111 |       })
  112 |     },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:110:58:
  108 |       })
  109 |       patternAPI.on('find_matches_success', function (data) {
> 110 |         patternAPIMessageLog.push('Find matches success')
      |                                                          ^
  111 |       })
  112 |     },
  113 |     calculatePattern() {


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:111:9:
  109 |       patternAPI.on('find_matches_success', function (data) {
  110 |         patternAPIMessageLog.push('Find matches success')
> 111 |       })
      |         ^
  112 |     },
  113 |     calculatePattern() {
  114 |       // Hit API, listen to status.


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:115:28:
  113 |     calculatePattern() {
  114 |       // Hit API, listen to status.
> 115 |       this.submitted = true
      |                            ^
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:116:47:
  114 |       // Hit API, listen to status.
  115 |       this.submitted = true
> 116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                               ^
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {


error: Multiple spaces found before '// In case sti...' (no-multi-spaces) at src/views/CalculatePatternView.vue:116:49:
  114 |       // Hit API, listen to status.
  115 |       this.submitted = true
> 116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
      |                                                 ^
  117 |       console.log(this.buildPatternResultsReceived)
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:117:7:
  115 |       this.submitted = true
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 117 |       console.log(this.buildPatternResultsReceived)
      |       ^
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId,


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:117:52:
  115 |       this.submitted = true
  116 |       this.buildPatternResultsReceived = false  // In case still true from a previous call
> 117 |       console.log(this.buildPatternResultsReceived)
      |                                                    ^
  118 |       // If just pos match, build pattern. else refine
  119 |       const buildPatternData = {
  120 |         pos_match_id: this.posMatchId,


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:122:8:
  120 |         pos_match_id: this.posMatchId,
  121 |         featureDict: this.featureDict,
> 122 |       }
      |        ^
  123 |       patternAPI.emit('build_pattern', buildPatternData)
  124 |     }
  125 |   }


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:123:57:
  121 |         featureDict: this.featureDict,
  122 |       }
> 123 |       patternAPI.emit('build_pattern', buildPatternData)
      |                                                         ^
  124 |     }
  125 |   }
  126 | }


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:124:6:
  122 |       }
  123 |       patternAPI.emit('build_pattern', buildPatternData)
> 124 |     }
      |      ^
  125 |   }
  126 | }
  127 | </script>


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:125:4:
  123 |       patternAPI.emit('build_pattern', buildPatternData)
  124 |     }
> 125 |   }
      |    ^
  126 | }
  127 | </script>


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:126:2:
  124 |     }
  125 |   }
> 126 | }
      |  ^
  127 | </script>


error: Newline required at end of file but not found (eol-last) at src/views/CalculatePatternView.vue:127:10:
  125 |   }
  126 | }
> 127 | </script>
      |          ^


57 errors and 8 warnings found.
53 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:40:56 PM

 WARNING  Compiled with 5 warnings1:40:57 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => {
     |                      ^
  51 |         return [];
  52 |       },
  53 |     },


error: There should be no line break before or after '=' (operator-linebreak) at src/views/CalculatePatternView.vue:74:31:
  72 |     isLoaded() {
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
> 74 |       const negMatchesLoaded =
     |                               ^
  75 |         this.negMatches.length == this.negMatchIds.length;
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:75:32:
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
  74 |       const negMatchesLoaded =
> 75 |         this.negMatches.length == this.negMatchIds.length;
     |                                ^
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;
  78 |     },


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:87:24:
  85 |         posMatchIds,
  86 |         loadOnto,
> 87 |         targetAttribute
     |                        ^
  88 |       );
  89 |     },
  90 |     loadNegMatches() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:93:13:
  91 |       const loadOnto = this;
  92 |       const targetAttribute = 'negMatches';
> 93 |       const negMatchIds = this.negMatchIds;
     |             ^
  94 |       database.loadByIds(
  95 |         'matches_view',
  96 |         negMatchIds,


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:98:24:
   96 |         negMatchIds,
   97 |         loadOnto,
>  98 |         targetAttribute
      |                        ^
   99 |       );
  100 |     },
  101 |     setPatternAPICallbacks() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:102:13:
  100 |     },
  101 |     setPatternAPICallbacks() {
> 102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
      |             ^
  103 |       patternAPI.on('message', function(message) {
  104 |         patternAPIMessageLog.push(message);
  105 |       });


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:103:32:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:103:32:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:103:40:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                        ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:106:30:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                              ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:106:30:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                              ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:106:38:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                                      ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:109:13:
  107 |         patternAPIMessageLog.push(message);
  108 |       });
> 109 |       const this_ = this; // To provide this context in the socket listner
      |             ^
  110 |       patternAPI.on('build_pattern_success', function(data) {
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:110:46:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:110:46:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:110:54:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                                      ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:111:9:
  109 |       const this_ = this; // To provide this context in the socket listner
  110 |       patternAPI.on('build_pattern_success', function(data) {
> 111 |         console.log(this_.buildPatternResultsReceived);
      |         ^
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');
  114 |           console.log('build pattern success', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:114:11:
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');
> 114 |           console.log('build pattern success', data);
      |           ^
  115 |           this_.buildPatternResultsReceived = true;
  116 |           this_.patternResults = { patternId: data.pattern_id };
  117 |           patternAPI.emit('find_matches', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:119:11:
  117 |           patternAPI.emit('find_matches', data);
  118 |         } else {
> 119 |           console.log('UI tried to call API again, but already have results');
      |           ^
  120 |         }
  121 |       });
  122 |       patternAPI.on('find_matches_success', function(data) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:122:45:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:122:45:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:122:53:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                                     ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:122:54:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                                      ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:130:7:
  128 |       this.submitted = true;
  129 |       this.buildPatternResultsReceived = false; // In case still true from a previous call
> 130 |       console.log(this.buildPatternResultsReceived);
      |       ^
  131 |       // If just pos match, build pattern. else refine
  132 |       const buildPatternData = {
  133 |         pos_match_id: this.posMatchId,


18 errors and 8 warnings found.
14 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:42:06 PM

 WARNING  Compiled with 5 warnings1:42:07 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => {
     |                      ^
  51 |         return [];
  52 |       },
  53 |     },


error: There should be no line break before or after '=' (operator-linebreak) at src/views/CalculatePatternView.vue:74:31:
  72 |     isLoaded() {
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
> 74 |       const negMatchesLoaded =
     |                               ^
  75 |         this.negMatches.length == this.negMatchIds.length;
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:75:32:
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
  74 |       const negMatchesLoaded =
> 75 |         this.negMatches.length == this.negMatchIds.length;
     |                                ^
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;
  78 |     },


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:87:24:
  85 |         posMatchIds,
  86 |         loadOnto,
> 87 |         targetAttribute
     |                        ^
  88 |       );
  89 |     },
  90 |     loadNegMatches() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:93:13:
  91 |       const loadOnto = this;
  92 |       const targetAttribute = 'negMatches';
> 93 |       const negMatchIds = this.negMatchIds;
     |             ^
  94 |       database.loadByIds(
  95 |         'matches_view',
  96 |         negMatchIds,


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:98:24:
   96 |         negMatchIds,
   97 |         loadOnto,
>  98 |         targetAttribute
      |                        ^
   99 |       );
  100 |     },
  101 |     setPatternAPICallbacks() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:102:13:
  100 |     },
  101 |     setPatternAPICallbacks() {
> 102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
      |             ^
  103 |       patternAPI.on('message', function(message) {
  104 |         patternAPIMessageLog.push(message);
  105 |       });


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:103:32:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:103:32:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:103:40:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                        ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:106:30:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                              ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:106:30:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                              ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:106:38:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                                      ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:109:13:
  107 |         patternAPIMessageLog.push(message);
  108 |       });
> 109 |       const this_ = this; // To provide this context in the socket listner
      |             ^
  110 |       patternAPI.on('build_pattern_success', function(data) {
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:110:46:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:110:46:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:110:54:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                                      ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:111:9:
  109 |       const this_ = this; // To provide this context in the socket listner
  110 |       patternAPI.on('build_pattern_success', function(data) {
> 111 |         console.log(this_.buildPatternResultsReceived);
      |         ^
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');
  114 |           console.log('build pattern success', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:114:11:
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');
> 114 |           console.log('build pattern success', data);
      |           ^
  115 |           this_.buildPatternResultsReceived = true;
  116 |           this_.patternResults = { patternId: data.pattern_id };
  117 |           patternAPI.emit('find_matches', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:119:11:
  117 |           patternAPI.emit('find_matches', data);
  118 |         } else {
> 119 |           console.log('UI tried to call API again, but already have results');
      |           ^
  120 |         }
  121 |       });
  122 |       patternAPI.on('find_matches_success', function(data) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:122:45:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:122:45:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:122:53:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                                     ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:122:54:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                                      ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


18 errors and 7 warnings found.
14 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:42:12 PM

 WARNING  Compiled with 5 warnings1:42:12 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => {
     |                      ^
  51 |         return [];
  52 |       },
  53 |     },


error: There should be no line break before or after '=' (operator-linebreak) at src/views/CalculatePatternView.vue:74:31:
  72 |     isLoaded() {
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
> 74 |       const negMatchesLoaded =
     |                               ^
  75 |         this.negMatches.length == this.negMatchIds.length;
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:75:32:
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
  74 |       const negMatchesLoaded =
> 75 |         this.negMatches.length == this.negMatchIds.length;
     |                                ^
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;
  78 |     },


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:87:24:
  85 |         posMatchIds,
  86 |         loadOnto,
> 87 |         targetAttribute
     |                        ^
  88 |       );
  89 |     },
  90 |     loadNegMatches() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:93:13:
  91 |       const loadOnto = this;
  92 |       const targetAttribute = 'negMatches';
> 93 |       const negMatchIds = this.negMatchIds;
     |             ^
  94 |       database.loadByIds(
  95 |         'matches_view',
  96 |         negMatchIds,


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:98:24:
   96 |         negMatchIds,
   97 |         loadOnto,
>  98 |         targetAttribute
      |                        ^
   99 |       );
  100 |     },
  101 |     setPatternAPICallbacks() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:102:13:
  100 |     },
  101 |     setPatternAPICallbacks() {
> 102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
      |             ^
  103 |       patternAPI.on('message', function(message) {
  104 |         patternAPIMessageLog.push(message);
  105 |       });


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:103:32:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:103:32:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:103:40:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                        ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:106:30:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                              ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:106:30:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                              ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:106:38:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                                      ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:109:13:
  107 |         patternAPIMessageLog.push(message);
  108 |       });
> 109 |       const this_ = this; // To provide this context in the socket listner
      |             ^
  110 |       patternAPI.on('build_pattern_success', function(data) {
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:110:46:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:110:46:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:110:54:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                                      ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:111:9:
  109 |       const this_ = this; // To provide this context in the socket listner
  110 |       patternAPI.on('build_pattern_success', function(data) {
> 111 |         console.log(this_.buildPatternResultsReceived);
      |         ^
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');
  114 |           console.log('build pattern success', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:114:11:
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');
> 114 |           console.log('build pattern success', data);
      |           ^
  115 |           this_.buildPatternResultsReceived = true;
  116 |           this_.patternResults = { patternId: data.pattern_id };
  117 |           patternAPI.emit('find_matches', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:119:11:
  117 |           patternAPI.emit('find_matches', data);
  118 |         } else {
> 119 |           console.log('UI tried to call API again, but already have results');
      |           ^
  120 |         }
  121 |       });
  122 |       patternAPI.on('find_matches_success', function(data) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:122:45:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:122:45:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:122:53:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                                     ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:122:54:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                                      ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


18 errors and 7 warnings found.
14 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:42:13 PM

 WARNING  Compiled with 5 warnings1:42:13 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => {
     |                      ^
  51 |         return [];
  52 |       },
  53 |     },


error: There should be no line break before or after '=' (operator-linebreak) at src/views/CalculatePatternView.vue:74:31:
  72 |     isLoaded() {
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
> 74 |       const negMatchesLoaded =
     |                               ^
  75 |         this.negMatches.length == this.negMatchIds.length;
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:75:32:
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
  74 |       const negMatchesLoaded =
> 75 |         this.negMatches.length == this.negMatchIds.length;
     |                                ^
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;
  78 |     },


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:87:24:
  85 |         posMatchIds,
  86 |         loadOnto,
> 87 |         targetAttribute
     |                        ^
  88 |       );
  89 |     },
  90 |     loadNegMatches() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:93:13:
  91 |       const loadOnto = this;
  92 |       const targetAttribute = 'negMatches';
> 93 |       const negMatchIds = this.negMatchIds;
     |             ^
  94 |       database.loadByIds(
  95 |         'matches_view',
  96 |         negMatchIds,


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:98:24:
   96 |         negMatchIds,
   97 |         loadOnto,
>  98 |         targetAttribute
      |                        ^
   99 |       );
  100 |     },
  101 |     setPatternAPICallbacks() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:102:13:
  100 |     },
  101 |     setPatternAPICallbacks() {
> 102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
      |             ^
  103 |       patternAPI.on('message', function(message) {
  104 |         patternAPIMessageLog.push(message);
  105 |       });


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:103:32:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:103:32:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:103:40:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                        ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:106:30:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                              ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:106:30:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                              ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:106:38:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                                      ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:109:13:
  107 |         patternAPIMessageLog.push(message);
  108 |       });
> 109 |       const this_ = this; // To provide this context in the socket listner
      |             ^
  110 |       patternAPI.on('build_pattern_success', function(data) {
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:110:46:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:110:46:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:110:54:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                                      ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:111:9:
  109 |       const this_ = this; // To provide this context in the socket listner
  110 |       patternAPI.on('build_pattern_success', function(data) {
> 111 |         console.log(this_.buildPatternResultsReceived);
      |         ^
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');
  114 |           console.log('build pattern success', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:114:11:
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');
> 114 |           console.log('build pattern success', data);
      |           ^
  115 |           this_.buildPatternResultsReceived = true;
  116 |           this_.patternResults = { patternId: data.pattern_id };
  117 |           patternAPI.emit('find_matches', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:119:11:
  117 |           patternAPI.emit('find_matches', data);
  118 |         } else {
> 119 |           console.log('UI tried to call API again, but already have results');
      |           ^
  120 |         }
  121 |       });
  122 |       patternAPI.on('find_matches_success', function(data) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:122:45:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:122:45:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:122:53:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                                     ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:122:54:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                                      ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


18 errors and 7 warnings found.
14 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:42:14 PM

 WARNING  Compiled with 5 warnings1:42:15 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => {
     |                      ^
  51 |         return [];
  52 |       },
  53 |     },


error: There should be no line break before or after '=' (operator-linebreak) at src/views/CalculatePatternView.vue:74:31:
  72 |     isLoaded() {
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
> 74 |       const negMatchesLoaded =
     |                               ^
  75 |         this.negMatches.length == this.negMatchIds.length;
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:75:32:
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
  74 |       const negMatchesLoaded =
> 75 |         this.negMatches.length == this.negMatchIds.length;
     |                                ^
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;
  78 |     },


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:87:24:
  85 |         posMatchIds,
  86 |         loadOnto,
> 87 |         targetAttribute
     |                        ^
  88 |       );
  89 |     },
  90 |     loadNegMatches() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:93:13:
  91 |       const loadOnto = this;
  92 |       const targetAttribute = 'negMatches';
> 93 |       const negMatchIds = this.negMatchIds;
     |             ^
  94 |       database.loadByIds(
  95 |         'matches_view',
  96 |         negMatchIds,


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:98:24:
   96 |         negMatchIds,
   97 |         loadOnto,
>  98 |         targetAttribute
      |                        ^
   99 |       );
  100 |     },
  101 |     setPatternAPICallbacks() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:102:13:
  100 |     },
  101 |     setPatternAPICallbacks() {
> 102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
      |             ^
  103 |       patternAPI.on('message', function(message) {
  104 |         patternAPIMessageLog.push(message);
  105 |       });


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:103:32:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:103:32:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:103:40:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                        ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:106:30:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                              ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:106:30:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                              ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:106:38:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                                      ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:109:13:
  107 |         patternAPIMessageLog.push(message);
  108 |       });
> 109 |       const this_ = this; // To provide this context in the socket listner
      |             ^
  110 |       patternAPI.on('build_pattern_success', function(data) {
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:110:46:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:110:46:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:110:54:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                                      ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:111:9:
  109 |       const this_ = this; // To provide this context in the socket listner
  110 |       patternAPI.on('build_pattern_success', function(data) {
> 111 |         console.log(this_.buildPatternResultsReceived);
      |         ^
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');
  114 |           console.log('build pattern success', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:114:11:
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');
> 114 |           console.log('build pattern success', data);
      |           ^
  115 |           this_.buildPatternResultsReceived = true;
  116 |           this_.patternResults = { patternId: data.pattern_id };
  117 |           patternAPI.emit('find_matches', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:119:11:
  117 |           patternAPI.emit('find_matches', data);
  118 |         } else {
> 119 |           console.log('UI tried to call API again, but already have results');
      |           ^
  120 |         }
  121 |       });
  122 |       patternAPI.on('find_matches_success', function(data) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:122:45:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:122:45:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:122:53:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                                     ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:122:54:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                                      ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


18 errors and 7 warnings found.
14 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:42:15 PM

 WARNING  Compiled with 5 warnings1:42:15 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => {
     |                      ^
  51 |         return [];
  52 |       },
  53 |     },


error: There should be no line break before or after '=' (operator-linebreak) at src/views/CalculatePatternView.vue:74:31:
  72 |     isLoaded() {
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
> 74 |       const negMatchesLoaded =
     |                               ^
  75 |         this.negMatches.length == this.negMatchIds.length;
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:75:32:
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
  74 |       const negMatchesLoaded =
> 75 |         this.negMatches.length == this.negMatchIds.length;
     |                                ^
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;
  78 |     },


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:87:24:
  85 |         posMatchIds,
  86 |         loadOnto,
> 87 |         targetAttribute
     |                        ^
  88 |       );
  89 |     },
  90 |     loadNegMatches() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:93:13:
  91 |       const loadOnto = this;
  92 |       const targetAttribute = 'negMatches';
> 93 |       const negMatchIds = this.negMatchIds;
     |             ^
  94 |       database.loadByIds(
  95 |         'matches_view',
  96 |         negMatchIds,


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:98:24:
   96 |         negMatchIds,
   97 |         loadOnto,
>  98 |         targetAttribute
      |                        ^
   99 |       );
  100 |     },
  101 |     setPatternAPICallbacks() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:102:13:
  100 |     },
  101 |     setPatternAPICallbacks() {
> 102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
      |             ^
  103 |       patternAPI.on('message', function(message) {
  104 |         patternAPIMessageLog.push(message);
  105 |       });


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:103:32:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:103:32:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:103:40:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                        ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:106:30:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                              ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:106:30:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                              ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:106:38:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                                      ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:109:13:
  107 |         patternAPIMessageLog.push(message);
  108 |       });
> 109 |       const this_ = this; // To provide this context in the socket listner
      |             ^
  110 |       patternAPI.on('build_pattern_success', function(data) {
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:110:46:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:110:46:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:110:54:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                                      ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:111:9:
  109 |       const this_ = this; // To provide this context in the socket listner
  110 |       patternAPI.on('build_pattern_success', function(data) {
> 111 |         console.log(this_.buildPatternResultsReceived);
      |         ^
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');
  114 |           console.log('build pattern success', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:114:11:
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');
> 114 |           console.log('build pattern success', data);
      |           ^
  115 |           this_.buildPatternResultsReceived = true;
  116 |           this_.patternResults = { patternId: data.pattern_id };
  117 |           patternAPI.emit('find_matches', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:119:11:
  117 |           patternAPI.emit('find_matches', data);
  118 |         } else {
> 119 |           console.log('UI tried to call API again, but already have results');
      |           ^
  120 |         }
  121 |       });
  122 |       patternAPI.on('find_matches_success', function(data) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:122:45:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:122:45:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:122:53:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                                     ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:122:54:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                                      ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


18 errors and 7 warnings found.
14 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:42:16 PM

 WARNING  Compiled with 5 warnings1:42:17 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => {
     |                      ^
  51 |         return [];
  52 |       },
  53 |     },


error: There should be no line break before or after '=' (operator-linebreak) at src/views/CalculatePatternView.vue:74:31:
  72 |     isLoaded() {
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
> 74 |       const negMatchesLoaded =
     |                               ^
  75 |         this.negMatches.length == this.negMatchIds.length;
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:75:32:
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
  74 |       const negMatchesLoaded =
> 75 |         this.negMatches.length == this.negMatchIds.length;
     |                                ^
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;
  78 |     },


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:87:24:
  85 |         posMatchIds,
  86 |         loadOnto,
> 87 |         targetAttribute
     |                        ^
  88 |       );
  89 |     },
  90 |     loadNegMatches() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:93:13:
  91 |       const loadOnto = this;
  92 |       const targetAttribute = 'negMatches';
> 93 |       const negMatchIds = this.negMatchIds;
     |             ^
  94 |       database.loadByIds(
  95 |         'matches_view',
  96 |         negMatchIds,


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:98:24:
   96 |         negMatchIds,
   97 |         loadOnto,
>  98 |         targetAttribute
      |                        ^
   99 |       );
  100 |     },
  101 |     setPatternAPICallbacks() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:102:13:
  100 |     },
  101 |     setPatternAPICallbacks() {
> 102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
      |             ^
  103 |       patternAPI.on('message', function(message) {
  104 |         patternAPIMessageLog.push(message);
  105 |       });


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:103:32:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:103:32:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:103:40:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                        ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:106:30:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                              ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:106:30:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                              ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:106:38:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                                      ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:109:13:
  107 |         patternAPIMessageLog.push(message);
  108 |       });
> 109 |       const this_ = this; // To provide this context in the socket listner
      |             ^
  110 |       patternAPI.on('build_pattern_success', function(data) {
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:110:46:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:110:46:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:110:54:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                                      ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:111:9:
  109 |       const this_ = this; // To provide this context in the socket listner
  110 |       patternAPI.on('build_pattern_success', function(data) {
> 111 |         console.log(this_.buildPatternResultsReceived);
      |         ^
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');
  114 |           console.log('build pattern success', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:114:11:
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');
> 114 |           console.log('build pattern success', data);
      |           ^
  115 |           this_.buildPatternResultsReceived = true;
  116 |           this_.patternResults = { patternId: data.pattern_id };
  117 |           patternAPI.emit('find_matches', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:119:11:
  117 |           patternAPI.emit('find_matches', data);
  118 |         } else {
> 119 |           console.log('UI tried to call API again, but already have results');
      |           ^
  120 |         }
  121 |       });
  122 |       patternAPI.on('find_matches_success', function(data) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:122:45:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:122:45:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:122:53:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                                     ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:122:54:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                                      ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


18 errors and 7 warnings found.
14 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:43:43 PM

 WARNING  Compiled with 5 warnings1:43:44 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => {
     |                      ^
  51 |         return [];
  52 |       },
  53 |     },


error: There should be no line break before or after '=' (operator-linebreak) at src/views/CalculatePatternView.vue:74:31:
  72 |     isLoaded() {
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
> 74 |       const negMatchesLoaded =
     |                               ^
  75 |         this.negMatches.length == this.negMatchIds.length;
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:75:32:
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
  74 |       const negMatchesLoaded =
> 75 |         this.negMatches.length == this.negMatchIds.length;
     |                                ^
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;
  78 |     },


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:87:24:
  85 |         posMatchIds,
  86 |         loadOnto,
> 87 |         targetAttribute
     |                        ^
  88 |       );
  89 |     },
  90 |     loadNegMatches() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:93:13:
  91 |       const loadOnto = this;
  92 |       const targetAttribute = 'negMatches';
> 93 |       const negMatchIds = this.negMatchIds;
     |             ^
  94 |       database.loadByIds(
  95 |         'matches_view',
  96 |         negMatchIds,


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:98:24:
   96 |         negMatchIds,
   97 |         loadOnto,
>  98 |         targetAttribute
      |                        ^
   99 |       );
  100 |     },
  101 |     setPatternAPICallbacks() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:102:13:
  100 |     },
  101 |     setPatternAPICallbacks() {
> 102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
      |             ^
  103 |       patternAPI.on('message', function(message) {
  104 |         patternAPIMessageLog.push(message);
  105 |       });


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:103:32:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:103:32:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:103:40:
  101 |     setPatternAPICallbacks() {
  102 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 103 |       patternAPI.on('message', function(message) {
      |                                        ^
  104 |         patternAPIMessageLog.push(message);
  105 |       });
  106 |       patternAPI.on('error', function(message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:106:30:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                              ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:106:30:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                              ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:106:38:
  104 |         patternAPIMessageLog.push(message);
  105 |       });
> 106 |       patternAPI.on('error', function(message) {
      |                                      ^
  107 |         patternAPIMessageLog.push(message);
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:109:13:
  107 |         patternAPIMessageLog.push(message);
  108 |       });
> 109 |       const this_ = this; // To provide this context in the socket listner
      |             ^
  110 |       patternAPI.on('build_pattern_success', function(data) {
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:110:46:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:110:46:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:110:54:
  108 |       });
  109 |       const this_ = this; // To provide this context in the socket listner
> 110 |       patternAPI.on('build_pattern_success', function(data) {
      |                                                      ^
  111 |         console.log(this_.buildPatternResultsReceived);
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:111:9:
  109 |       const this_ = this; // To provide this context in the socket listner
  110 |       patternAPI.on('build_pattern_success', function(data) {
> 111 |         console.log(this_.buildPatternResultsReceived);
      |         ^
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');
  114 |           console.log('build pattern success', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:114:11:
  112 |         if (!this_.buildPatternResultsReceived) {
  113 |           patternAPIMessageLog.push('Build pattern success');
> 114 |           console.log('build pattern success', data);
      |           ^
  115 |           this_.buildPatternResultsReceived = true;
  116 |           this_.patternResults = { patternId: data.pattern_id };
  117 |           patternAPI.emit('find_matches', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:119:11:
  117 |           patternAPI.emit('find_matches', data);
  118 |         } else {
> 119 |           console.log('UI tried to call API again, but already have results');
      |           ^
  120 |         }
  121 |       });
  122 |       patternAPI.on('find_matches_success', function(data) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:122:45:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:122:45:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:122:53:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                                     ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:122:54:
  120 |         }
  121 |       });
> 122 |       patternAPI.on('find_matches_success', function(data) {
      |                                                      ^
  123 |         patternAPIMessageLog.push('Find matches success');
  124 |       });
  125 |     },


18 errors and 7 warnings found.
14 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:44:20 PM

 WARNING  Compiled with 5 warnings1:44:21 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => {
     |                      ^
  51 |         return [];
  52 |       },
  53 |     },


error: There should be no line break before or after '=' (operator-linebreak) at src/views/CalculatePatternView.vue:74:31:
  72 |     isLoaded() {
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
> 74 |       const negMatchesLoaded =
     |                               ^
  75 |         this.negMatches.length == this.negMatchIds.length;
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:75:32:
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
  74 |       const negMatchesLoaded =
> 75 |         this.negMatches.length == this.negMatchIds.length;
     |                                ^
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;
  78 |     },


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:87:24:
  85 |         posMatchIds,
  86 |         loadOnto,
> 87 |         targetAttribute
     |                        ^
  88 |       ).then(() => {
  89 |         
  90 |       });


error: Trailing spaces not allowed (no-trailing-spaces) at src/views/CalculatePatternView.vue:89:1:
  87 |         targetAttribute
  88 |       ).then(() => {
> 89 |         
     | ^
  90 |       });
  91 |     },
  92 |     loadNegMatches() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:95:13:
  93 |       const loadOnto = this;
  94 |       const targetAttribute = 'negMatches';
> 95 |       const negMatchIds = this.negMatchIds;
     |             ^
  96 |       database.loadByIds(
  97 |         'matches_view',
  98 |         negMatchIds,


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:100:24:
   98 |         negMatchIds,
   99 |         loadOnto,
> 100 |         targetAttribute
      |                        ^
  101 |       );
  102 |     },
  103 |     setPatternAPICallbacks() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:104:13:
  102 |     },
  103 |     setPatternAPICallbacks() {
> 104 |       const patternAPIMessageLog = this.patternAPIMessageLog;
      |             ^
  105 |       patternAPI.on('message', function(message) {
  106 |         patternAPIMessageLog.push(message);
  107 |       });


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:105:32:
  103 |     setPatternAPICallbacks() {
  104 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 105 |       patternAPI.on('message', function(message) {
      |                                ^
  106 |         patternAPIMessageLog.push(message);
  107 |       });
  108 |       patternAPI.on('error', function(message) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:105:32:
  103 |     setPatternAPICallbacks() {
  104 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 105 |       patternAPI.on('message', function(message) {
      |                                ^
  106 |         patternAPIMessageLog.push(message);
  107 |       });
  108 |       patternAPI.on('error', function(message) {


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:105:40:
  103 |     setPatternAPICallbacks() {
  104 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 105 |       patternAPI.on('message', function(message) {
      |                                        ^
  106 |         patternAPIMessageLog.push(message);
  107 |       });
  108 |       patternAPI.on('error', function(message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:108:30:
  106 |         patternAPIMessageLog.push(message);
  107 |       });
> 108 |       patternAPI.on('error', function(message) {
      |                              ^
  109 |         patternAPIMessageLog.push(message);
  110 |       });
  111 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:108:30:
  106 |         patternAPIMessageLog.push(message);
  107 |       });
> 108 |       patternAPI.on('error', function(message) {
      |                              ^
  109 |         patternAPIMessageLog.push(message);
  110 |       });
  111 |       const this_ = this; // To provide this context in the socket listner


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:108:38:
  106 |         patternAPIMessageLog.push(message);
  107 |       });
> 108 |       patternAPI.on('error', function(message) {
      |                                      ^
  109 |         patternAPIMessageLog.push(message);
  110 |       });
  111 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:111:13:
  109 |         patternAPIMessageLog.push(message);
  110 |       });
> 111 |       const this_ = this; // To provide this context in the socket listner
      |             ^
  112 |       patternAPI.on('build_pattern_success', function(data) {
  113 |         console.log(this_.buildPatternResultsReceived);
  114 |         if (!this_.buildPatternResultsReceived) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:112:46:
  110 |       });
  111 |       const this_ = this; // To provide this context in the socket listner
> 112 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  113 |         console.log(this_.buildPatternResultsReceived);
  114 |         if (!this_.buildPatternResultsReceived) {
  115 |           patternAPIMessageLog.push('Build pattern success');


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:112:46:
  110 |       });
  111 |       const this_ = this; // To provide this context in the socket listner
> 112 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  113 |         console.log(this_.buildPatternResultsReceived);
  114 |         if (!this_.buildPatternResultsReceived) {
  115 |           patternAPIMessageLog.push('Build pattern success');


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:112:54:
  110 |       });
  111 |       const this_ = this; // To provide this context in the socket listner
> 112 |       patternAPI.on('build_pattern_success', function(data) {
      |                                                      ^
  113 |         console.log(this_.buildPatternResultsReceived);
  114 |         if (!this_.buildPatternResultsReceived) {
  115 |           patternAPIMessageLog.push('Build pattern success');


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:113:9:
  111 |       const this_ = this; // To provide this context in the socket listner
  112 |       patternAPI.on('build_pattern_success', function(data) {
> 113 |         console.log(this_.buildPatternResultsReceived);
      |         ^
  114 |         if (!this_.buildPatternResultsReceived) {
  115 |           patternAPIMessageLog.push('Build pattern success');
  116 |           console.log('build pattern success', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:116:11:
  114 |         if (!this_.buildPatternResultsReceived) {
  115 |           patternAPIMessageLog.push('Build pattern success');
> 116 |           console.log('build pattern success', data);
      |           ^
  117 |           this_.buildPatternResultsReceived = true;
  118 |           this_.patternResults = { patternId: data.pattern_id };
  119 |           patternAPI.emit('find_matches', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:121:11:
  119 |           patternAPI.emit('find_matches', data);
  120 |         } else {
> 121 |           console.log('UI tried to call API again, but already have results');
      |           ^
  122 |         }
  123 |       });
  124 |       patternAPI.on('find_matches_success', function(data) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:124:45:
  122 |         }
  123 |       });
> 124 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  125 |         patternAPIMessageLog.push('Find matches success');
  126 |       });
  127 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:124:45:
  122 |         }
  123 |       });
> 124 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  125 |         patternAPIMessageLog.push('Find matches success');
  126 |       });
  127 |     },


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:124:53:
  122 |         }
  123 |       });
> 124 |       patternAPI.on('find_matches_success', function(data) {
      |                                                     ^
  125 |         patternAPIMessageLog.push('Find matches success');
  126 |       });
  127 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:124:54:
  122 |         }
  123 |       });
> 124 |       patternAPI.on('find_matches_success', function(data) {
      |                                                      ^
  125 |         patternAPIMessageLog.push('Find matches success');
  126 |       });
  127 |     },


19 errors and 7 warnings found.
15 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:44:49 PM

 WARNING  Compiled with 5 warnings1:44:50 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => {
     |                      ^
  51 |         return [];
  52 |       },
  53 |     },


error: There should be no line break before or after '=' (operator-linebreak) at src/views/CalculatePatternView.vue:74:31:
  72 |     isLoaded() {
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
> 74 |       const negMatchesLoaded =
     |                               ^
  75 |         this.negMatches.length == this.negMatchIds.length;
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:75:32:
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
  74 |       const negMatchesLoaded =
> 75 |         this.negMatches.length == this.negMatchIds.length;
     |                                ^
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;
  78 |     },


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:87:24:
  85 |         posMatchIds,
  86 |         loadOnto,
> 87 |         targetAttribute
     |                        ^
  88 |       ).then(() => {
  89 |         if (this.posMatches[0].feature_dict !== undefined) {
  90 |           this.featureDict = this.posMatches[0].feature_dict


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:90:61:
  88 |       ).then(() => {
  89 |         if (this.posMatches[0].feature_dict !== undefined) {
> 90 |           this.featureDict = this.posMatches[0].feature_dict
     |                                                             ^
  91 |         }
  92 |       });
  93 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:97:13:
   95 |       const loadOnto = this;
   96 |       const targetAttribute = 'negMatches';
>  97 |       const negMatchIds = this.negMatchIds;
      |             ^
   98 |       database.loadByIds(
   99 |         'matches_view',
  100 |         negMatchIds,


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:102:24:
  100 |         negMatchIds,
  101 |         loadOnto,
> 102 |         targetAttribute
      |                        ^
  103 |       );
  104 |     },
  105 |     setPatternAPICallbacks() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:106:13:
  104 |     },
  105 |     setPatternAPICallbacks() {
> 106 |       const patternAPIMessageLog = this.patternAPIMessageLog;
      |             ^
  107 |       patternAPI.on('message', function(message) {
  108 |         patternAPIMessageLog.push(message);
  109 |       });


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:107:32:
  105 |     setPatternAPICallbacks() {
  106 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 107 |       patternAPI.on('message', function(message) {
      |                                ^
  108 |         patternAPIMessageLog.push(message);
  109 |       });
  110 |       patternAPI.on('error', function(message) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:107:32:
  105 |     setPatternAPICallbacks() {
  106 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 107 |       patternAPI.on('message', function(message) {
      |                                ^
  108 |         patternAPIMessageLog.push(message);
  109 |       });
  110 |       patternAPI.on('error', function(message) {


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:107:40:
  105 |     setPatternAPICallbacks() {
  106 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 107 |       patternAPI.on('message', function(message) {
      |                                        ^
  108 |         patternAPIMessageLog.push(message);
  109 |       });
  110 |       patternAPI.on('error', function(message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:110:30:
  108 |         patternAPIMessageLog.push(message);
  109 |       });
> 110 |       patternAPI.on('error', function(message) {
      |                              ^
  111 |         patternAPIMessageLog.push(message);
  112 |       });
  113 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:110:30:
  108 |         patternAPIMessageLog.push(message);
  109 |       });
> 110 |       patternAPI.on('error', function(message) {
      |                              ^
  111 |         patternAPIMessageLog.push(message);
  112 |       });
  113 |       const this_ = this; // To provide this context in the socket listner


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:110:38:
  108 |         patternAPIMessageLog.push(message);
  109 |       });
> 110 |       patternAPI.on('error', function(message) {
      |                                      ^
  111 |         patternAPIMessageLog.push(message);
  112 |       });
  113 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:113:13:
  111 |         patternAPIMessageLog.push(message);
  112 |       });
> 113 |       const this_ = this; // To provide this context in the socket listner
      |             ^
  114 |       patternAPI.on('build_pattern_success', function(data) {
  115 |         console.log(this_.buildPatternResultsReceived);
  116 |         if (!this_.buildPatternResultsReceived) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:114:46:
  112 |       });
  113 |       const this_ = this; // To provide this context in the socket listner
> 114 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  115 |         console.log(this_.buildPatternResultsReceived);
  116 |         if (!this_.buildPatternResultsReceived) {
  117 |           patternAPIMessageLog.push('Build pattern success');


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:114:46:
  112 |       });
  113 |       const this_ = this; // To provide this context in the socket listner
> 114 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  115 |         console.log(this_.buildPatternResultsReceived);
  116 |         if (!this_.buildPatternResultsReceived) {
  117 |           patternAPIMessageLog.push('Build pattern success');


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:114:54:
  112 |       });
  113 |       const this_ = this; // To provide this context in the socket listner
> 114 |       patternAPI.on('build_pattern_success', function(data) {
      |                                                      ^
  115 |         console.log(this_.buildPatternResultsReceived);
  116 |         if (!this_.buildPatternResultsReceived) {
  117 |           patternAPIMessageLog.push('Build pattern success');


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:115:9:
  113 |       const this_ = this; // To provide this context in the socket listner
  114 |       patternAPI.on('build_pattern_success', function(data) {
> 115 |         console.log(this_.buildPatternResultsReceived);
      |         ^
  116 |         if (!this_.buildPatternResultsReceived) {
  117 |           patternAPIMessageLog.push('Build pattern success');
  118 |           console.log('build pattern success', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:118:11:
  116 |         if (!this_.buildPatternResultsReceived) {
  117 |           patternAPIMessageLog.push('Build pattern success');
> 118 |           console.log('build pattern success', data);
      |           ^
  119 |           this_.buildPatternResultsReceived = true;
  120 |           this_.patternResults = { patternId: data.pattern_id };
  121 |           patternAPI.emit('find_matches', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:123:11:
  121 |           patternAPI.emit('find_matches', data);
  122 |         } else {
> 123 |           console.log('UI tried to call API again, but already have results');
      |           ^
  124 |         }
  125 |       });
  126 |       patternAPI.on('find_matches_success', function(data) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:126:45:
  124 |         }
  125 |       });
> 126 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  127 |         patternAPIMessageLog.push('Find matches success');
  128 |       });
  129 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:126:45:
  124 |         }
  125 |       });
> 126 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  127 |         patternAPIMessageLog.push('Find matches success');
  128 |       });
  129 |     },


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:126:53:
  124 |         }
  125 |       });
> 126 |       patternAPI.on('find_matches_success', function(data) {
      |                                                     ^
  127 |         patternAPIMessageLog.push('Find matches success');
  128 |       });
  129 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:126:54:
  124 |         }
  125 |       });
> 126 |       patternAPI.on('find_matches_success', function(data) {
      |                                                      ^
  127 |         patternAPIMessageLog.push('Find matches success');
  128 |       });
  129 |     },


19 errors and 7 warnings found.
15 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:44:51 PM

 WARNING  Compiled with 5 warnings1:44:51 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => {
     |                      ^
  51 |         return [];
  52 |       },
  53 |     },


error: There should be no line break before or after '=' (operator-linebreak) at src/views/CalculatePatternView.vue:74:31:
  72 |     isLoaded() {
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
> 74 |       const negMatchesLoaded =
     |                               ^
  75 |         this.negMatches.length == this.negMatchIds.length;
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:75:32:
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
  74 |       const negMatchesLoaded =
> 75 |         this.negMatches.length == this.negMatchIds.length;
     |                                ^
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;
  78 |     },


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:87:24:
  85 |         posMatchIds,
  86 |         loadOnto,
> 87 |         targetAttribute
     |                        ^
  88 |       ).then(() => {
  89 |         if (this.posMatches[0].feature_dict !== undefined) {
  90 |           this.featureDict = this.posMatches[0].feature_dict


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:90:61:
  88 |       ).then(() => {
  89 |         if (this.posMatches[0].feature_dict !== undefined) {
> 90 |           this.featureDict = this.posMatches[0].feature_dict
     |                                                             ^
  91 |         }
  92 |       });
  93 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:97:13:
   95 |       const loadOnto = this;
   96 |       const targetAttribute = 'negMatches';
>  97 |       const negMatchIds = this.negMatchIds;
      |             ^
   98 |       database.loadByIds(
   99 |         'matches_view',
  100 |         negMatchIds,


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:102:24:
  100 |         negMatchIds,
  101 |         loadOnto,
> 102 |         targetAttribute
      |                        ^
  103 |       );
  104 |     },
  105 |     setPatternAPICallbacks() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:106:13:
  104 |     },
  105 |     setPatternAPICallbacks() {
> 106 |       const patternAPIMessageLog = this.patternAPIMessageLog;
      |             ^
  107 |       patternAPI.on('message', function(message) {
  108 |         patternAPIMessageLog.push(message);
  109 |       });


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:107:32:
  105 |     setPatternAPICallbacks() {
  106 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 107 |       patternAPI.on('message', function(message) {
      |                                ^
  108 |         patternAPIMessageLog.push(message);
  109 |       });
  110 |       patternAPI.on('error', function(message) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:107:32:
  105 |     setPatternAPICallbacks() {
  106 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 107 |       patternAPI.on('message', function(message) {
      |                                ^
  108 |         patternAPIMessageLog.push(message);
  109 |       });
  110 |       patternAPI.on('error', function(message) {


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:107:40:
  105 |     setPatternAPICallbacks() {
  106 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 107 |       patternAPI.on('message', function(message) {
      |                                        ^
  108 |         patternAPIMessageLog.push(message);
  109 |       });
  110 |       patternAPI.on('error', function(message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:110:30:
  108 |         patternAPIMessageLog.push(message);
  109 |       });
> 110 |       patternAPI.on('error', function(message) {
      |                              ^
  111 |         patternAPIMessageLog.push(message);
  112 |       });
  113 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:110:30:
  108 |         patternAPIMessageLog.push(message);
  109 |       });
> 110 |       patternAPI.on('error', function(message) {
      |                              ^
  111 |         patternAPIMessageLog.push(message);
  112 |       });
  113 |       const this_ = this; // To provide this context in the socket listner


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:110:38:
  108 |         patternAPIMessageLog.push(message);
  109 |       });
> 110 |       patternAPI.on('error', function(message) {
      |                                      ^
  111 |         patternAPIMessageLog.push(message);
  112 |       });
  113 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:113:13:
  111 |         patternAPIMessageLog.push(message);
  112 |       });
> 113 |       const this_ = this; // To provide this context in the socket listner
      |             ^
  114 |       patternAPI.on('build_pattern_success', function(data) {
  115 |         console.log(this_.buildPatternResultsReceived);
  116 |         if (!this_.buildPatternResultsReceived) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:114:46:
  112 |       });
  113 |       const this_ = this; // To provide this context in the socket listner
> 114 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  115 |         console.log(this_.buildPatternResultsReceived);
  116 |         if (!this_.buildPatternResultsReceived) {
  117 |           patternAPIMessageLog.push('Build pattern success');


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:114:46:
  112 |       });
  113 |       const this_ = this; // To provide this context in the socket listner
> 114 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  115 |         console.log(this_.buildPatternResultsReceived);
  116 |         if (!this_.buildPatternResultsReceived) {
  117 |           patternAPIMessageLog.push('Build pattern success');


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:114:54:
  112 |       });
  113 |       const this_ = this; // To provide this context in the socket listner
> 114 |       patternAPI.on('build_pattern_success', function(data) {
      |                                                      ^
  115 |         console.log(this_.buildPatternResultsReceived);
  116 |         if (!this_.buildPatternResultsReceived) {
  117 |           patternAPIMessageLog.push('Build pattern success');


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:115:9:
  113 |       const this_ = this; // To provide this context in the socket listner
  114 |       patternAPI.on('build_pattern_success', function(data) {
> 115 |         console.log(this_.buildPatternResultsReceived);
      |         ^
  116 |         if (!this_.buildPatternResultsReceived) {
  117 |           patternAPIMessageLog.push('Build pattern success');
  118 |           console.log('build pattern success', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:118:11:
  116 |         if (!this_.buildPatternResultsReceived) {
  117 |           patternAPIMessageLog.push('Build pattern success');
> 118 |           console.log('build pattern success', data);
      |           ^
  119 |           this_.buildPatternResultsReceived = true;
  120 |           this_.patternResults = { patternId: data.pattern_id };
  121 |           patternAPI.emit('find_matches', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:123:11:
  121 |           patternAPI.emit('find_matches', data);
  122 |         } else {
> 123 |           console.log('UI tried to call API again, but already have results');
      |           ^
  124 |         }
  125 |       });
  126 |       patternAPI.on('find_matches_success', function(data) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:126:45:
  124 |         }
  125 |       });
> 126 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  127 |         patternAPIMessageLog.push('Find matches success');
  128 |       });
  129 |     },


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:126:45:
  124 |         }
  125 |       });
> 126 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  127 |         patternAPIMessageLog.push('Find matches success');
  128 |       });
  129 |     },


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:126:53:
  124 |         }
  125 |       });
> 126 |       patternAPI.on('find_matches_success', function(data) {
      |                                                     ^
  127 |         patternAPIMessageLog.push('Find matches success');
  128 |       });
  129 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:126:54:
  124 |         }
  125 |       });
> 126 |       patternAPI.on('find_matches_success', function(data) {
      |                                                      ^
  127 |         patternAPIMessageLog.push('Find matches success');
  128 |       });
  129 |     },


19 errors and 7 warnings found.
15 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:45:18 PM

 WARNING  Compiled with 5 warnings1:45:19 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:26:7:
  24 |     </b-button>
  25 |     <section id="pattern-api-message-log">
> 26 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  27 |         <strong>{{ message }}</strong>
  28 |       </p>
  29 |     </section>


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:50:22:
  48 |     negMatchIds: {
  49 |       type: Array,
> 50 |       default: () => {
     |                      ^
  51 |         return [];
  52 |       },
  53 |     },


error: There should be no line break before or after '=' (operator-linebreak) at src/views/CalculatePatternView.vue:74:31:
  72 |     isLoaded() {
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
> 74 |       const negMatchesLoaded =
     |                               ^
  75 |         this.negMatches.length == this.negMatchIds.length;
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:75:32:
  73 |       const posMatchesLoaded = this.posMatches.length > 0;
  74 |       const negMatchesLoaded =
> 75 |         this.negMatches.length == this.negMatchIds.length;
     |                                ^
  76 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  77 |       return isLoaded;
  78 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:94:13:
  92 |       const loadOnto = this;
  93 |       const targetAttribute = 'negMatches';
> 94 |       const negMatchIds = this.negMatchIds;
     |             ^
  95 |       database.loadByIds(
  96 |         'matches_view',
  97 |         negMatchIds,


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:99:24:
   97 |         negMatchIds,
   98 |         loadOnto,
>  99 |         targetAttribute
      |                        ^
  100 |       );
  101 |     },
  102 |     setPatternAPICallbacks() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:103:13:
  101 |     },
  102 |     setPatternAPICallbacks() {
> 103 |       const patternAPIMessageLog = this.patternAPIMessageLog;
      |             ^
  104 |       patternAPI.on('message', function(message) {
  105 |         patternAPIMessageLog.push(message);
  106 |       });


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:104:32:
  102 |     setPatternAPICallbacks() {
  103 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 104 |       patternAPI.on('message', function(message) {
      |                                ^
  105 |         patternAPIMessageLog.push(message);
  106 |       });
  107 |       patternAPI.on('error', function(message) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:104:32:
  102 |     setPatternAPICallbacks() {
  103 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 104 |       patternAPI.on('message', function(message) {
      |                                ^
  105 |         patternAPIMessageLog.push(message);
  106 |       });
  107 |       patternAPI.on('error', function(message) {


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:104:40:
  102 |     setPatternAPICallbacks() {
  103 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 104 |       patternAPI.on('message', function(message) {
      |                                        ^
  105 |         patternAPIMessageLog.push(message);
  106 |       });
  107 |       patternAPI.on('error', function(message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:107:30:
  105 |         patternAPIMessageLog.push(message);
  106 |       });
> 107 |       patternAPI.on('error', function(message) {
      |                              ^
  108 |         patternAPIMessageLog.push(message);
  109 |       });
  110 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:107:30:
  105 |         patternAPIMessageLog.push(message);
  106 |       });
> 107 |       patternAPI.on('error', function(message) {
      |                              ^
  108 |         patternAPIMessageLog.push(message);
  109 |       });
  110 |       const this_ = this; // To provide this context in the socket listner


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:107:38:
  105 |         patternAPIMessageLog.push(message);
  106 |       });
> 107 |       patternAPI.on('error', function(message) {
      |                                      ^
  108 |         patternAPIMessageLog.push(message);
  109 |       });
  110 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:110:13:
  108 |         patternAPIMessageLog.push(message);
  109 |       });
> 110 |       const this_ = this; // To provide this context in the socket listner
      |             ^
  111 |       patternAPI.on('build_pattern_success', function(data) {
  112 |         console.log(this_.buildPatternResultsReceived);
  113 |         if (!this_.buildPatternResultsReceived) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:111:46:
  109 |       });
  110 |       const this_ = this; // To provide this context in the socket listner
> 111 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  112 |         console.log(this_.buildPatternResultsReceived);
  113 |         if (!this_.buildPatternResultsReceived) {
  114 |           patternAPIMessageLog.push('Build pattern success');


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:111:46:
  109 |       });
  110 |       const this_ = this; // To provide this context in the socket listner
> 111 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  112 |         console.log(this_.buildPatternResultsReceived);
  113 |         if (!this_.buildPatternResultsReceived) {
  114 |           patternAPIMessageLog.push('Build pattern success');


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:111:54:
  109 |       });
  110 |       const this_ = this; // To provide this context in the socket listner
> 111 |       patternAPI.on('build_pattern_success', function(data) {
      |                                                      ^
  112 |         console.log(this_.buildPatternResultsReceived);
  113 |         if (!this_.buildPatternResultsReceived) {
  114 |           patternAPIMessageLog.push('Build pattern success');


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:112:9:
  110 |       const this_ = this; // To provide this context in the socket listner
  111 |       patternAPI.on('build_pattern_success', function(data) {
> 112 |         console.log(this_.buildPatternResultsReceived);
      |         ^
  113 |         if (!this_.buildPatternResultsReceived) {
  114 |           patternAPIMessageLog.push('Build pattern success');
  115 |           console.log('build pattern success', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:115:11:
  113 |         if (!this_.buildPatternResultsReceived) {
  114 |           patternAPIMessageLog.push('Build pattern success');
> 115 |           console.log('build pattern success', data);
      |           ^
  116 |           this_.buildPatternResultsReceived = true;
  117 |           this_.patternResults = { patternId: data.pattern_id };
  118 |           patternAPI.emit('find_matches', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:120:11:
  118 |           patternAPI.emit('find_matches', data);
  119 |         } else {
> 120 |           console.log('UI tried to call API again, but already have results');
      |           ^
  121 |         }
  122 |       });
  123 |       patternAPI.on('find_matches_success', function(data) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:123:45:
  121 |         }
  122 |       });
> 123 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  124 |         patternAPIMessageLog.push('Find matches success');
  125 |       });
  126 |     },


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:123:45:
  121 |         }
  122 |       });
> 123 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  124 |         patternAPIMessageLog.push('Find matches success');
  125 |       });
  126 |     },


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:123:53:
  121 |         }
  122 |       });
> 123 |       patternAPI.on('find_matches_success', function(data) {
      |                                                     ^
  124 |         patternAPIMessageLog.push('Find matches success');
  125 |       });
  126 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:123:54:
  121 |         }
  122 |       });
> 123 |       patternAPI.on('find_matches_success', function(data) {
      |                                                      ^
  124 |         patternAPIMessageLog.push('Find matches success');
  125 |       });
  126 |     },


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:136:7:
  134 |         featureDict: this.featureDict,
  135 |       };
> 136 |       console.log(buildPatternData)
      |       ^
  137 |       patternAPI.emit('build_pattern', buildPatternData);
  138 |     },
  139 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:136:36:
  134 |         featureDict: this.featureDict,
  135 |       };
> 136 |       console.log(buildPatternData)
      |                                    ^
  137 |       patternAPI.emit('build_pattern', buildPatternData);
  138 |     },
  139 |   },


18 errors and 8 warnings found.
14 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

 WAIT  Compiling...1:46:53 PM

 WARNING  Compiled with 5 warnings1:46:53 PM

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Custom elements in iteration require 'v-bind:key' directives (vue/valid-v-for) at src/views/CreateTrainingExampleView.vue:26:9:
  24 |       <label class="label">Load template</label>
  25 |       <div class="buttons">
> 26 |         <b-button
     |         ^
  27 |           v-for="match in trainingMatchesHistory"
  28 |           @click="
  29 |             () => {


error: '&&' should be placed at the beginning of the line (operator-linebreak) at src/views/CreateTrainingExampleView.vue:88:44:
  86 |     activeTemplateMatch() {
  87 |       if (
> 88 |         this.activeTemplateMatch != null &&
     |                                            ^
  89 |         this.activeTemplateMatch.feature_dict !== undefined
  90 |       ) {
  91 |         this.featureDictInputValue = JSON.stringify(


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:94:12:
  92 |           this.activeTemplateMatch.feature_dict,
  93 |           null,
> 94 |           2
     |            ^
  95 |         );
  96 |       }
  97 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:101:13:
   99 |   computed: {
  100 |     activeTemplateMatchSlotLabels() {
> 101 |       const activeTemplateMatch = this.activeTemplateMatch;
      |             ^
  102 |       if (activeTemplateMatch !== null) {
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;


error: Unnecessary 'else' after 'return' (no-else-return) at src/views/CreateTrainingExampleView.vue:105:14:
  103 |         const slotLabels = Object.keys(this.activeTemplateMatch.slots);
  104 |         return slotLabels;
> 105 |       } else {
      |              ^
  106 |         return null;
  107 |       }
  108 |     },


error: Expected to return a value in "activeTemplateMatchFeatureDict" computed property (vue/return-in-computed-property) at src/views/CreateTrainingExampleView.vue:109:35:
  107 |       }
  108 |     },
> 109 |     activeTemplateMatchFeatureDict() {
      |                                   ^
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
  112 |         console.log(featureDict);


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:112:9:
  110 |       const featureDict = this.activeTemplateMatch.feature_dict;
  111 |       if (featureDict !== undefined) {
> 112 |         console.log(featureDict);
      |         ^
  113 |       }
  114 |     },
  115 |   },


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:117:11:
  115 |   },
  116 |   mounted() {
> 117 |     const sentenceId = this.sentenceId;
      |           ^
  118 |     const sentenceTargetAttribute = 'sentence';
  119 |     const tokensTargetAttribute = 'tokens';
  120 |     const sentenceQuery = `sentences/?id=${sentenceId}`;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:141:15:
  139 |           headers: { order: 'match_id desc' },
  140 |         })
> 141 |         .then(rows => {
      |               ^
  142 |           const match_ids = rows.map(row => row.match_id);
  143 |           return database.loadByIds(
  144 |             'matches',


error: Identifier 'match_ids' is not in camel case (camelcase) at src/views/CreateTrainingExampleView.vue:142:17:
  140 |         })
  141 |         .then(rows => {
> 142 |           const match_ids = rows.map(row => row.match_id);
      |                 ^
  143 |           return database.loadByIds(
  144 |             'matches',
  145 |             match_ids,


error: Missing trailing comma (comma-dangle) at src/views/CreateTrainingExampleView.vue:147:37:
  145 |             match_ids,
  146 |             this,
> 147 |             'trainingMatchesHistory'
      |                                     ^
  148 |           );
  149 |         });
  150 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:158:25:
  156 |     roleSlotArrayToObj(roleSlots) {
  157 |       const obj = {};
> 158 |       roleSlots.forEach(roleSlot => {
      |                         ^
  159 |         const label = roleSlot.label;
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:159:15:
  157 |       const obj = {};
  158 |       roleSlots.forEach(roleSlot => {
> 159 |         const label = roleSlot.label;
      |               ^
  160 |         const tokens = roleSlot.tokens;
  161 |         obj[label] = tokens;
  162 |       });


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:160:15:
  158 |       roleSlots.forEach(roleSlot => {
  159 |         const label = roleSlot.label;
> 160 |         const tokens = roleSlot.tokens;
      |               ^
  161 |         obj[label] = tokens;
  162 |       });
  163 |       return obj;


error: Line 166 exceeds the maximum line length of 100 (max-len) at src/views/CreateTrainingExampleView.vue:166:1:
  164 |     },
  165 |     submitTrainingMatch() {
> 166 |       // POST training example to database. On success, show message and link to pattern table, and call pattern generation APi with training example ID. Listen, and show status in pattern table through "calculating" and "finding matches", and potentially "error".
      | ^
  167 |       this.loading = !this.loading;
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:170:13:
  168 |       const roleSlots = this.$refs.roleLabellingComponent.slots;
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
> 170 |       const featureDict = this.featureDict;
      |             ^
  171 |       const sentenceId = this.sentenceId;
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,


error: Use object destructuring (prefer-destructuring) at src/views/CreateTrainingExampleView.vue:171:13:
  169 |       const matchObj = this.roleSlotArrayToObj(roleSlots);
  170 |       const featureDict = this.featureDict;
> 171 |       const sentenceId = this.sentenceId;
      |             ^
  172 |       const matchJSON = JSON.stringify({
  173 |         slots: matchObj,
  174 |         feature_dict: featureDict,


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:180:7:
  178 |         data: matchJSON,
  179 |       };
> 180 |       console.log(data);
      |       ^
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/views/CreateTrainingExampleView.vue:181:44:
  179 |       };
  180 |       console.log(data);
> 181 |       database.post('matches/', data).then(matchRow => {
      |                                            ^
  182 |         const matchId = matchRow.id;
  183 |         console.log('match id:', matchId);
  184 |         this.loading = !this.loading;


warning: Unexpected console statement (no-console) at src/views/CreateTrainingExampleView.vue:183:9:
  181 |       database.post('matches/', data).then(matchRow => {
  182 |         const matchId = matchRow.id;
> 183 |         console.log('match id:', matchId);
      |         ^
  184 |         this.loading = !this.loading;
  185 |         router.push({
  186 |           path: '/calculate-pattern',


17 errors and 3 warnings found.
13 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:15:7:
  13 | 
  14 |     <div class="tile is-ancestor box" style="flex-wrap: wrap;">
> 15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
     |       ^
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
  17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
  18 |         </div>


error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/components/RoleLabellingComponent.vue:17:11:
  15 |       <div v-for="slot in slots" class="slot tile is-parent is-vertical is-3">
  16 |         <div :class="tokenHolderClasses(slot)" @click="activateSlot(slot.id)">
> 17 |           <span v-for="token in slot.tokens">{{ token.text }} </span>
     |           ^
  18 |         </div>
  19 | 
  20 |         <div class="slot-label tile is-child">


error: 'AnnotatedText' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:48:8:
  46 | 
  47 | <script>
> 48 | import AnnotatedText from 'vue-annotated-text';
     |        ^
  49 | import util from '../util';
  50 | 
  51 | export default {


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:59:22:
  57 |     slotLabels: {
  58 |       type: Array,
> 59 |       default: () => {
     |                      ^
  60 |         return null;
  61 |       },
  62 |     },


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:77:33:
  75 |       if (this.slotLabels) {
  76 |         this.slots = [];
> 77 |         this.slotLabels.forEach(slotLabel => {
     |                                 ^
  78 |           this.addSlot(slotLabel);
  79 |         });
  80 |       }


error: Assignment to function parameter 'newSlotLabel' (no-param-reassign) at src/components/RoleLabellingComponent.vue:106:7:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |       ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: There should be no line break before or after '=' (operator-linebreak) at src/components/RoleLabellingComponent.vue:106:21:
  104 |     addSlot(newSlotLabel) {
  105 |       const newSlotId = this.newSlotId();
> 106 |       newSlotLabel =
      |                     ^
  107 |         newSlotLabel !== undefined ? newSlotLabel : `slot${newSlotId}`;
  108 |       const newSlot = {
  109 |         ...this.defaultSlot(),


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:117:42:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                          ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:117:50:
  115 |     },
  116 |     removeSlot(slotId) {
> 117 |       const newSlots = this.slots.filter(slot => {
      |                                                  ^
  118 |         return slot.id !== slotId;
  119 |       });
  120 |       this.slots = newSlots;


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:132:39:
  130 |     },
  131 |     addOrRemoveTokenFromActiveSlot(token) {
> 132 |       const newSlots = this.slots.map(slot => {
      |                                       ^
  133 |         if (slot.id === this.activeSlotId) {
  134 |           if (!slot.tokens.includes(token)) {
  135 |             slot.tokens.push(token);


error: Assignment to property of function parameter 'slot' (no-param-reassign) at src/components/RoleLabellingComponent.vue:137:13:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |             ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected parentheses around arrow function argument having a body with curly braces (arrow-parens) at src/components/RoleLabellingComponent.vue:137:46:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/components/RoleLabellingComponent.vue:137:62:
  135 |             slot.tokens.push(token);
  136 |           } else {
> 137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
      |                                                              ^
  138 |               return tokenAlready.id != token.id;
  139 |             });
  140 |           }


error: Expected '!==' and instead saw '!=' (eqeqeq) at src/components/RoleLabellingComponent.vue:138:38:
  136 |           } else {
  137 |             slot.tokens = slot.tokens.filter(tokenAlready => {
> 138 |               return tokenAlready.id != token.id;
      |                                      ^
  139 |             });
  140 |           }
  141 |         }


error: 'annotation' is defined but never used (no-unused-vars) at src/components/RoleLabellingComponent.vue:153:24:
  151 |       return classes;
  152 |     },
> 153 |     getAnnotationColor(annotation) {
      |                        ^
  154 |       return '#42b3f4';
  155 |     },
  156 |     getSpanClasses(span) {


error: Unnecessary 'else' after 'return' (no-else-return) at src/components/RoleLabellingComponent.vue:159:14:
  157 |       if (span.annotationIds.length > 0) {
  158 |         return ['token'];
> 159 |       } else {
      |              ^
  160 |         return [];
  161 |       }
  162 |     },


16 errors found.
9 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Elements in iteration expect to have 'v-bind:key' directives (vue/require-v-for-key) at src/views/CalculatePatternView.vue:27:7:
  25 |     <br />
  26 |     <section id="pattern-api-message-log">
> 27 |       <p v-for="message in patternAPIMessageLog">
     |       ^
  28 |         <strong>{{ message }}</strong>
  29 |       </p>
  30 |     </section>


error: Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>` (arrow-body-style) at src/views/CalculatePatternView.vue:51:22:
  49 |     negMatchIds: {
  50 |       type: Array,
> 51 |       default: () => {
     |                      ^
  52 |         return [];
  53 |       },
  54 |     },


error: There should be no line break before or after '=' (operator-linebreak) at src/views/CalculatePatternView.vue:75:31:
  73 |     isLoaded() {
  74 |       const posMatchesLoaded = this.posMatches.length > 0;
> 75 |       const negMatchesLoaded =
     |                               ^
  76 |         this.negMatches.length == this.negMatchIds.length;
  77 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  78 |       return isLoaded;


error: Expected '===' and instead saw '==' (eqeqeq) at src/views/CalculatePatternView.vue:76:32:
  74 |       const posMatchesLoaded = this.posMatches.length > 0;
  75 |       const negMatchesLoaded =
> 76 |         this.negMatches.length == this.negMatchIds.length;
     |                                ^
  77 |       const isLoaded = posMatchesLoaded && negMatchesLoaded;
  78 |       return isLoaded;
  79 |     },


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:95:13:
  93 |       const loadOnto = this;
  94 |       const targetAttribute = 'negMatches';
> 95 |       const negMatchIds = this.negMatchIds;
     |             ^
  96 |       database.loadByIds(
  97 |         'matches_view',
  98 |         negMatchIds,


error: Missing trailing comma (comma-dangle) at src/views/CalculatePatternView.vue:100:24:
   98 |         negMatchIds,
   99 |         loadOnto,
> 100 |         targetAttribute
      |                        ^
  101 |       );
  102 |     },
  103 |     setPatternAPICallbacks() {


error: Use object destructuring (prefer-destructuring) at src/views/CalculatePatternView.vue:104:13:
  102 |     },
  103 |     setPatternAPICallbacks() {
> 104 |       const patternAPIMessageLog = this.patternAPIMessageLog;
      |             ^
  105 |       patternAPI.on('message', function(message) {
  106 |         patternAPIMessageLog.push(message);
  107 |       });


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:105:32:
  103 |     setPatternAPICallbacks() {
  104 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 105 |       patternAPI.on('message', function(message) {
      |                                ^
  106 |         patternAPIMessageLog.push(message);
  107 |       });
  108 |       patternAPI.on('error', function(message) {


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:105:32:
  103 |     setPatternAPICallbacks() {
  104 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 105 |       patternAPI.on('message', function(message) {
      |                                ^
  106 |         patternAPIMessageLog.push(message);
  107 |       });
  108 |       patternAPI.on('error', function(message) {


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:105:40:
  103 |     setPatternAPICallbacks() {
  104 |       const patternAPIMessageLog = this.patternAPIMessageLog;
> 105 |       patternAPI.on('message', function(message) {
      |                                        ^
  106 |         patternAPIMessageLog.push(message);
  107 |       });
  108 |       patternAPI.on('error', function(message) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:108:30:
  106 |         patternAPIMessageLog.push(message);
  107 |       });
> 108 |       patternAPI.on('error', function(message) {
      |                              ^
  109 |         patternAPIMessageLog.push(message);
  110 |       });
  111 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:108:30:
  106 |         patternAPIMessageLog.push(message);
  107 |       });
> 108 |       patternAPI.on('error', function(message) {
      |                              ^
  109 |         patternAPIMessageLog.push(message);
  110 |       });
  111 |       const this_ = this; // To provide this context in the socket listner


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:108:38:
  106 |         patternAPIMessageLog.push(message);
  107 |       });
> 108 |       patternAPI.on('error', function(message) {
      |                                      ^
  109 |         patternAPIMessageLog.push(message);
  110 |       });
  111 |       const this_ = this; // To provide this context in the socket listner


error: Unexpected dangling '_' in 'this_' (no-underscore-dangle) at src/views/CalculatePatternView.vue:111:13:
  109 |         patternAPIMessageLog.push(message);
  110 |       });
> 111 |       const this_ = this; // To provide this context in the socket listner
      |             ^
  112 |       patternAPI.on('build_pattern_success', function(data) {
  113 |         console.log(this_.buildPatternResultsReceived);
  114 |         if (!this_.buildPatternResultsReceived) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:112:46:
  110 |       });
  111 |       const this_ = this; // To provide this context in the socket listner
> 112 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  113 |         console.log(this_.buildPatternResultsReceived);
  114 |         if (!this_.buildPatternResultsReceived) {
  115 |           patternAPIMessageLog.push('Build pattern success');


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:112:46:
  110 |       });
  111 |       const this_ = this; // To provide this context in the socket listner
> 112 |       patternAPI.on('build_pattern_success', function(data) {
      |                                              ^
  113 |         console.log(this_.buildPatternResultsReceived);
  114 |         if (!this_.buildPatternResultsReceived) {
  115 |           patternAPIMessageLog.push('Build pattern success');


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:112:54:
  110 |       });
  111 |       const this_ = this; // To provide this context in the socket listner
> 112 |       patternAPI.on('build_pattern_success', function(data) {
      |                                                      ^
  113 |         console.log(this_.buildPatternResultsReceived);
  114 |         if (!this_.buildPatternResultsReceived) {
  115 |           patternAPIMessageLog.push('Build pattern success');


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:113:9:
  111 |       const this_ = this; // To provide this context in the socket listner
  112 |       patternAPI.on('build_pattern_success', function(data) {
> 113 |         console.log(this_.buildPatternResultsReceived);
      |         ^
  114 |         if (!this_.buildPatternResultsReceived) {
  115 |           patternAPIMessageLog.push('Build pattern success');
  116 |           console.log('build pattern success', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:116:11:
  114 |         if (!this_.buildPatternResultsReceived) {
  115 |           patternAPIMessageLog.push('Build pattern success');
> 116 |           console.log('build pattern success', data);
      |           ^
  117 |           this_.buildPatternResultsReceived = true;
  118 |           this_.patternResults = { patternId: data.pattern_id };
  119 |           patternAPI.emit('find_matches', data);


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:121:11:
  119 |           patternAPI.emit('find_matches', data);
  120 |         } else {
> 121 |           console.log('UI tried to call API again, but already have results');
      |           ^
  122 |         }
  123 |       });
  124 |       patternAPI.on('find_matches_success', function(data) {


warning: Unexpected unnamed function (func-names) at src/views/CalculatePatternView.vue:124:45:
  122 |         }
  123 |       });
> 124 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  125 |         patternAPIMessageLog.push('Find matches success');
  126 |       });
  127 |     },


error: Unexpected function expression (prefer-arrow-callback) at src/views/CalculatePatternView.vue:124:45:
  122 |         }
  123 |       });
> 124 |       patternAPI.on('find_matches_success', function(data) {
      |                                             ^
  125 |         patternAPIMessageLog.push('Find matches success');
  126 |       });
  127 |     },


error: Missing space before function parentheses (space-before-function-paren) at src/views/CalculatePatternView.vue:124:53:
  122 |         }
  123 |       });
> 124 |       patternAPI.on('find_matches_success', function(data) {
      |                                                     ^
  125 |         patternAPIMessageLog.push('Find matches success');
  126 |       });
  127 |     },


error: 'data' is defined but never used (no-unused-vars) at src/views/CalculatePatternView.vue:124:54:
  122 |         }
  123 |       });
> 124 |       patternAPI.on('find_matches_success', function(data) {
      |                                                      ^
  125 |         patternAPIMessageLog.push('Find matches success');
  126 |       });
  127 |     },


warning: Unexpected console statement (no-console) at src/views/CalculatePatternView.vue:137:7:
  135 |         featureDict: this.featureDict,
  136 |       };
> 137 |       console.log(buildPatternData)
      |       ^
  138 |       patternAPI.emit('build_pattern', buildPatternData);
  139 |     },
  140 |   },


error: Missing semicolon (semi) at src/views/CalculatePatternView.vue:137:36:
  135 |         featureDict: this.featureDict,
  136 |       };
> 137 |       console.log(buildPatternData)
      |                                    ^
  138 |       patternAPI.emit('build_pattern', buildPatternData);
  139 |     },
  140 |   },


18 errors and 8 warnings found.
14 errors potentially fixable with the `--fix` option.

Module Warning (from ./node_modules/eslint-loader/index.js):
error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:10:11:
   8 | 
   9 |   connect() {
> 10 |     const url = this.url;
     |           ^
  11 |     const socket = io(url);
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:13:26:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                          ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:13:34:
  11 |     const socket = io(url);
  12 |     this.socket = socket;
> 13 |     socket.on('connect', function() {
     |                                  ^
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
  16 |     socket.on('message', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:14:7:
  12 |     this.socket = socket;
  13 |     socket.on('connect', function() {
> 14 |       console.log(`connected to pattern API at ${url}`);
     |       ^
  15 |     });
  16 |     socket.on('message', function(msg) {
  17 |       console.log(msg);


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:16:26:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                          ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:16:34:
  14 |       console.log(`connected to pattern API at ${url}`);
  15 |     });
> 16 |     socket.on('message', function(msg) {
     |                                  ^
  17 |       console.log(msg);
  18 |     });
  19 |     socket.on('error', function(msg) {


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:17:7:
  15 |     });
  16 |     socket.on('message', function(msg) {
> 17 |       console.log(msg);
     |       ^
  18 |     });
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');


error: Unexpected function expression (prefer-arrow-callback) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected unnamed function (func-names) at src/pattern_api/patternAPI.js:19:24:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                        ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


error: Missing space before function parentheses (space-before-function-paren) at src/pattern_api/patternAPI.js:19:32:
  17 |       console.log(msg);
  18 |     });
> 19 |     socket.on('error', function(msg) {
     |                                ^
  20 |       console.log('error');
  21 |       console.log(msg);
  22 |     });


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:20:7:
  18 |     });
  19 |     socket.on('error', function(msg) {
> 20 |       console.log('error');
     |       ^
  21 |       console.log(msg);
  22 |     });
  23 |   }


warning: Unexpected console statement (no-console) at src/pattern_api/patternAPI.js:21:7:
  19 |     socket.on('error', function(msg) {
  20 |       console.log('error');
> 21 |       console.log(msg);
     |       ^
  22 |     });
  23 |   }
  24 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:26:11:
  24 | 
  25 |   emit(event, data) {
> 26 |     const socket = this.socket;
     |           ^
  27 |     socket.emit(event, data);
  28 |   }
  29 | 


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:31:11:
  29 | 
  30 |   on(event, callback) {
> 31 |     const socket = this.socket;
     |           ^
  32 |     this.removeCallback(event);
  33 |     socket.on(event, callback);
  34 |   }


error: Use object destructuring (prefer-destructuring) at src/pattern_api/patternAPI.js:37:11:
  35 | 
  36 |   removeCallback(event) {
> 37 |     const socket = this.socket;
     |           ^
  38 |     const eventKey = `\$${event}`;
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {


error: Unnecessary escape character: \$ (no-useless-escape) at src/pattern_api/patternAPI.js:38:23:
  36 |   removeCallback(event) {
  37 |     const socket = this.socket;
> 38 |     const eventKey = `\$${event}`;
     |                       ^
  39 |     const callbackAlready = socket._callbacks[eventKey];
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);


error: Unexpected dangling '_' in '_callbacks' (no-underscore-dangle) at src/pattern_api/patternAPI.js:39:29:
  37 |     const socket = this.socket;
  38 |     const eventKey = `\$${event}`;
> 39 |     const callbackAlready = socket._callbacks[eventKey];
     |                             ^
  40 |     if (callbackAlready !== undefined) {
  41 |       socket.off(event);
  42 |     }


12 errors and 7 warnings found.
10 errors potentially fixable with the `--fix` option.

You may use special comments to disable some warnings.
Use // eslint-disable-next-line to ignore the next line.
Use /* eslint-disable */ to ignore all warnings in a file.
 warning  in ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f&

Module Warning (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):
(Emitted value instead of an instance of Error) <b-button v-for="match in trainingMatchesHistory">: component lists rendered with v-for should have explicit keys. See https://vuejs.org/guide/list.html#key for more info.

 @ ./src/views/CreateTrainingExampleView.vue?vue&type=template&id=70d6120f& 1:0-399 1:0-399
 @ ./src/views/CreateTrainingExampleView.vue
 @ ./src/router.js
 @ ./src/main.js
 @ multi (webpack)-dev-server/client?http://192.168.1.79:8080/sockjs-node (webpack)/hot/dev-server.js ./src/main.js


  App running at:
  - Local:   http://localhost:8080/ 
  - Network: http://192.168.1.79:8080/

